[{"db_id": "network_1", "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend", "query_toks": ["SELECT", "id", "FROM", "Highschooler", "EXCEPT", "SELECT", "student_id", "FROM", "Friend"], "query_toks_no_value": ["select", "id", "from", "highschooler", "except", "select", "student_id", "from", "friend"], "question": "What are the ids of high school students who do not have friends?", "question_toks": ["what", "are", "id", "of", "high", "school", "student", "who", "do", "not", "have", "friend", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "names": ["*", "id", "name", "grade", "student id", "friend id", "student id", "liked id"], "table_names": ["high schooler", "friend", "likes"], "col_set": ["*", "id", "name", "grade", "student id", "friend id", "liked id"], "col_table": [-1, 0, 0, 0, 1, 1, 2, 2], "keys": {"5": 1, "1": 1, "4": 4, "6": 6, "7": 1}, "origin_question_toks": ["What", "are", "the", "ids", "of", "high", "school", "students", "who", "do", "not", "have", "friends", "?"], "question_arg": [["what"], ["are"], ["id"], ["of"], ["high"], ["school"], ["student", "id"], ["who"], ["do"], ["not"], ["have"], ["friend"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["id", "JJ"], ["of", "IN"], ["high", "JJ"], ["school", "NN"], ["student", "NN"], ["who", "WP"], ["do", "VBP"], ["not", "RB"], ["have", "VB"], ["friend", "NN"], ["?", "."]], "rule_label": "Root1(2) Root(5) Sel(0) N(0) A(0) C(1) T(0) Root(5) Sel(0) N(0) A(0) C(4) T(1)"}, {"db_id": "climbing", "query": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country", "query_toks": ["SELECT", "Country", ",", "COUNT", "(", "*", ")", "FROM", "climber", "GROUP", "BY", "Country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "climber", "group", "by", "country"], "question": "Please show the countries and the number of climbers from each country.", "question_toks": ["please", "show", "country", "and", "number", "of", "climber", "from", "each", "country", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["Please", "show", "the", "countries", "and", "the", "number", "of", "climbers", "from", "each", "country", "."], "question_arg": [["please"], ["show"], ["country"], ["and"], ["number"], ["of"], ["climber"], ["from"], ["each"], ["country"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["please", "VB"], ["show", "JJ"], ["country", "NN"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["climber", "NN"], ["from", "IN"], ["each", "DT"], ["country", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(6) T(1) A(3) C(0) T(1)"}, {"db_id": "activity_1", "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student", "query_toks": ["SELECT", "FacID", "FROM", "Faculty_participates_in", "INTERSECT", "SELECT", "advisor", "FROM", "Student"], "query_toks_no_value": ["select", "facid", "from", "faculty_participates_in", "intersect", "select", "advisor", "from", "student"], "question": "What are ids of the faculty members who not only participate in an activity but also advise a student.", "question_toks": ["what", "are", "id", "of", "faculty", "member", "who", "not", "only", "participate", "in", "an", "activity", "but", "also", "advise", "a", "student", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["What", "are", "ids", "of", "the", "faculty", "members", "who", "not", "only", "participate", "in", "an", "activity", "but", "also", "advise", "a", "student", "."], "question_arg": [["what"], ["are"], ["id"], ["of"], ["faculty"], ["member"], ["who"], ["not"], ["only"], ["participate"], ["in"], ["an"], ["activity"], ["but"], ["also"], ["advise"], ["a"], ["student"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["id", "JJ"], ["of", "IN"], ["faculty", "NN"], ["member", "NN"], ["who", "WP"], ["not", "RB"], ["only", "RB"], ["participate", "VB"], ["in", "IN"], ["an", "DT"], ["activity", "NN"], ["but", "CC"], ["also", "RB"], ["advise", "VB"], ["a", "DT"], ["student", "NN"], [".", "."]], "rule_label": "Root1(0) Root(5) Sel(0) N(0) A(0) C(4) T(2) Root(5) Sel(0) N(0) A(0) C(10) T(3)"}, {"db_id": "activity_1", "query": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Faculty", "WHERE", "Rank", "=", "``", "Professor", "''", "AND", "building", "=", "``", "NEB", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "faculty", "where", "rank", "=", "value", "and", "building", "=", "value"], "question": "Count the number of Professors who have office in building NEB.", "question_toks": ["count", "number", "of", "professor", "who", "have", "office", "in", "building", "neb", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 18, false], null], "\"Professor\"", null], "and", [false, 2, [0, [0, 22, false], null], "\"NEB\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["Count", "the", "number", "of", "Professors", "who", "have", "office", "in", "building", "NEB", "."], "question_arg": [["count"], ["number"], ["of"], ["professor"], ["who"], ["have"], ["office"], ["in"], ["building"], ["neb"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["count", "NN"], ["number", "NN"], ["of", "IN"], ["professor", "NN"], ["who", "WP"], ["have", "VBP"], ["office", "NN"], ["in", "IN"], ["building", "NN"], ["neb", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(4) Filter(0) Filter(2) A(0) C(12) T(4) Filter(2) A(0) C(15) T(4)"}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "WHERE", "sex", "=", "'M", "'", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "from", "student", "where", "sex", "=", "value", "group", "by", "city_code"], "question": "Find the average age and number of male students (with sex M) from each city.", "question_toks": ["find", "average", "age", "and", "number", "of", "male", "student", "(", "with", "sex", "m", ")", "from", "each", "city", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"M\"", null]], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["Find", "the", "average", "age", "and", "number", "of", "male", "students", "(", "with", "sex", "M", ")", "from", "each", "city", "."], "question_arg": [["find"], ["average"], ["age"], ["and"], ["room", "number"], ["of"], ["male"], ["student"], ["("], ["with"], ["sex"], ["m"], [")"], ["from"], ["each"], ["city", "code"], ["."]], "question_arg_type": [["NONE"], ["agg"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["find", "JJ"], ["average", "JJ"], ["age", "NN"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["male", "JJ"], ["student", "NN"], ["(", "("], ["with", "IN"], ["sex", "NN"], ["m", "NN"], [")", ")"], ["from", "IN"], ["each", "DT"], ["city", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(2) A(3) C(0) T(0) A(5) C(4) T(0) A(0) C(8) T(0) Filter(2) A(0) C(5) T(0)"}, {"db_id": "small_bank_1", "query": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "savings", "WHERE", "balance", ">", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "savings", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "savings", "where", "balance", ">", "(", "select", "avg", "(", "balance", ")", "from", "savings", ")"], "question": "Find the number of accounts with a savings balance that is higher than the average savings balance.", "question_toks": ["find", "number", "of", "account", "with", "a", "saving", "balance", "that", "is", "higher", "than", "average", "saving", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["Find", "the", "number", "of", "accounts", "with", "a", "savings", "balance", "that", "is", "higher", "than", "the", "average", "savings", "balance", "."], "question_arg": [["find"], ["number"], ["of"], ["account"], ["with"], ["a"], ["saving"], ["balance"], ["that"], ["is"], ["higher"], ["than"], ["average"], ["saving"], ["balance"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["agg"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["number", "NN"], ["of", "IN"], ["account", "NN"], ["with", "IN"], ["a", "DT"], ["saving", "VBG"], ["balance", "NN"], ["that", "WDT"], ["is", "VBZ"], ["higher", "JJR"], ["than", "IN"], ["average", "JJ"], ["saving", "JJ"], ["balance", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(13) A(0) C(3) T(1) Root(5) Sel(0) N(0) A(5) C(3) T(1)"}, {"db_id": "ship_1", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "ship", "AS", "t1", "JOIN", "captain", "AS", "t2", "ON", "t1.ship_id", "=", "t2.ship_id", "ORDER", "BY", "t2.age", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "ship", "as", "t1", "join", "captain", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "order", "by", "t2", ".", "age", "limit", "value"], "question": "What is the name of the ship that is commanded by the youngest captain?", "question_toks": ["what", "is", "name", "of", "ship", "that", "is", "commanded", "by", "youngest", "captain", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "captain id", "name", "ship id", "age", "class", "rank", "ship id", "name", "type", "built year", "class", "flag"], "table_names": ["captain", "ship"], "col_set": ["*", "captain id", "name", "ship id", "age", "class", "rank", "type", "built year", "flag"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"3": 7, "7": 7, "1": 1}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "ship", "that", "is", "commanded", "by", "the", "youngest", "captain", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["ship"], ["that"], ["is"], ["commanded"], ["by"], ["youngest"], ["captain"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["ship", "NN"], ["that", "WDT"], ["is", "VBZ"], ["commanded", "VBN"], ["by", "IN"], ["youngest", "JJS"], ["captain", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(2) T(1) Sup(1) A(0) C(4) T(0)"}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance", "query_toks": ["SELECT", "T1.name", ",", "T3.balance", "+", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T3.balance", "<", "T2.balance"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t3", ".", "balance", "+", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t3", ".", "balance", "<", "t2", ".", "balance"], "question": "What are the names of customers who have a savings balance lower than their checking balance, and what is the total of their checking and savings balances?", "question_toks": ["what", "are", "name", "of", "customer", "who", "have", "a", "saving", "balance", "lower", "than", "their", "checking", "balance", ",", "and", "what", "is", "total", "of", "their", "checking", "and", "saving", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [2, [0, 4, false], [0, 6, false]]]]], "where": [[false, 4, [0, [0, 4, false], null], [0, 6, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["What", "are", "the", "names", "of", "customers", "who", "have", "a", "savings", "balance", "lower", "than", "their", "checking", "balance", ",", "and", "what", "is", "the", "total", "of", "their", "checking", "and", "savings", "balances", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["customer", "id"], ["who"], ["have"], ["a"], ["saving"], ["balance"], ["lower"], ["than"], ["their"], ["checking"], ["balance"], [","], ["and"], ["what"], ["is"], ["total"], ["of"], ["their"], ["checking"], ["and"], ["saving"], ["balance"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["col"], ["MORE"], ["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["customer", "NN"], ["who", "WP"], ["have", "VBP"], ["a", "DT"], ["saving", "VBG"], ["balance", "NN"], ["lower", "JJR"], ["than", "IN"], ["their", "PRP$"], ["checking", "NN"], ["balance", "NN"], [",", ","], ["and", "CC"], ["what", "WP"], ["is", "VBZ"], ["total", "JJ"], ["of", "IN"], ["their", "PRP$"], ["checking", "NN"], ["and", "CC"], ["saving", "VBG"], ["balance", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(2) T(0) A(0) C(3) T(1) Filter(4) A(0) C(3) T(1)"}, {"db_id": "activity_1", "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student", "query_toks": ["SELECT", "FacID", "FROM", "Faculty", "EXCEPT", "SELECT", "advisor", "FROM", "Student"], "query_toks_no_value": ["select", "facid", "from", "faculty", "except", "select", "advisor", "from", "student"], "question": "What are the ids of the faculty members who do not advise any student.", "question_toks": ["what", "are", "id", "of", "faculty", "member", "who", "do", "not", "advise", "any", "student", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["What", "are", "the", "ids", "of", "the", "faculty", "members", "who", "do", "not", "advise", "any", "student", "."], "question_arg": [["what"], ["are"], ["id"], ["of"], ["faculty"], ["member"], ["who"], ["do"], ["not"], ["advise"], ["any"], ["student"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["id", "JJ"], ["of", "IN"], ["faculty", "NN"], ["member", "NN"], ["who", "WP"], ["do", "VBP"], ["not", "RB"], ["advise", "VB"], ["any", "DT"], ["student", "NN"], [".", "."]], "rule_label": "Root1(2) Root(5) Sel(0) N(0) A(0) C(4) T(4) Root(5) Sel(0) N(0) A(0) C(10) T(3)"}, {"db_id": "train_station", "query": "SELECT name ,  LOCATION ,  number_of_platforms FROM station", "query_toks": ["SELECT", "name", ",", "LOCATION", ",", "number_of_platforms", "FROM", "station"], "query_toks_no_value": ["select", "name", ",", "location", ",", "number_of_platforms", "from", "station"], "question": "Show the name, location, and number of platforms for all stations.", "question_toks": ["show", "name", ",", "location", ",", "and", "number", "of", "platform", "for", "all", "station", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]], [0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "name", "time", "service", "train id", "station id"], "table_names": ["station", "train", "train station"], "col_set": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "time", "service"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2], "keys": {"14": 1, "1": 1, "13": 13, "9": 9}, "origin_question_toks": ["Show", "the", "name", ",", "location", ",", "and", "number", "of", "platforms", "for", "all", "stations", "."], "question_arg": [["show"], ["name"], [","], ["location"], [","], ["and"], ["number", "of", "platform"], ["for"], ["all"], ["station"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], [",", ","], ["location", "NN"], [",", ","], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["platform", "NN"], ["for", "IN"], ["all", "DT"], ["station", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(2) A(0) C(2) T(0) A(0) C(6) T(0) A(0) C(8) T(0)"}, {"db_id": "mountain_photos", "query": "SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\"", "query_toks": ["SELECT", "name", "FROM", "camera_lens", "WHERE", "name", "LIKE", "``", "%", "Digital", "%", "''"], "query_toks_no_value": ["select", "name", "from", "camera_lens", "where", "name", "like", "value"], "question": "List the camera lens names containing substring \"Digital\".", "question_toks": ["list", "camera", "lens", "name", "containing", "substring", "'", "digital", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 9, [0, [0, 9, false], null], "\"%Digital%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "name", "height", "prominence", "range", "country", "id", "brand", "name", "focal length mm", "max aperture", "id", "camera lens id", "mountain id", "color", "name"], "table_names": ["mountain", "camera lens", "photos"], "col_set": ["*", "id", "name", "height", "prominence", "range", "country", "brand", "focal length mm", "max aperture", "camera lens id", "mountain id", "color"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "keys": {"14": 1, "1": 1, "13": 7, "7": 7, "12": 12}, "origin_question_toks": ["List", "the", "camera", "lens", "names", "containing", "substring", "``", "Digital", "''", "."], "question_arg": [["list"], ["camera", "lens"], ["name"], ["containing"], ["substring"], ["'"], ["digital"], ["'"], ["."]], "question_arg_type": [["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["list", "NN"], ["camera", "NN"], ["lens", "VBZ"], ["name", "NN"], ["containing", "VBG"], ["substring", "VBG"], ["'", "''"], ["digital", "JJ"], ["'", "POS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(9) A(0) C(2) T(1)"}, {"db_id": "csu_1", "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002", "query_toks": ["SELECT", "sum", "(", "faculty", ")", "FROM", "faculty", "WHERE", "YEAR", "=", "2002"], "query_toks_no_value": ["select", "sum", "(", "faculty", ")", "from", "faculty", "where", "year", "=", "value"], "question": "How many faculty is there in total in the year of 2002?", "question_toks": ["how", "many", "faculty", "is", "there", "in", "total", "in", "year", "of", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[4, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 2002.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "campus", "location", "county", "year", "campus", "year", "campus fee", "year", "campus", "degrees", "campus", "discipline", "year", "undergraduate", "graduate", "campus", "year", "totalenrollment ay", "fte ay", "campus", "year", "faculty"], "table_names": ["campuses", "csu fees", "degrees", "discipline enrollments", "enrollments", "faculty"], "col_set": ["*", "id", "campus", "location", "county", "year", "campus fee", "degrees", "discipline", "undergraduate", "graduate", "totalenrollment ay", "fte ay", "faculty"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5], "keys": {"6": 6, "1": 1, "10": 1, "12": 12, "17": 17, "21": 1, "9": 9}, "origin_question_toks": ["How", "many", "faculty", "is", "there", "in", "total", "in", "the", "year", "of", "2002", "?"], "question_arg": [["how"], ["many"], ["faculty"], ["is"], ["there"], ["in"], ["total"], ["in"], ["year"], ["of"], ["year"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["faculty", "NN"], ["is", "VBZ"], ["there", "RB"], ["in", "IN"], ["total", "NN"], ["in", "IN"], ["year", "NN"], ["of", "IN"], ["2002", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(4) C(13) T(5) Filter(2) A(0) C(5) T(5)"}, {"db_id": "activity_1", "query": "SELECT activity_name FROM Activity", "query_toks": ["SELECT", "activity_name", "FROM", "Activity"], "query_toks_no_value": ["select", "activity_name", "from", "activity"], "question": "List all the activities we have.", "question_toks": ["list", "all", "activity", "we", "have", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["List", "all", "the", "activities", "we", "have", "."], "question_arg": [["list"], ["all"], ["activity"], ["we"], ["have"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["list", "NN"], ["all", "DT"], ["activity", "NN"], ["we", "PRP"], ["have", "VBP"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(0) C(2) T(0)"}, {"db_id": "dorm_1", "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name", "query_toks": ["SELECT", "T1.amenity_name", "FROM", "dorm_amenity", "AS", "T1", "JOIN", "has_amenity", "AS", "T2", "ON", "T2.amenid", "=", "T1.amenid", "JOIN", "dorm", "AS", "T3", "ON", "T2.dormid", "=", "T3.dormid", "WHERE", "T3.dorm_name", "=", "'Anonymous", "Donor", "Hall", "'", "ORDER", "BY", "T1.amenity_name"], "query_toks_no_value": ["select", "t1", ".", "amenity_name", "from", "dorm_amenity", "as", "t1", "join", "has_amenity", "as", "t2", "on", "t2", ".", "amenid", "=", "t1", ".", "amenid", "join", "dorm", "as", "t3", "on", "t2", ".", "dormid", "=", "t3", ".", "dormid", "where", "t3", ".", "dorm_name", "=", "value", "order", "by", "t1", ".", "amenity_name"], "question": "List name of all amenities which Anonymous Donor Hall has, and sort the results in alphabetic order.", "question_toks": ["list", "name", "of", "all", "amenity", "which", "anonymous", "donor", "hall", "ha", ",", "and", "sort", "result", "in", "alphabetic", "order", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null], "and", [false, 2, [0, [0, 15, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Anonymous Donor Hall\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["List", "name", "of", "all", "amenities", "which", "Anonymous", "Donor", "Hall", "has", ",", "and", "sort", "the", "results", "in", "alphabetic", "order", "."], "question_arg": [["list"], ["name"], ["of"], ["all"], ["amenity"], ["which"], ["anonymous"], ["donor"], ["hall"], ["ha"], [","], ["and"], ["sort"], ["result"], ["in"], ["alphabetic"], ["order"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["list", "NN"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["amenity", "NN"], ["which", "WDT"], ["anonymous", "JJ"], ["donor", "NN"], ["hall", "NN"], ["ha", "NN"], [",", ","], ["and", "CC"], ["sort", "NN"], ["result", "NN"], ["in", "IN"], ["alphabetic", "JJ"], ["order", "NN"], [".", "."]], "rule_label": "Root1(3) Root(1) Sel(0) N(0) A(0) C(14) T(2) Filter(2) A(0) C(10) T(1) Order(1) A(0) C(14) T(2)"}, {"db_id": "train_station", "query": "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  \"London\")", "query_toks": ["SELECT", "T2.name", "FROM", "train_station", "AS", "T1", "JOIN", "train", "AS", "T2", "ON", "T1.train_id", "=", "T2.train_id", "WHERE", "T1.station_id", "NOT", "IN", "(", "SELECT", "T4.station_id", "FROM", "train_station", "AS", "T3", "JOIN", "station", "AS", "T4", "ON", "T3.station_id", "=", "T4.station_id", "WHERE", "t4.location", "=", "``", "London", "''", ")"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "train_station", "as", "t1", "join", "train", "as", "t2", "on", "t1", ".", "train_id", "=", "t2", ".", "train_id", "where", "t1", ".", "station_id", "not", "in", "(", "select", "t4", ".", "station_id", "from", "train_station", "as", "t3", "join", "station", "as", "t4", "on", "t3", ".", "station_id", "=", "t4", ".", "station_id", "where", "t4", ".", "location", "=", "value", ")"], "question": "Find the names of the trains that do not pass any station located in London.", "question_toks": ["find", "name", "of", "train", "that", "do", "not", "pas", "any", "station", "located", "in", "london", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"London\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "name", "time", "service", "train id", "station id"], "table_names": ["station", "train", "train station"], "col_set": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "time", "service"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2], "keys": {"14": 1, "1": 1, "13": 13, "9": 9}, "origin_question_toks": ["Find", "the", "names", "of", "the", "trains", "that", "do", "not", "pass", "any", "station", "located", "in", "London", "."], "question_arg": [["find"], ["name"], ["of"], ["train"], ["that"], ["do"], ["not"], ["pas"], ["any"], ["station"], ["located"], ["in"], ["london"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["train", "NN"], ["that", "WDT"], ["do", "VBP"], ["not", "RB"], ["pas", "VB"], ["any", "DT"], ["station", "NN"], ["located", "VBN"], ["in", "IN"], ["london", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(19) A(0) C(1) T(2) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(6) T(0)"}, {"db_id": "csu_1", "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1", "query_toks": ["SELECT", "campus", "FROM", "degrees", "GROUP", "BY", "campus", "ORDER", "BY", "sum", "(", "degrees", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "campus", "from", "degrees", "group", "by", "campus", "order", "by", "sum", "(", "degrees", ")", "desc", "limit", "value"], "question": "What campus has the most degrees  conferrred over its entire existence?", "question_toks": ["what", "campus", "ha", "most", "degree", "conferrred", "over", "it", "entire", "existence", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [4, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "campus", "location", "county", "year", "campus", "year", "campus fee", "year", "campus", "degrees", "campus", "discipline", "year", "undergraduate", "graduate", "campus", "year", "totalenrollment ay", "fte ay", "campus", "year", "faculty"], "table_names": ["campuses", "csu fees", "degrees", "discipline enrollments", "enrollments", "faculty"], "col_set": ["*", "id", "campus", "location", "county", "year", "campus fee", "degrees", "discipline", "undergraduate", "graduate", "totalenrollment ay", "fte ay", "faculty"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5], "keys": {"6": 6, "1": 1, "10": 1, "12": 12, "17": 17, "21": 1, "9": 9}, "origin_question_toks": ["What", "campus", "has", "the", "most", "degrees", "conferrred", "over", "its", "entire", "existence", "?"], "question_arg": [["what"], ["campus"], ["ha"], ["most"], ["degree"], ["conferrred"], ["over"], ["it"], ["entire"], ["existence"], ["?"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["campus", "NN"], ["ha", "NN"], ["most", "RBS"], ["degree", "JJ"], ["conferrred", "VBN"], ["over", "IN"], ["it", "PRP"], ["entire", "JJ"], ["existence", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(2) T(2) Sup(0) A(4) C(7) T(2)"}, {"db_id": "network_1", "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "GROUP", "BY", "T1.student_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "group", "by", "t1", ".", "student_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the high schooler who has the greatest number of likes?", "question_toks": ["what", "is", "name", "of", "high", "schooler", "who", "ha", "greatest", "number", "of", "like", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "name", "grade", "student id", "friend id", "student id", "liked id"], "table_names": ["high schooler", "friend", "likes"], "col_set": ["*", "id", "name", "grade", "student id", "friend id", "liked id"], "col_table": [-1, 0, 0, 0, 1, 1, 2, 2], "keys": {"5": 1, "1": 1, "4": 4, "6": 6, "7": 1}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "high", "schooler", "who", "has", "the", "greatest", "number", "of", "likes", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["high", "schooler"], ["who"], ["ha"], ["greatest"], ["number"], ["of"], ["like"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["high", "JJ"], ["schooler", "NN"], ["who", "WP"], ["ha", "VBZ"], ["greatest", "JJS"], ["number", "NN"], ["of", "IN"], ["like", "IN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(2) T(0) Sup(0) A(3) C(0) T(2)"}, {"db_id": "small_bank_1", "query": "SELECT avg(balance) FROM checking", "query_toks": ["SELECT", "avg", "(", "balance", ")", "FROM", "checking"], "query_toks_no_value": ["select", "avg", "(", "balance", ")", "from", "checking"], "question": "Find the average checking balance.", "question_toks": ["find", "average", "checking", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["Find", "the", "average", "checking", "balance", "."], "question_arg": [["find"], ["average"], ["checking"], ["balance"], ["."]], "question_arg_type": [["NONE"], ["agg"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["find", "JJ"], ["average", "JJ"], ["checking", "VBG"], ["balance", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(5) C(3) T(2)"}, {"db_id": "network_1", "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id", "query_toks": ["SELECT", "T2.name", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "INTERSECT", "SELECT", "T2.name", "FROM", "Likes", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.liked_id", "=", "T2.id"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "intersect", "select", "t2", ".", "name", "from", "likes", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "liked_id", "=", "t2", ".", "id"], "question": "What are the names of high schoolers who both have friends and are liked?", "question_toks": ["what", "are", "name", "of", "high", "schoolers", "who", "both", "have", "friend", "and", "are", "liked", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "id", "name", "grade", "student id", "friend id", "student id", "liked id"], "table_names": ["high schooler", "friend", "likes"], "col_set": ["*", "id", "name", "grade", "student id", "friend id", "liked id"], "col_table": [-1, 0, 0, 0, 1, 1, 2, 2], "keys": {"5": 1, "1": 1, "4": 4, "6": 6, "7": 1}, "origin_question_toks": ["What", "are", "the", "names", "of", "high", "schoolers", "who", "both", "have", "friends", "and", "are", "liked", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["high"], ["schoolers"], ["who"], ["both"], ["have"], ["friend"], ["and"], ["are"], ["liked", "id"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["high", "JJ"], ["schoolers", "NNS"], ["who", "WP"], ["both", "DT"], ["have", "VBP"], ["friend", "NN"], ["and", "CC"], ["are", "VBP"], ["liked", "VBN"], ["?", "."]], "rule_label": "Root1(0) Root(5) Sel(0) N(0) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(0) C(2) T(0)"}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "sex", "FROM", "student", "WHERE", "age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "student", ")", "GROUP", "BY", "sex"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "sex", "from", "student", "where", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "student", ")", "group", "by", "sex"], "question": "Find the number of students whose age is older than the average age for each gender.", "question_toks": ["find", "number", "of", "student", "whose", "age", "is", "older", "than", "average", "age", "for", "each", "gender", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["Find", "the", "number", "of", "students", "whose", "age", "is", "older", "than", "the", "average", "age", "for", "each", "gender", "."], "question_arg": [["find"], ["room", "number"], ["of"], ["student"], ["whose"], ["age"], ["is"], ["older"], ["than"], ["average"], ["age"], ["for"], ["each"], ["gender"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["MORE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["number", "NN"], ["of", "IN"], ["student", "NN"], ["whose", "WP$"], ["age", "NN"], ["is", "VBZ"], ["older", "JJR"], ["than", "IN"], ["average", "JJ"], ["age", "NN"], ["for", "IN"], ["each", "DT"], ["gender", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(3) C(0) T(0) A(0) C(5) T(0) Filter(13) A(0) C(4) T(0) Root(5) Sel(0) N(0) A(5) C(4) T(0)"}, {"db_id": "activity_1", "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in", "query_toks": ["SELECT", "count", "(", "DISTINCT", "FacID", ")", "FROM", "Faculty_participates_in"], "query_toks_no_value": ["select", "count", "(", "distinct", "facid", ")", "from", "faculty_participates_in"], "question": "How many faculty members participate in an activity?", "question_toks": ["how", "many", "faculty", "member", "participate", "in", "an", "activity", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 5, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["How", "many", "faculty", "members", "participate", "in", "an", "activity", "?"], "question_arg": [["how"], ["many"], ["faculty"], ["member"], ["participate"], ["in"], ["an"], ["activity"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["faculty", "NN"], ["member", "NN"], ["participate", "NN"], ["in", "IN"], ["an", "DT"], ["activity", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(4) T(2)"}, {"db_id": "small_bank_1", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)", "query_toks": ["SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", ">", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "checking", ")", "INTERSECT", "SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", "<", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "savings", ")"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", ">", "(", "select", "avg", "(", "balance", ")", "from", "checking", ")", "intersect", "select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", "<", "(", "select", "avg", "(", "balance", ")", "from", "savings", ")"], "question": "Find the names of accounts whose checking balance is above the average checking balance, but savings balance is below the average savings balance.", "question_toks": ["find", "name", "of", "account", "whose", "checking", "balance", "is", "above", "average", "checking", "balance", ",", "but", "saving", "balance", "is", "below", "average", "saving", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["Find", "the", "names", "of", "accounts", "whose", "checking", "balance", "is", "above", "the", "average", "checking", "balance", ",", "but", "savings", "balance", "is", "below", "the", "average", "savings", "balance", "."], "question_arg": [["find"], ["name"], ["of"], ["account"], ["whose"], ["checking"], ["balance"], ["is"], ["above"], ["average"], ["checking"], ["balance"], [","], ["but"], ["saving"], ["balance"], ["is"], ["below"], ["average"], ["saving"], ["balance"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["agg"], ["table"], ["col"], ["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["agg"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["account", "NN"], ["whose", "WP$"], ["checking", "VBG"], ["balance", "NN"], ["is", "VBZ"], ["above", "JJ"], ["average", "JJ"], ["checking", "VBG"], ["balance", "NN"], [",", ","], ["but", "CC"], ["saving", "VBG"], ["balance", "NN"], ["is", "VBZ"], ["below", "JJ"], ["average", "JJ"], ["saving", "VBG"], ["balance", "NN"], [".", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(13) A(0) C(3) T(1) Root(5) Sel(0) N(0) A(5) C(3) T(2) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(12) A(0) C(3) T(1) Root(5) Sel(0) N(0) A(5) C(3) T(1)"}, {"db_id": "mountain_photos", "query": "SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Lasta Massif'", "query_toks": ["SELECT", "T3.brand", "FROM", "mountain", "AS", "T1", "JOIN", "photos", "AS", "T2", "ON", "T1.id", "=", "T2.mountain_id", "JOIN", "camera_lens", "AS", "T3", "ON", "T2.camera_lens_id", "=", "T3.id", "WHERE", "T1.range", "=", "'Toubkal", "Atlas", "'", "INTERSECT", "SELECT", "T3.brand", "FROM", "mountain", "AS", "T1", "JOIN", "photos", "AS", "T2", "ON", "T1.id", "=", "T2.mountain_id", "JOIN", "camera_lens", "AS", "T3", "ON", "T2.camera_lens_id", "=", "T3.id", "WHERE", "T1.range", "=", "'Lasta", "Massif", "'"], "query_toks_no_value": ["select", "t3", ".", "brand", "from", "mountain", "as", "t1", "join", "photos", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "mountain_id", "join", "camera_lens", "as", "t3", "on", "t2", ".", "camera_lens_id", "=", "t3", ".", "id", "where", "t1", ".", "range", "=", "value", "intersect", "select", "t3", ".", "brand", "from", "mountain", "as", "t1", "join", "photos", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "mountain_id", "join", "camera_lens", "as", "t3", "on", "t2", ".", "camera_lens_id", "=", "t3", ".", "id", "where", "t1", ".", "range", "=", "value"], "question": "List the brands of lenses that took both a picture of mountains with range 'Toubkal Atlas' and a picture of mountains with range 'Lasta Massif'", "question_toks": ["list", "brand", "of", "lens", "that", "took", "both", "a", "picture", "of", "mountain", "with", "range", "'", "toubkal", "atlas", "'", "and", "a", "picture", "of", "mountain", "with", "range", "'", "lasta", "massif", "'"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Toubkal Atlas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 14, false], null], "and", [false, 2, [0, [0, 13, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Lasta Massif\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "id", "name", "height", "prominence", "range", "country", "id", "brand", "name", "focal length mm", "max aperture", "id", "camera lens id", "mountain id", "color", "name"], "table_names": ["mountain", "camera lens", "photos"], "col_set": ["*", "id", "name", "height", "prominence", "range", "country", "brand", "focal length mm", "max aperture", "camera lens id", "mountain id", "color"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "keys": {"14": 1, "1": 1, "13": 7, "7": 7, "12": 12}, "origin_question_toks": ["List", "the", "brands", "of", "lenses", "that", "took", "both", "a", "picture", "of", "mountains", "with", "range", "'Toubkal", "Atlas", "'", "and", "a", "picture", "of", "mountains", "with", "range", "'Lasta", "Massif", "'"], "question_arg": [["list"], ["brand"], ["of"], ["lens"], ["that"], ["took"], ["both"], ["a"], ["picture"], ["of"], ["mountain"], ["with"], ["range"], ["'"], ["toubkal"], ["atlas"], ["'"], ["and"], ["a"], ["picture"], ["of"], ["mountain"], ["with"], ["range"], ["'"], ["lasta"], ["massif"], ["'"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["list", "NN"], ["brand", "NN"], ["of", "IN"], ["lens", "NNS"], ["that", "WDT"], ["took", "VBD"], ["both", "DT"], ["a", "DT"], ["picture", "NN"], ["of", "IN"], ["mountain", "NN"], ["with", "IN"], ["range", "NN"], ["'", "''"], ["toubkal", "JJ"], ["atlas", "NNS"], ["'", "POS"], ["and", "CC"], ["a", "DT"], ["picture", "NN"], ["of", "IN"], ["mountain", "NN"], ["with", "IN"], ["range", "NN"], ["'", "''"], ["lasta", "JJ"], ["massif", "NN"], ["'", "''"]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(2) A(0) C(5) T(0) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(2) A(0) C(5) T(0)"}, {"db_id": "network_1", "query": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Friend", "AS", "T1", "JOIN", "Highschooler", "AS", "T2", "ON", "T1.student_id", "=", "T2.id", "WHERE", "T2.name", "=", "``", "Kyle", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "friend", "as", "t1", "join", "highschooler", "as", "t2", "on", "t1", ".", "student_id", "=", "t2", ".", "id", "where", "t2", ".", "name", "=", "value"], "question": "How many friends does the high school student Kyle have?", "question_toks": ["how", "many", "friend", "doe", "high", "school", "student", "kyle", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Kyle\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "name", "grade", "student id", "friend id", "student id", "liked id"], "table_names": ["high schooler", "friend", "likes"], "col_set": ["*", "id", "name", "grade", "student id", "friend id", "liked id"], "col_table": [-1, 0, 0, 0, 1, 1, 2, 2], "keys": {"5": 1, "1": 1, "4": 4, "6": 6, "7": 1}, "origin_question_toks": ["How", "many", "friends", "does", "the", "high", "school", "student", "Kyle", "have", "?"], "question_arg": [["how"], ["many"], ["friend"], ["doe"], ["high"], ["school"], ["student", "id"], ["kyle"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["friend", "VBP"], ["doe", "JJ"], ["high", "JJ"], ["school", "NN"], ["student", "NN"], ["kyle", "NN"], ["have", "VBP"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(2) A(0) C(2) T(0)"}, {"db_id": "climbing", "query": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Name", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "name", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id"], "question": "Show names of climbers and the names of mountains they climb.", "question_toks": ["show", "name", "of", "climber", "and", "name", "of", "mountain", "they", "climb", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["Show", "names", "of", "climbers", "and", "the", "names", "of", "mountains", "they", "climb", "."], "question_arg": [["show"], ["name"], ["of"], ["climber"], ["and"], ["name"], ["of"], ["mountain"], ["they"], ["climb"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["of", "IN"], ["climber", "NN"], ["and", "CC"], ["name", "NN"], ["of", "IN"], ["mountain", "NN"], ["they", "PRP"], ["climb", "VBP"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(2) T(1) A(0) C(2) T(0)"}, {"db_id": "activity_1", "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.activity_name", "FROM", "Activity", "AS", "T1", "JOIN", "Participates_in", "AS", "T2", "ON", "T1.actID", "=", "T2.actID", "GROUP", "BY", "T1.actID", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "activity_name", "from", "activity", "as", "t1", "join", "participates_in", "as", "t2", "on", "t1", ".", "actid", "=", "t2", ".", "actid", "group", "by", "t1", ".", "actid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name of the activity that has the largest number of student participants.", "question_toks": ["find", "name", "of", "activity", "that", "ha", "largest", "number", "of", "student", "participant", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["Find", "the", "name", "of", "the", "activity", "that", "has", "the", "largest", "number", "of", "student", "participants", "."], "question_arg": [["find"], ["name"], ["of"], ["activity"], ["that"], ["ha"], ["largest"], ["number"], ["of"], ["student"], ["participant"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["activity", "NN"], ["that", "IN"], ["ha", "VBZ"], ["largest", "JJS"], ["number", "NN"], ["of", "IN"], ["student", "NN"], ["participant", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(2) T(0) Sup(0) A(3) C(0) T(1)"}, {"db_id": "dorm_1", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "query_toks": ["SELECT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "NOT", "IN", "(", "SELECT", "T3.dormid", "FROM", "has_amenity", "AS", "T3", "JOIN", "dorm_amenity", "AS", "T4", "ON", "T3.amenid", "=", "T4.amenid", "WHERE", "T4.amenity_name", "=", "'TV", "Lounge", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "not", "in", "(", "select", "t3", ".", "dormid", "from", "has_amenity", "as", "t3", "join", "dorm_amenity", "as", "t4", "on", "t3", ".", "amenid", "=", "t4", ".", "amenid", "where", "t4", ".", "amenity_name", "=", "value", ")"], "question": "What is the first name and age of every student who lives in a dorm with a TV Lounge?", "question_toks": ["what", "is", "first", "name", "and", "age", "of", "every", "student", "who", "life", "in", "a", "dorm", "with", "a", "tv", "lounge", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"TV Lounge\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["What", "is", "the", "first", "name", "and", "age", "of", "every", "student", "who", "lives", "in", "a", "dorm", "with", "a", "TV", "Lounge", "?"], "question_arg": [["what"], ["is"], ["first", "name"], ["and"], ["age"], ["of"], ["every"], ["student"], ["who"], ["life", "in"], ["a"], ["dorm"], ["with"], ["a"], ["tv"], ["lounge"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["table"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["first", "JJ"], ["name", "NN"], ["and", "CC"], ["age", "NN"], ["of", "IN"], ["every", "DT"], ["student", "NN"], ["who", "WP"], ["life", "NN"], ["in", "IN"], ["a", "DT"], ["dorm", "NN"], ["with", "IN"], ["a", "DT"], ["tv", "NN"], ["lounge", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(3) T(0) A(0) C(4) T(0) Filter(19) A(0) C(9) T(4) Root(3) Sel(0) N(0) A(0) C(9) T(3) Filter(2) A(0) C(14) T(2)"}, {"db_id": "climbing", "query": "SELECT count(*) FROM climber", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "climber"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "climber"], "question": "How many climbers are there?", "question_toks": ["how", "many", "climber", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["How", "many", "climbers", "are", "there", "?"], "question_arg": [["how"], ["many"], ["climber"], ["are"], ["there"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["climber", "NN"], ["are", "VBP"], ["there", "RB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(1)"}, {"db_id": "machine_repair", "query": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)", "query_toks": ["SELECT", "Name", "FROM", "technician", "WHERE", "technician_id", "NOT", "IN", "(", "SELECT", "technician_id", "FROM", "repair_assignment", ")"], "query_toks_no_value": ["select", "name", "from", "technician", "where", "technician_id", "not", "in", "(", "select", "technician_id", "from", "repair_assignment", ")"], "question": "What are the names of the technicians that have not been assigned to repair machines?", "question_toks": ["what", "are", "name", "of", "technician", "that", "have", "not", "been", "assigned", "to", "repair", "machine", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[true, 8, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "repair id", "name", "launch date", "notes", "machine id", "making year", "class", "team", "machine series", "value points", "quality rank", "technician id", "name", "team", "starting year", "age", "technician id", "repair id", "machine id"], "table_names": ["repair", "machine", "technician", "repair assignment"], "col_set": ["*", "repair id", "name", "launch date", "notes", "machine id", "making year", "class", "team", "machine series", "value points", "quality rank", "technician id", "starting year", "age"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3], "keys": {"19": 5, "5": 5, "18": 1, "1": 1, "17": 17, "12": 12}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "technicians", "that", "have", "not", "been", "assigned", "to", "repair", "machines", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["technician"], ["that"], ["have"], ["not"], ["been"], ["assigned"], ["to"], ["repair"], ["machine"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["technician", "NN"], ["that", "WDT"], ["have", "VBP"], ["not", "RB"], ["been", "VBN"], ["assigned", "VBN"], ["to", "TO"], ["repair", "VB"], ["machine", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(2) Filter(19) A(0) C(12) T(2) Root(5) Sel(0) N(0) A(0) C(12) T(3)"}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T3.balance", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t3", ".", "balance", "limit", "value"], "question": "What are the names and balances of checking accounts belonging to the customer with the lowest savings balance?", "question_toks": ["what", "are", "name", "and", "balance", "of", "checking", "account", "belonging", "to", "customer", "with", "lowest", "saving", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["What", "are", "the", "names", "and", "balances", "of", "checking", "accounts", "belonging", "to", "the", "customer", "with", "the", "lowest", "savings", "balance", "?"], "question_arg": [["what"], ["are"], ["name"], ["and"], ["balance"], ["of"], ["checking"], ["account"], ["belonging"], ["to"], ["customer", "id"], ["with"], ["lowest"], ["saving"], ["balance"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "JJ"], ["and", "CC"], ["balance", "NN"], ["of", "IN"], ["checking", "VBG"], ["account", "NN"], ["belonging", "VBG"], ["to", "TO"], ["customer", "NN"], ["with", "IN"], ["lowest", "JJ"], ["saving", "VBG"], ["balance", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(2) T(0) A(0) C(3) T(2) Sup(1) A(0) C(3) T(1)"}, {"db_id": "climbing", "query": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3", "query_toks": ["SELECT", "DISTINCT", "Range", "FROM", "mountain", "ORDER", "BY", "Prominence", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "distinct", "range", "from", "mountain", "order", "by", "prominence", "desc", "limit", "value"], "question": "List the distinct ranges of the mountains with the top 3 prominence.", "question_toks": ["list", "distinct", "range", "of", "mountain", "with", "top", "3", "prominence", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["List", "the", "distinct", "ranges", "of", "the", "mountains", "with", "the", "top", "3", "prominence", "."], "question_arg": [["list"], ["distinct"], ["range"], ["of"], ["mountain"], ["with"], ["top"], ["3"], ["prominence"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["value"], ["col"], ["NONE"]], "nltk_pos": [["list", "NN"], ["distinct", "JJ"], ["range", "NN"], ["of", "IN"], ["mountain", "NN"], ["with", "IN"], ["top", "JJ"], ["3", "CD"], ["prominence", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(5) T(0) Sup(0) A(0) C(4) T(0)"}, {"db_id": "course_teach", "query": "SELECT Name FROM teacher ORDER BY Age ASC", "query_toks": ["SELECT", "Name", "FROM", "teacher", "ORDER", "BY", "Age", "ASC"], "query_toks_no_value": ["select", "name", "from", "teacher", "order", "by", "age", "asc"], "question": "What are the names of the teachers ordered by ascending age?", "question_toks": ["what", "are", "name", "of", "teacher", "ordered", "by", "ascending", "age", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "course id", "staring date", "course", "teacher id", "name", "age", "hometown", "course id", "teacher id", "grade"], "table_names": ["course", "teacher", "course arrange"], "col_set": ["*", "course id", "staring date", "course", "teacher id", "name", "age", "hometown", "grade"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 4, "4": 4, "8": 8, "1": 1}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "teachers", "ordered", "by", "ascending", "age", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["teacher"], ["ordered"], ["by"], ["ascending"], ["age"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["teacher", "NN"], ["ordered", "VBN"], ["by", "IN"], ["ascending", "VBG"], ["age", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(0) A(0) C(5) T(1) Order(1) A(0) C(6) T(1)"}, {"db_id": "csu_1", "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1", "query_toks": ["SELECT", "T2.faculty", "FROM", "campuses", "AS", "T1", "JOIN", "faculty", "AS", "T2", "ON", "T1.id", "=", "t2.campus", "JOIN", "degrees", "AS", "T3", "ON", "T1.id", "=", "t3.campus", "AND", "t2.year", "=", "t3.year", "WHERE", "t2.year", "=", "2001", "ORDER", "BY", "t3.degrees", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "faculty", "from", "campuses", "as", "t1", "join", "faculty", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "join", "degrees", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "campus", "and", "t2", ".", "year", "=", "t3", ".", "year", "where", "t2", ".", "year", "=", "value", "order", "by", "t3", ".", "degrees", "limit", "value"], "question": "How many faculty members are at the university that gave the least number of degrees in 2001?", "question_toks": ["how", "many", "faculty", "member", "are", "at", "university", "that", "gave", "least", "number", "of", "degree", "in", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 5], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 21, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 22, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], 2001.0, null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "campus", "location", "county", "year", "campus", "year", "campus fee", "year", "campus", "degrees", "campus", "discipline", "year", "undergraduate", "graduate", "campus", "year", "totalenrollment ay", "fte ay", "campus", "year", "faculty"], "table_names": ["campuses", "csu fees", "degrees", "discipline enrollments", "enrollments", "faculty"], "col_set": ["*", "id", "campus", "location", "county", "year", "campus fee", "degrees", "discipline", "undergraduate", "graduate", "totalenrollment ay", "fte ay", "faculty"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5], "keys": {"6": 6, "1": 1, "10": 1, "12": 12, "17": 17, "21": 1, "9": 9}, "origin_question_toks": ["How", "many", "faculty", "members", "are", "at", "the", "university", "that", "gave", "the", "least", "number", "of", "degrees", "in", "2001", "?"], "question_arg": [["how"], ["many"], ["faculty"], ["member"], ["are"], ["at"], ["university"], ["that"], ["gave"], ["least"], ["number"], ["of"], ["degree"], ["in"], ["year"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["faculty", "NN"], ["member", "NN"], ["are", "VBP"], ["at", "IN"], ["university", "NN"], ["that", "WDT"], ["gave", "VBD"], ["least", "JJS"], ["number", "NN"], ["of", "IN"], ["degree", "NN"], ["in", "IN"], ["2001", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(0) Sel(0) N(0) A(0) C(13) T(5) Sup(1) A(0) C(7) T(2) Filter(2) A(0) C(5) T(5)"}, {"db_id": "dorm_1", "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100", "query_toks": ["SELECT", "dorm_name", ",", "gender", "FROM", "dorm", "WHERE", "student_capacity", ">", "300", "OR", "student_capacity", "<", "100"], "query_toks_no_value": ["select", "dorm_name", ",", "gender", "from", "dorm", "where", "student_capacity", ">", "value", "or", "student_capacity", "<", "value"], "question": "Find the name and gender type of the dorms whose capacity is greater than 300 or less than 100.", "question_toks": ["find", "name", "and", "gender", "type", "of", "dorm", "whose", "capacity", "is", "greater", "than", "300", "or", "le", "than", "100", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 300.0, null], "or", [false, 4, [0, [0, 11, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["Find", "the", "name", "and", "gender", "type", "of", "the", "dorms", "whose", "capacity", "is", "greater", "than", "300", "or", "less", "than", "100", "."], "question_arg": [["find"], ["name"], ["and"], ["gender"], ["type"], ["of"], ["dorm"], ["whose"], ["student", "capacity"], ["is"], ["greater"], ["than"], ["300"], ["or"], ["le"], ["than"], ["100"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["and", "CC"], ["gender", "NN"], ["type", "NN"], ["of", "IN"], ["dorm", "NN"], ["whose", "WP$"], ["capacity", "NN"], ["is", "VBZ"], ["greater", "JJR"], ["than", "IN"], ["300", "CD"], ["or", "CC"], ["le", "JJR"], ["than", "IN"], ["100", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(10) T(1) A(0) C(12) T(1) Filter(1) Filter(5) A(0) C(11) T(1) Filter(4) A(0) C(11) T(1)"}, {"db_id": "school_bus", "query": "SELECT name FROM driver ORDER BY age DESC", "query_toks": ["SELECT", "name", "FROM", "driver", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", "from", "driver", "order", "by", "age", "desc"], "question": "Show the name of drivers in descending order of age.", "question_toks": ["show", "name", "of", "driver", "in", "descending", "order", "of", "age", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "driver id", "name", "party", "home city", "age", "school id", "grade", "school", "location", "type", "school id", "driver id", "years working", "if full time"], "table_names": ["driver", "school", "school bus"], "col_set": ["*", "driver id", "name", "party", "home city", "age", "school id", "grade", "school", "location", "type", "years working", "if full time"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"12": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Show", "the", "name", "of", "drivers", "in", "descending", "order", "of", "age", "."], "question_arg": [["show"], ["name"], ["of"], ["driver"], ["in"], ["descending"], ["order"], ["of"], ["age"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["of", "IN"], ["driver", "NN"], ["in", "IN"], ["descending", "VBG"], ["order", "NN"], ["of", "IN"], ["age", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(0) A(0) C(2) T(0) Order(0) A(0) C(5) T(0)"}, {"db_id": "small_bank_1", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))", "query_toks": ["SELECT", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T1.name", "IN", "(", "SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", ">", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "savings", ")", ")"], "query_toks_no_value": ["select", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t1", ".", "name", "in", "(", "select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", ">", "(", "select", "avg", "(", "balance", ")", "from", "savings", ")", ")"], "question": "What are the balances of checking accounts belonging to people with savings balances greater than the average savings balance?", "question_toks": ["what", "are", "balance", "of", "checking", "account", "belonging", "to", "people", "with", "saving", "balance", "greater", "than", "average", "saving", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 8, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["What", "are", "the", "balances", "of", "checking", "accounts", "belonging", "to", "people", "with", "savings", "balances", "greater", "than", "the", "average", "savings", "balance", "?"], "question_arg": [["what"], ["are"], ["balance"], ["of"], ["checking"], ["account"], ["belonging"], ["to"], ["people"], ["with"], ["saving"], ["balance"], ["greater"], ["than"], ["average"], ["saving"], ["balance"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["col"], ["MORE"], ["NONE"], ["agg"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["balance", "NN"], ["of", "IN"], ["checking", "VBG"], ["account", "NN"], ["belonging", "VBG"], ["to", "TO"], ["people", "NNS"], ["with", "IN"], ["saving", "VBG"], ["balance", "NN"], ["greater", "JJR"], ["than", "IN"], ["average", "JJ"], ["saving", "VBG"], ["balance", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(3) T(1) Filter(18) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(13) A(0) C(3) T(1) Root(5) Sel(0) N(0) A(5) C(3) T(1)"}, {"db_id": "dorm_1", "query": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name", "query_toks": ["SELECT", "avg", "(", "T1.age", ")", ",", "T3.dorm_name", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "dorm", "AS", "T3", "ON", "T3.dormid", "=", "T2.dormid", "GROUP", "BY", "T3.dorm_name"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "age", ")", ",", "t3", ".", "dorm_name", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "dorm", "as", "t3", "on", "t3", ".", "dormid", "=", "t2", ".", "dormid", "group", "by", "t3", ".", "dorm_name"], "question": "What is the average age for each dorm and what are the names of each dorm?", "question_toks": ["what", "is", "average", "age", "for", "each", "dorm", "and", "what", "are", "name", "of", "each", "dorm", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 18, false], null]]}, "select": [false, [[5, [0, [0, 4, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["What", "is", "the", "average", "age", "for", "each", "dorm", "and", "what", "are", "the", "names", "of", "each", "dorm", "?"], "question_arg": [["what"], ["is"], ["average"], ["age"], ["for"], ["each"], ["dorm"], ["and"], ["what"], ["are"], ["name"], ["of"], ["each"], ["dorm"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["age", "NN"], ["for", "IN"], ["each", "DT"], ["dorm", "NN"], ["and", "CC"], ["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["each", "DT"], ["dorm", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(5) C(4) T(0) A(0) C(10) T(1)"}, {"db_id": "small_bank_1", "query": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1", "query_toks": ["SELECT", "T3.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T2.balance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t3", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t2", ".", "balance", "desc", "limit", "value"], "question": "What is the savings balance of the account belonging to the customer with the highest checking balance?", "question_toks": ["what", "is", "saving", "balance", "of", "account", "belonging", "to", "customer", "with", "highest", "checking", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["What", "is", "the", "savings", "balance", "of", "the", "account", "belonging", "to", "the", "customer", "with", "the", "highest", "checking", "balance", "?"], "question_arg": [["what"], ["is"], ["saving"], ["balance"], ["of"], ["account"], ["belonging"], ["to"], ["customer", "id"], ["with"], ["highest"], ["checking"], ["balance"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["saving", "VBG"], ["balance", "NN"], ["of", "IN"], ["account", "NN"], ["belonging", "NN"], ["to", "TO"], ["customer", "NN"], ["with", "IN"], ["highest", "JJS"], ["checking", "VBG"], ["balance", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(3) T(1) Sup(0) A(0) C(3) T(2)"}, {"db_id": "dorm_1", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)", "query_toks": ["SELECT", "T1.fname", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "IN", "(", "SELECT", "T2.dormid", "FROM", "dorm", "AS", "T3", "JOIN", "has_amenity", "AS", "T4", "ON", "T3.dormid", "=", "T4.dormid", "JOIN", "dorm_amenity", "AS", "T5", "ON", "T4.amenid", "=", "T5.amenid", "GROUP", "BY", "T3.dormid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "in", "(", "select", "t2", ".", "dormid", "from", "dorm", "as", "t3", "join", "has_amenity", "as", "t4", "on", "t3", ".", "dormid", "=", "t4", ".", "dormid", "join", "dorm_amenity", "as", "t5", "on", "t4", ".", "amenid", "=", "t5", ".", "amenid", "group", "by", "t3", ".", "dormid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value", ")"], "question": "Find the first name of students who are living in the dorm that has most number of amenities.", "question_toks": ["find", "first", "name", "of", "student", "who", "are", "living", "in", "dorm", "that", "ha", "most", "number", "of", "amenity", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [[0, 9, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["Find", "the", "first", "name", "of", "students", "who", "are", "living", "in", "the", "dorm", "that", "has", "most", "number", "of", "amenities", "."], "question_arg": [["find"], ["first", "name"], ["of"], ["student"], ["who"], ["are"], ["living"], ["in"], ["dorm"], ["that"], ["ha"], ["most"], ["room", "number"], ["of"], ["amenity"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["first", "JJ"], ["name", "NN"], ["of", "IN"], ["student", "NN"], ["who", "WP"], ["are", "VBP"], ["living", "VBG"], ["in", "IN"], ["dorm", "NN"], ["that", "IN"], ["ha", "VBZ"], ["most", "RBS"], ["number", "NN"], ["of", "IN"], ["amenity", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(3) T(0) Filter(18) A(0) C(9) T(4) Root(2) Sel(0) N(0) A(0) C(9) T(4) Sup(0) A(3) C(0) T(1)"}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T1.name", "=", "'Brown", "'"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t1", ".", "name", "=", "value"], "question": "What are the checking and savings balances in accounts belonging to Brown?", "question_toks": ["what", "are", "checking", "and", "saving", "balance", "in", "account", "belonging", "to", "brown", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Brown\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["What", "are", "the", "checking", "and", "savings", "balances", "in", "accounts", "belonging", "to", "Brown", "?"], "question_arg": [["what"], ["are"], ["checking"], ["and"], ["saving"], ["balance"], ["in"], ["account"], ["belonging"], ["to"], ["brown"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["table"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["checking", "VBG"], ["and", "CC"], ["saving", "VBG"], ["balance", "NN"], ["in", "IN"], ["account", "NN"], ["belonging", "NN"], ["to", "TO"], ["brown", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(3) T(2) A(0) C(3) T(1) Filter(2) A(0) C(2) T(0)"}, {"db_id": "small_bank_1", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance", "query_toks": ["SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T2.balance", ">", "T3.balance"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t2", ".", "balance", ">", "t3", ".", "balance"], "question": "What are the names of customers with a higher checking balance than savings balance?", "question_toks": ["what", "are", "name", "of", "customer", "with", "a", "higher", "checking", "balance", "than", "saving", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], [0, 4, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["What", "are", "the", "names", "of", "customers", "with", "a", "higher", "checking", "balance", "than", "savings", "balance", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["customer", "id"], ["with"], ["a"], ["higher"], ["checking"], ["balance"], ["than"], ["saving"], ["balance"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["MORE"], ["table"], ["col"], ["NONE"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["customer", "NN"], ["with", "IN"], ["a", "DT"], ["higher", "JJR"], ["checking", "VBG"], ["balance", "NN"], ["than", "IN"], ["saving", "VBG"], ["balance", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(5) A(0) C(3) T(2)"}, {"db_id": "small_bank_1", "query": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "group", "by", "t1", ".", "name"], "question": "Find the number of checking accounts for each account name.", "question_toks": ["find", "number", "of", "checking", "account", "for", "each", "account", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["Find", "the", "number", "of", "checking", "accounts", "for", "each", "account", "name", "."], "question_arg": [["find"], ["number"], ["of"], ["checking"], ["account"], ["for"], ["each"], ["account"], ["name"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["table"], ["NONE"], ["NONE"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["number", "NN"], ["of", "IN"], ["checking", "VBG"], ["account", "NN"], ["for", "IN"], ["each", "DT"], ["account", "NN"], ["name", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(3) C(0) T(2) A(0) C(2) T(0)"}, {"db_id": "architecture", "query": "SELECT max(T1.length_meters) ,  T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id  =  T2.id", "query_toks": ["SELECT", "max", "(", "T1.length_meters", ")", ",", "T2.name", "FROM", "bridge", "AS", "T1", "JOIN", "architect", "AS", "T2", "ON", "T1.architect_id", "=", "T2.id"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "length_meters", ")", ",", "t2", ".", "name", "from", "bridge", "as", "t1", "join", "architect", "as", "t2", "on", "t1", ".", "architect_id", "=", "t2", ".", "id"], "question": "What is the maximum length in meters for the bridges and what are the architects' names?", "question_toks": ["what", "is", "maximum", "length", "in", "meter", "for", "bridge", "and", "what", "are", "architect", "'", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 1, false], null]]}, "select": [false, [[1, [0, [0, 9, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "name", "nationality", "gender", "architect id", "id", "name", "location", "length meters", "length feet", "architect id", "id", "location", "name", "type", "built year", "notes"], "table_names": ["architect", "bridge", "mill"], "col_set": ["*", "id", "name", "nationality", "gender", "architect id", "location", "length meters", "length feet", "type", "built year", "notes"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"5": 1, "1": 1, "11": 1, "6": 6, "12": 12}, "origin_question_toks": ["What", "is", "the", "maximum", "length", "in", "meters", "for", "the", "bridges", "and", "what", "are", "the", "architects", "'", "names", "?"], "question_arg": [["what"], ["is"], ["maximum"], ["length"], ["in"], ["length", "meter"], ["for"], ["bridge"], ["and"], ["what"], ["are"], ["architect"], ["'"], ["name"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["maximum", "JJ"], ["length", "NN"], ["in", "IN"], ["meter", "NN"], ["for", "IN"], ["bridge", "NN"], ["and", "CC"], ["what", "WDT"], ["are", "VBP"], ["architect", "JJ"], ["'", "''"], ["name", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(1) C(7) T(1) A(0) C(2) T(0)"}, {"db_id": "small_bank_1", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T2.balance", "+", "T3.balance", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t2", ".", "balance", "+", "t3", ".", "balance", "limit", "value"], "question": "Find the name of account that has the lowest total checking and saving balance.", "question_toks": ["find", "name", "of", "account", "that", "ha", "lowest", "total", "checking", "and", "saving", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[2, [0, 6, false], [0, 4, false]]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["Find", "the", "name", "of", "account", "that", "has", "the", "lowest", "total", "checking", "and", "saving", "balance", "."], "question_arg": [["find"], ["name"], ["of"], ["account"], ["that"], ["ha"], ["lowest"], ["total"], ["checking"], ["and"], ["saving"], ["balance"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["table"], ["NONE"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["account", "NN"], ["that", "WDT"], ["ha", "VBZ"], ["lowest", "JJS"], ["total", "JJ"], ["checking", "NN"], ["and", "CC"], ["saving", "VBG"], ["balance", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(2) T(0) Sup(1) A(0) C(3) T(2)"}, {"db_id": "course_teach", "query": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1", "query_toks": ["SELECT", "Hometown", "FROM", "teacher", "ORDER", "BY", "Age", "ASC", "LIMIT", "1"], "query_toks_no_value": ["select", "hometown", "from", "teacher", "order", "by", "age", "asc", "limit", "value"], "question": "What is the hometown of the youngest teacher?", "question_toks": ["what", "is", "hometown", "of", "youngest", "teacher", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "course id", "staring date", "course", "teacher id", "name", "age", "hometown", "course id", "teacher id", "grade"], "table_names": ["course", "teacher", "course arrange"], "col_set": ["*", "course id", "staring date", "course", "teacher id", "name", "age", "hometown", "grade"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 4, "4": 4, "8": 8, "1": 1}, "origin_question_toks": ["What", "is", "the", "hometown", "of", "the", "youngest", "teacher", "?"], "question_arg": [["what"], ["is"], ["hometown"], ["of"], ["youngest"], ["teacher"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["hometown", "VBN"], ["of", "IN"], ["youngest", "JJS"], ["teacher", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(7) T(1) Sup(1) A(0) C(6) T(1)"}, {"db_id": "activity_1", "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in", "query_toks": ["SELECT", "FacID", "FROM", "Faculty", "EXCEPT", "SELECT", "FacID", "FROM", "Faculty_participates_in"], "query_toks_no_value": ["select", "facid", "from", "faculty", "except", "select", "facid", "from", "faculty_participates_in"], "question": "Which faculty do not participate in any activity? Find their faculty ids.", "question_toks": ["which", "faculty", "do", "not", "participate", "in", "any", "activity", "?", "find", "their", "faculty", "id", "."], "sql": {"from": {"table_units": [["table_unit", 4]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["Which", "faculty", "do", "not", "participate", "in", "any", "activity", "?", "Find", "their", "faculty", "ids", "."], "question_arg": [["which"], ["faculty"], ["do"], ["not"], ["participate"], ["in"], ["any"], ["activity"], ["?"], ["find"], ["their"], ["faculty", "id"], ["."]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["faculty", "NN"], ["do", "VBP"], ["not", "RB"], ["participate", "VB"], ["in", "IN"], ["any", "DT"], ["activity", "NN"], ["?", "."], ["find", "VBP"], ["their", "PRP$"], ["faculty", "NN"], ["id", "NN"], [".", "."]], "rule_label": "Root1(2) Root(5) Sel(0) N(0) A(0) C(4) T(4) Root(5) Sel(0) N(0) A(0) C(4) T(2)"}, {"db_id": "mountain_photos", "query": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "camera_lens", "AS", "T1", "JOIN", "photos", "AS", "T2", "ON", "T1.id", "=", "T2.camera_lens_id", "GROUP", "BY", "T1.id", "ORDER", "BY", "count", "(", "*", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "camera_lens", "as", "t1", "join", "photos", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "camera_lens_id", "group", "by", "t1", ".", "id", "order", "by", "count", "(", "*", ")"], "question": "What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.", "question_toks": ["what", "is", "name", "of", "each", "camera", "lens", "and", "number", "of", "photo", "taken", "by", "it", "?", "order", "result", "by", "count", "of", "photo", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "name", "height", "prominence", "range", "country", "id", "brand", "name", "focal length mm", "max aperture", "id", "camera lens id", "mountain id", "color", "name"], "table_names": ["mountain", "camera lens", "photos"], "col_set": ["*", "id", "name", "height", "prominence", "range", "country", "brand", "focal length mm", "max aperture", "camera lens id", "mountain id", "color"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "keys": {"14": 1, "1": 1, "13": 7, "7": 7, "12": 12}, "origin_question_toks": ["What", "is", "the", "name", "of", "each", "camera", "lens", "and", "the", "number", "of", "photos", "taken", "by", "it", "?", "Order", "the", "result", "by", "the", "count", "of", "photos", "."], "question_arg": [["what"], ["is"], ["name"], ["of"], ["each"], ["camera", "lens"], ["and"], ["number"], ["of"], ["photo"], ["taken"], ["by"], ["it"], ["?"], ["order"], ["result"], ["by"], ["count"], ["of"], ["photo"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["each", "DT"], ["camera", "NN"], ["lens", "VBZ"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["photo", "NN"], ["taken", "VBN"], ["by", "IN"], ["it", "PRP"], ["?", "."], ["order", "NN"], ["result", "NN"], ["by", "IN"], ["count", "NN"], ["of", "IN"], ["photo", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(1) A(0) C(2) T(1) A(3) C(0) T(2) Order(1) A(3) C(0) T(2)"}, {"db_id": "architecture", "query": "SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id", "query_toks": ["SELECT", "DISTINCT", "T1.name", ",", "T1.nationality", "FROM", "architect", "AS", "T1", "JOIN", "mill", "AS", "t2", "ON", "T1.id", "=", "T2.architect_id"], "query_toks_no_value": ["select", "distinct", "t1", ".", "name", ",", "t1", ".", "nationality", "from", "architect", "as", "t1", "join", "mill", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "architect_id"], "question": "What are the distinct names and nationalities of the architects who have ever built a mill?", "question_toks": ["what", "are", "distinct", "name", "and", "nationality", "of", "architect", "who", "have", "ever", "built", "a", "mill", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "name", "nationality", "gender", "architect id", "id", "name", "location", "length meters", "length feet", "architect id", "id", "location", "name", "type", "built year", "notes"], "table_names": ["architect", "bridge", "mill"], "col_set": ["*", "id", "name", "nationality", "gender", "architect id", "location", "length meters", "length feet", "type", "built year", "notes"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"5": 1, "1": 1, "11": 1, "6": 6, "12": 12}, "origin_question_toks": ["What", "are", "the", "distinct", "names", "and", "nationalities", "of", "the", "architects", "who", "have", "ever", "built", "a", "mill", "?"], "question_arg": [["what"], ["are"], ["distinct"], ["name"], ["and"], ["nationality"], ["of"], ["architect"], ["who"], ["have"], ["ever"], ["built", "year"], ["a"], ["mill"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["distinct", "JJ"], ["name", "NN"], ["and", "CC"], ["nationality", "NN"], ["of", "IN"], ["architect", "NN"], ["who", "WP"], ["have", "VBP"], ["ever", "RB"], ["built", "VBN"], ["a", "DT"], ["mill", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(2) T(0) A(0) C(3) T(0)"}, {"db_id": "small_bank_1", "query": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance", "query_toks": ["SELECT", "T1.balance", "+", "T2.balance", "FROM", "checking", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "ORDER", "BY", "T1.balance", "+", "T2.balance"], "query_toks_no_value": ["select", "t1", ".", "balance", "+", "t2", ".", "balance", "from", "checking", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "order", "by", "t1", ".", "balance", "+", "t2", ".", "balance"], "question": "What is the sum of checking and savings balances for all customers, ordered by the total balance?", "question_toks": ["what", "is", "sum", "of", "checking", "and", "saving", "balance", "for", "all", "customer", ",", "ordered", "by", "total", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 3, false], null]]}, "select": [false, [[0, [2, [0, 6, false], [0, 4, false]]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[2, [0, 6, false], [0, 4, false]]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["What", "is", "the", "sum", "of", "checking", "and", "savings", "balances", "for", "all", "customers", ",", "ordered", "by", "the", "total", "balance", "?"], "question_arg": [["what"], ["is"], ["sum"], ["of"], ["checking"], ["and"], ["saving"], ["balance"], ["for"], ["all"], ["customer", "id"], [","], ["ordered"], ["by"], ["total"], ["balance"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["NONE"], ["table"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["sum", "NN"], ["of", "IN"], ["checking", "NN"], ["and", "CC"], ["saving", "VBG"], ["balance", "NN"], ["for", "IN"], ["all", "DT"], ["customer", "NN"], [",", ","], ["ordered", "VBN"], ["by", "IN"], ["total", "JJ"], ["balance", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(0) A(0) C(3) T(2) Order(1) A(0) C(3) T(2)"}, {"db_id": "dorm_1", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "FROM", "student", "WHERE", "sex", "=", "'M", "'", "GROUP", "BY", "city_code"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "avg", "(", "age", ")", ",", "city_code", "from", "student", "where", "sex", "=", "value", "group", "by", "city_code"], "question": "What is the average age and how many male students are there in each city?", "question_toks": ["what", "is", "average", "age", "and", "how", "many", "male", "student", "are", "there", "in", "each", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [5, [0, [0, 4, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"M\"", null]], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["What", "is", "the", "average", "age", "and", "how", "many", "male", "students", "are", "there", "in", "each", "city", "?"], "question_arg": [["what"], ["is"], ["average"], ["age"], ["and"], ["how"], ["many"], ["male"], ["student"], ["are"], ["there"], ["in"], ["each"], ["city", "code"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["age", "NN"], ["and", "CC"], ["how", "WRB"], ["many", "JJ"], ["male", "JJ"], ["student", "NN"], ["are", "VBP"], ["there", "RB"], ["in", "IN"], ["each", "DT"], ["city", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(2) A(3) C(0) T(0) A(5) C(4) T(0) A(0) C(8) T(0) Filter(2) A(0) C(5) T(0)"}, {"db_id": "csu_1", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000", "query_toks": ["SELECT", "t1.campusfee", "FROM", "csu_fees", "AS", "t1", "JOIN", "campuses", "AS", "t2", "ON", "t1.campus", "=", "t2.id", "WHERE", "t2.campus", "=", "``", "San", "Francisco", "State", "University", "''", "AND", "t1.year", "=", "2000"], "query_toks_no_value": ["select", "t1", ".", "campusfee", "from", "csu_fees", "as", "t1", "join", "campuses", "as", "t2", "on", "t1", ".", "campus", "=", "t2", ".", "id", "where", "t2", ".", "campus", "=", "value", "and", "t1", ".", "year", "=", "value"], "question": "In the year 2000, what is the campus fee for San Francisco State University?", "question_toks": ["in", "year", "year", ",", "what", "is", "campus", "fee", "for", "san", "francisco", "state", "university", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"San Francisco State University\"", null], "and", [false, 2, [0, [0, 7, false], null], 2000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "campus", "location", "county", "year", "campus", "year", "campus fee", "year", "campus", "degrees", "campus", "discipline", "year", "undergraduate", "graduate", "campus", "year", "totalenrollment ay", "fte ay", "campus", "year", "faculty"], "table_names": ["campuses", "csu fees", "degrees", "discipline enrollments", "enrollments", "faculty"], "col_set": ["*", "id", "campus", "location", "county", "year", "campus fee", "degrees", "discipline", "undergraduate", "graduate", "totalenrollment ay", "fte ay", "faculty"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5], "keys": {"6": 6, "1": 1, "10": 1, "12": 12, "17": 17, "21": 1, "9": 9}, "origin_question_toks": ["In", "the", "year", "2000", ",", "what", "is", "the", "campus", "fee", "for", "San", "Francisco", "State", "University", "?"], "question_arg": [["in"], ["year"], ["year"], [","], ["what"], ["is"], ["campus", "fee"], ["for"], ["san"], ["francisco"], ["state"], ["university"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["in", "IN"], ["year", "NN"], ["2000", "CD"], [",", ","], ["what", "WP"], ["is", "VBZ"], ["campus", "JJ"], ["fee", "NN"], ["for", "IN"], ["san", "JJ"], ["francisco", "JJ"], ["state", "NN"], ["university", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(1) Filter(0) Filter(2) A(0) C(2) T(0) Filter(2) A(0) C(5) T(1)"}, {"db_id": "climbing", "query": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200", "query_toks": ["SELECT", "Country", "FROM", "mountain", "WHERE", "Height", ">", "5600", "INTERSECT", "SELECT", "Country", "FROM", "mountain", "WHERE", "Height", "<", "5200"], "query_toks_no_value": ["select", "country", "from", "mountain", "where", "height", ">", "value", "intersect", "select", "country", "from", "mountain", "where", "height", "<", "value"], "question": "Show the countries that have mountains with height more than 5600 stories and mountains with height less than 5200.", "question_toks": ["show", "country", "that", "have", "mountain", "with", "height", "more", "than", "5600", "story", "and", "mountain", "with", "height", "le", "than", "5200", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5600.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 5200.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["Show", "the", "countries", "that", "have", "mountains", "with", "height", "more", "than", "5600", "stories", "and", "mountains", "with", "height", "less", "than", "5200", "."], "question_arg": [["show"], ["country"], ["that"], ["have"], ["mountain"], ["with"], ["height"], ["more"], ["than"], ["5600"], ["story"], ["and"], ["mountain"], ["with"], ["height"], ["le"], ["than"], ["5200"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["MORE"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["show", "NN"], ["country", "NN"], ["that", "WDT"], ["have", "VBP"], ["mountain", "VBN"], ["with", "IN"], ["height", "NN"], ["more", "JJR"], ["than", "IN"], ["5600", "CD"], ["story", "NN"], ["and", "CC"], ["mountain", "NN"], ["with", "IN"], ["height", "NN"], ["le", "NN"], ["than", "IN"], ["5200", "CD"], [".", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(6) T(0) Filter(5) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(0) C(6) T(0) Filter(4) A(0) C(3) T(0)"}, {"db_id": "course_teach", "query": "SELECT count(*) FROM teacher", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "teacher"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "teacher"], "question": "How many teachers are there?", "question_toks": ["how", "many", "teacher", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "course id", "staring date", "course", "teacher id", "name", "age", "hometown", "course id", "teacher id", "grade"], "table_names": ["course", "teacher", "course arrange"], "col_set": ["*", "course id", "staring date", "course", "teacher id", "name", "age", "hometown", "grade"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 4, "4": 4, "8": 8, "1": 1}, "origin_question_toks": ["How", "many", "teachers", "are", "there", "?"], "question_arg": [["how"], ["many"], ["teacher"], ["are"], ["there"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["teacher", "NN"], ["are", "VBP"], ["there", "RB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(1)"}, {"db_id": "climbing", "query": "SELECT count(*) FROM climber", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "climber"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "climber"], "question": "Count the number of climbers.", "question_toks": ["count", "number", "of", "climber", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["Count", "the", "number", "of", "climbers", "."], "question_arg": [["count"], ["number"], ["of"], ["climber"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["count", "NN"], ["number", "NN"], ["of", "IN"], ["climber", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(1)"}, {"db_id": "activity_1", "query": "SELECT count(*) FROM Activity", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Activity"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "activity"], "question": "How many activities do we have?", "question_toks": ["how", "many", "activity", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["How", "many", "activities", "do", "we", "have", "?"], "question_arg": [["how"], ["many"], ["activity"], ["do"], ["we"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["activity", "NN"], ["do", "VBP"], ["we", "PRP"], ["have", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(0)"}, {"db_id": "ship_1", "query": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'", "query_toks": ["SELECT", "rank", "FROM", "captain", "WHERE", "CLASS", "=", "'Cutter", "'", "INTERSECT", "SELECT", "rank", "FROM", "captain", "WHERE", "CLASS", "=", "'Armed", "schooner", "'"], "query_toks_no_value": ["select", "rank", "from", "captain", "where", "class", "=", "value", "intersect", "select", "rank", "from", "captain", "where", "class", "=", "value"], "question": "What are the ranks of captains that are both in the Cutter and Armed schooner classes?", "question_toks": ["what", "are", "rank", "of", "captain", "that", "are", "both", "in", "cutter", "and", "armed", "schooner", "class", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Cutter\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Armed schooner\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "captain id", "name", "ship id", "age", "class", "rank", "ship id", "name", "type", "built year", "class", "flag"], "table_names": ["captain", "ship"], "col_set": ["*", "captain id", "name", "ship id", "age", "class", "rank", "type", "built year", "flag"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"3": 7, "7": 7, "1": 1}, "origin_question_toks": ["What", "are", "the", "ranks", "of", "captains", "that", "are", "both", "in", "the", "Cutter", "and", "Armed", "schooner", "classes", "?"], "question_arg": [["what"], ["are"], ["rank"], ["of"], ["captain"], ["that"], ["are"], ["both"], ["in"], ["cutter"], ["and"], ["armed"], ["schooner"], ["class"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["rank", "NN"], ["of", "IN"], ["captain", "NN"], ["that", "WDT"], ["are", "VBP"], ["both", "DT"], ["in", "IN"], ["cutter", "NN"], ["and", "CC"], ["armed", "VBD"], ["schooner", "JJR"], ["class", "NN"], ["?", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(6) T(0) Filter(2) A(0) C(5) T(0) Root(3) Sel(0) N(0) A(0) C(6) T(0) Filter(2) A(0) C(5) T(0)"}, {"db_id": "small_bank_1", "query": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)", "query_toks": ["SELECT", "T1.custid", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", "<", "(", "SELECT", "max", "(", "balance", ")", "FROM", "checking", ")"], "query_toks_no_value": ["select", "t1", ".", "custid", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", "<", "(", "select", "max", "(", "balance", ")", "from", "checking", ")"], "question": "Find the name and id of accounts whose checking balance is below the maximum checking balance.", "question_toks": ["find", "name", "and", "id", "of", "account", "whose", "checking", "balance", "is", "below", "maximum", "checking", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[1, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["Find", "the", "name", "and", "id", "of", "accounts", "whose", "checking", "balance", "is", "below", "the", "maximum", "checking", "balance", "."], "question_arg": [["find"], ["name"], ["and"], ["customer", "id"], ["of"], ["account"], ["whose"], ["checking"], ["balance"], ["is"], ["below"], ["maximum"], ["checking"], ["balance"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["agg"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["and", "CC"], ["id", "NN"], ["of", "IN"], ["account", "NN"], ["whose", "WP$"], ["checking", "VBG"], ["balance", "NN"], ["is", "VBZ"], ["below", "IN"], ["maximum", "JJ"], ["checking", "VBG"], ["balance", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(1) T(0) A(0) C(2) T(0) Filter(12) A(0) C(3) T(2) Root(5) Sel(0) N(0) A(1) C(3) T(2)"}, {"db_id": "small_bank_1", "query": "SELECT name FROM accounts ORDER BY name", "query_toks": ["SELECT", "name", "FROM", "accounts", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "name", "from", "accounts", "order", "by", "name"], "question": "List all customers\u2019 names in the alphabetical order.", "question_toks": ["list", "all", "customers\u2019", "name", "in", "alphabetical", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["List", "all", "customers\u2019", "names", "in", "the", "alphabetical", "order", "."], "question_arg": [["list"], ["all"], ["customers\u2019"], ["name"], ["in"], ["alphabetical"], ["order"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["list", "NN"], ["all", "DT"], ["customers\u2019", "VBP"], ["name", "NN"], ["in", "IN"], ["alphabetical", "JJ"], ["order", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(0) A(0) C(2) T(0) Order(1) A(0) C(2) T(0)"}, {"db_id": "network_1", "query": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Highschooler", "WHERE", "grade", "=", "9", "OR", "grade", "=", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "highschooler", "where", "grade", "=", "value", "or", "grade", "=", "value"], "question": "Count the number of high schoolers in grades 9 or 10.", "question_toks": ["count", "number", "of", "high", "schoolers", "in", "grade", "9", "or", "10", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 9.0, null], "or", [false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "name", "grade", "student id", "friend id", "student id", "liked id"], "table_names": ["high schooler", "friend", "likes"], "col_set": ["*", "id", "name", "grade", "student id", "friend id", "liked id"], "col_table": [-1, 0, 0, 0, 1, 1, 2, 2], "keys": {"5": 1, "1": 1, "4": 4, "6": 6, "7": 1}, "origin_question_toks": ["Count", "the", "number", "of", "high", "schoolers", "in", "grades", "9", "or", "10", "."], "question_arg": [["count"], ["number"], ["of"], ["high"], ["schoolers"], ["in"], ["grade"], ["9"], ["or"], ["10"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["value"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["count", "NN"], ["number", "NN"], ["of", "IN"], ["high", "JJ"], ["schoolers", "NNS"], ["in", "IN"], ["grade", "JJ"], ["9", "CD"], ["or", "CC"], ["10", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(1) Filter(2) A(0) C(3) T(0) Filter(2) A(0) C(3) T(0)"}, {"db_id": "small_bank_1", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'", "query_toks": ["SELECT", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T1.name", "LIKE", "'", "%", "ee", "%", "'"], "query_toks_no_value": ["select", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t1", ".", "name", "like", "value"], "question": "What is the checking balance of the account whose owner\u2019s name contains the substring \u2018ee\u2019?", "question_toks": ["what", "is", "checking", "balance", "of", "account", "whose", "owner\u2019s", "name", "contains", "substring", "\u2018ee\u2019", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 2, false], null], "\"%ee%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["What", "is", "the", "checking", "balance", "of", "the", "account", "whose", "owner\u2019s", "name", "contains", "the", "substring", "\u2018ee\u2019", "?"], "question_arg": [["what"], ["is"], ["checking"], ["balance"], ["of"], ["account"], ["whose"], ["owner\u2019s"], ["name"], ["contains"], ["substring"], ["\u2018ee\u2019"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["checking", "VBG"], ["balance", "NN"], ["of", "IN"], ["account", "NN"], ["whose", "WP$"], ["owner\u2019s", "NN"], ["name", "NN"], ["contains", "VBZ"], ["substring", "VBG"], ["\u2018ee\u2019", "NNS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(3) T(2) Filter(9) A(0) C(2) T(0)"}, {"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\"", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "LOCATION", "=", "``", "Northridge", "''", "AND", "county", "=", "``", "Los", "Angeles", "''", "UNION", "SELECT", "campus", "FROM", "campuses", "WHERE", "LOCATION", "=", "``", "San", "Francisco", "''", "AND", "county", "=", "``", "San", "Francisco", "''"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "location", "=", "value", "and", "county", "=", "value", "union", "select", "campus", "from", "campuses", "where", "location", "=", "value", "and", "county", "=", "value"], "question": "What campuses are located in Northridge, Los Angeles or in San Francisco, San Francisco?", "question_toks": ["what", "campus", "are", "located", "in", "northridge", ",", "los", "angeles", "or", "in", "san", "francisco", ",", "san", "francisco", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Northridge\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"Los Angeles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"San Francisco\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"San Francisco\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "names": ["*", "id", "campus", "location", "county", "year", "campus", "year", "campus fee", "year", "campus", "degrees", "campus", "discipline", "year", "undergraduate", "graduate", "campus", "year", "totalenrollment ay", "fte ay", "campus", "year", "faculty"], "table_names": ["campuses", "csu fees", "degrees", "discipline enrollments", "enrollments", "faculty"], "col_set": ["*", "id", "campus", "location", "county", "year", "campus fee", "degrees", "discipline", "undergraduate", "graduate", "totalenrollment ay", "fte ay", "faculty"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5], "keys": {"6": 6, "1": 1, "10": 1, "12": 12, "17": 17, "21": 1, "9": 9}, "origin_question_toks": ["What", "campuses", "are", "located", "in", "Northridge", ",", "Los", "Angeles", "or", "in", "San", "Francisco", ",", "San", "Francisco", "?"], "question_arg": [["what"], ["campus"], ["are"], ["located"], ["in"], ["northridge"], [","], ["los"], ["angeles"], ["or"], ["in"], ["san"], ["francisco"], [","], ["san"], ["francisco"], ["?"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["campus", "NN"], ["are", "VBP"], ["located", "VBN"], ["in", "IN"], ["northridge", "NN"], [",", ","], ["los", "JJ"], ["angeles", "NNS"], ["or", "CC"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], [",", ","], ["san", "JJ"], ["francisco", "NN"], ["?", "."]], "rule_label": "Root1(1) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(0) Filter(2) A(0) C(3) T(0) Filter(2) A(0) C(4) T(0) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(0) Filter(2) A(0) C(3) T(0) Filter(2) A(0) C(4) T(0)"}, {"db_id": "climbing", "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\"", "query_toks": ["SELECT", "max", "(", "Points", ")", "FROM", "climber", "WHERE", "Country", "=", "``", "United", "Kingdom", "''"], "query_toks_no_value": ["select", "max", "(", "points", ")", "from", "climber", "where", "country", "=", "value"], "question": "What is the maximum point for climbers whose country is United Kingdom?", "question_toks": ["what", "is", "maximum", "point", "for", "climber", "whose", "country", "is", "united", "kingdom", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"United Kingdom\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["What", "is", "the", "maximum", "point", "for", "climbers", "whose", "country", "is", "United", "Kingdom", "?"], "question_arg": [["what"], ["is"], ["maximum"], ["point"], ["for"], ["climber"], ["whose"], ["country"], ["is"], ["united"], ["kingdom"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["country"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["maximum", "JJ"], ["point", "NN"], ["for", "IN"], ["climber", "NN"], ["whose", "WP$"], ["country", "NN"], ["is", "VBZ"], ["united", "JJ"], ["kingdom", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(1) C(9) T(1) Filter(2) A(0) C(6) T(1)"}, {"db_id": "train_station", "query": "SELECT name ,  TIME ,  service FROM train", "query_toks": ["SELECT", "name", ",", "TIME", ",", "service", "FROM", "train"], "query_toks_no_value": ["select", "name", ",", "time", ",", "service", "from", "train"], "question": "Show the name, time, and service for all trains.", "question_toks": ["show", "name", ",", "time", ",", "and", "service", "for", "all", "train", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "name", "time", "service", "train id", "station id"], "table_names": ["station", "train", "train station"], "col_set": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "time", "service"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2], "keys": {"14": 1, "1": 1, "13": 13, "9": 9}, "origin_question_toks": ["Show", "the", "name", ",", "time", ",", "and", "service", "for", "all", "trains", "."], "question_arg": [["show"], ["name"], [","], ["time"], [","], ["and"], ["service"], ["for"], ["all"], ["train"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], [",", ","], ["time", "NN"], [",", ","], ["and", "CC"], ["service", "NN"], ["for", "IN"], ["all", "DT"], ["train", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(2) A(0) C(2) T(1) A(0) C(10) T(1) A(0) C(11) T(1)"}, {"db_id": "climbing", "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Range", "FROM", "mountain", "GROUP", "BY", "Range", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "range", "from", "mountain", "group", "by", "range", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the range that has the most number of mountains.", "question_toks": ["show", "range", "that", "ha", "most", "number", "of", "mountain", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["Show", "the", "range", "that", "has", "the", "most", "number", "of", "mountains", "."], "question_arg": [["show"], ["range"], ["that"], ["ha"], ["most"], ["number"], ["of"], ["mountain"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["range", "NN"], ["that", "WDT"], ["ha", "VBZ"], ["most", "RBS"], ["number", "NN"], ["of", "IN"], ["mountain", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(5) T(0) Sup(0) A(3) C(0) T(0)"}, {"db_id": "machine_repair", "query": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\"", "query_toks": ["SELECT", "Starting_Year", "FROM", "technician", "WHERE", "Team", "=", "``", "CLE", "''", "INTERSECT", "SELECT", "Starting_Year", "FROM", "technician", "WHERE", "Team", "=", "``", "CWS", "''"], "query_toks_no_value": ["select", "starting_year", "from", "technician", "where", "team", "=", "value", "intersect", "select", "starting_year", "from", "technician", "where", "team", "=", "value"], "question": "What are the starting years shared by the technicians from the team \"CLE\" or \"CWS\"?", "question_toks": ["what", "are", "starting", "year", "shared", "by", "technician", "from", "team", "'", "cle", "'", "or", "'", "cws", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"CLE\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"CWS\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "repair id", "name", "launch date", "notes", "machine id", "making year", "class", "team", "machine series", "value points", "quality rank", "technician id", "name", "team", "starting year", "age", "technician id", "repair id", "machine id"], "table_names": ["repair", "machine", "technician", "repair assignment"], "col_set": ["*", "repair id", "name", "launch date", "notes", "machine id", "making year", "class", "team", "machine series", "value points", "quality rank", "technician id", "starting year", "age"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3], "keys": {"19": 5, "5": 5, "18": 1, "1": 1, "17": 17, "12": 12}, "origin_question_toks": ["What", "are", "the", "starting", "years", "shared", "by", "the", "technicians", "from", "the", "team", "``", "CLE", "''", "or", "``", "CWS", "''", "?"], "question_arg": [["what"], ["are"], ["starting", "year"], ["shared"], ["by"], ["technician"], ["from"], ["team"], ["'"], ["cle"], ["'"], ["or"], ["'"], ["cws"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["starting", "VBG"], ["year", "NN"], ["shared", "VBN"], ["by", "IN"], ["technician", "NN"], ["from", "IN"], ["team", "NN"], ["'", "''"], ["cle", "NN"], ["'", "''"], ["or", "CC"], ["'", "POS"], ["cws", "NN"], ["'", "''"], ["?", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(13) T(2) Filter(2) A(0) C(8) T(2) Root(3) Sel(0) N(0) A(0) C(13) T(2) Filter(2) A(0) C(8) T(2)"}, {"db_id": "activity_1", "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2", "query_toks": ["SELECT", "T1.FacID", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "GROUP", "BY", "T1.FacID", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t1", ".", "facid", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "group", "by", "t1", ".", "facid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the ids for all the faculty members who have at least 2 students.", "question_toks": ["show", "id", "for", "all", "faculty", "member", "who", "have", "at", "least", "2", "student", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["Show", "the", "ids", "for", "all", "the", "faculty", "members", "who", "have", "at", "least", "2", "students", "."], "question_arg": [["show"], ["id"], ["for"], ["all"], ["faculty"], ["member"], ["who"], ["have"], ["at"], ["least"], ["2"], ["student"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["value"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["id", "NN"], ["for", "IN"], ["all", "DT"], ["faculty", "NN"], ["member", "NN"], ["who", "WP"], ["have", "VBP"], ["at", "IN"], ["least", "JJS"], ["2", "CD"], ["student", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(4) T(4) Filter(7) A(3) C(0) T(3)"}, {"db_id": "small_bank_1", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)", "query_toks": ["SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", ">", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "checking", ")", "INTERSECT", "SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", "<", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "savings", ")"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", ">", "(", "select", "avg", "(", "balance", ")", "from", "checking", ")", "intersect", "select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", "<", "(", "select", "avg", "(", "balance", ")", "from", "savings", ")"], "question": "What are the names of accounts with checking balances greater than the average checking balance and savings balances below the average savings balance?", "question_toks": ["what", "are", "name", "of", "account", "with", "checking", "balance", "greater", "than", "average", "checking", "balance", "and", "saving", "balance", "below", "average", "saving", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["What", "are", "the", "names", "of", "accounts", "with", "checking", "balances", "greater", "than", "the", "average", "checking", "balance", "and", "savings", "balances", "below", "the", "average", "savings", "balance", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["account"], ["with"], ["checking"], ["balance"], ["greater"], ["than"], ["average"], ["checking"], ["balance"], ["and"], ["saving"], ["balance"], ["below"], ["average"], ["saving"], ["balance"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["table"], ["col"], ["MORE"], ["NONE"], ["agg"], ["table"], ["col"], ["NONE"], ["table"], ["col"], ["NONE"], ["agg"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["account", "NN"], ["with", "IN"], ["checking", "VBG"], ["balance", "NN"], ["greater", "JJR"], ["than", "IN"], ["average", "JJ"], ["checking", "JJ"], ["balance", "NN"], ["and", "CC"], ["saving", "VBG"], ["balance", "NN"], ["below", "IN"], ["average", "JJ"], ["saving", "VBG"], ["balance", "NN"], ["?", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(13) A(0) C(3) T(1) Root(5) Sel(0) N(0) A(5) C(3) T(2) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(12) A(0) C(3) T(1) Root(5) Sel(0) N(0) A(5) C(3) T(1)"}, {"db_id": "dorm_1", "query": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)", "query_toks": ["SELECT", "avg", "(", "T1.age", ")", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "dorm", "AS", "T3", "ON", "T3.dormid", "=", "T2.dormid", "WHERE", "T3.student_capacity", "=", "(", "SELECT", "max", "(", "student_capacity", ")", "FROM", "dorm", ")"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "age", ")", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "dorm", "as", "t3", "on", "t3", ".", "dormid", "=", "t2", ".", "dormid", "where", "t3", ".", "student_capacity", "=", "(", "select", "max", "(", "student_capacity", ")", "from", "dorm", ")"], "question": "What is the average age of students who are living in the dorm with the largest capacity?", "question_toks": ["what", "is", "average", "age", "of", "student", "who", "are", "living", "in", "dorm", "with", "largest", "capacity", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 18, false], null]]}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["What", "is", "the", "average", "age", "of", "students", "who", "are", "living", "in", "the", "dorm", "with", "the", "largest", "capacity", "?"], "question_arg": [["what"], ["is"], ["average"], ["age"], ["of"], ["student"], ["who"], ["are"], ["living"], ["in"], ["dorm"], ["with"], ["largest"], ["student", "capacity"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["age", "NN"], ["of", "IN"], ["student", "NN"], ["who", "WP"], ["are", "VBP"], ["living", "VBG"], ["in", "IN"], ["dorm", "NN"], ["with", "IN"], ["largest", "JJS"], ["capacity", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(5) C(4) T(0) Filter(11) A(0) C(11) T(1) Root(5) Sel(0) N(0) A(1) C(11) T(1)"}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "query_toks": ["SELECT", "T2.balance", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T3.balance", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t3", ".", "balance", "limit", "value"], "question": "What is the name and checking balance of the account which has the lowest savings balance?", "question_toks": ["what", "is", "name", "and", "checking", "balance", "of", "account", "which", "ha", "lowest", "saving", "balance", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["What", "is", "the", "name", "and", "checking", "balance", "of", "the", "account", "which", "has", "the", "lowest", "savings", "balance", "?"], "question_arg": [["what"], ["is"], ["name"], ["and"], ["checking"], ["balance"], ["of"], ["account"], ["which"], ["ha"], ["lowest"], ["saving"], ["balance"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["and", "CC"], ["checking", "VBG"], ["balance", "NN"], ["of", "IN"], ["account", "NN"], ["which", "WDT"], ["ha", "VBZ"], ["lowest", "JJS"], ["saving", "VBG"], ["balance", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(3) T(2) A(0) C(2) T(0) Sup(1) A(0) C(3) T(1)"}, {"db_id": "small_bank_1", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))", "query_toks": ["SELECT", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T1.name", "IN", "(", "SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "WHERE", "T2.balance", ">", "(", "SELECT", "avg", "(", "balance", ")", "FROM", "savings", ")", ")"], "query_toks_no_value": ["select", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t1", ".", "name", "in", "(", "select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "where", "t2", ".", "balance", ">", "(", "select", "avg", "(", "balance", ")", "from", "savings", ")", ")"], "question": "Find the checking balance of the accounts whose savings balance is higher than the average savings balance.", "question_toks": ["find", "checking", "balance", "of", "account", "whose", "saving", "balance", "is", "higher", "than", "average", "saving", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 8, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["Find", "the", "checking", "balance", "of", "the", "accounts", "whose", "savings", "balance", "is", "higher", "than", "the", "average", "savings", "balance", "."], "question_arg": [["find"], ["checking"], ["balance"], ["of"], ["account"], ["whose"], ["saving"], ["balance"], ["is"], ["higher"], ["than"], ["average"], ["saving"], ["balance"], ["."]], "question_arg_type": [["NONE"], ["table"], ["col"], ["NONE"], ["table"], ["NONE"], ["table"], ["col"], ["NONE"], ["MORE"], ["NONE"], ["agg"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["checking", "JJ"], ["balance", "NN"], ["of", "IN"], ["account", "NN"], ["whose", "WP$"], ["saving", "VBG"], ["balance", "NN"], ["is", "VBZ"], ["higher", "JJR"], ["than", "IN"], ["average", "JJ"], ["saving", "JJ"], ["balance", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(3) T(1) Filter(18) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(13) A(0) C(3) T(1) Root(5) Sel(0) N(0) A(5) C(3) T(1)"}, {"db_id": "climbing", "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)", "query_toks": ["SELECT", "Name", "FROM", "mountain", "WHERE", "Mountain_ID", "NOT", "IN", "(", "SELECT", "Mountain_ID", "FROM", "climber", ")"], "query_toks_no_value": ["select", "name", "from", "mountain", "where", "mountain_id", "not", "in", "(", "select", "mountain_id", "from", "climber", ")"], "question": "List the names of mountains that do not have any climber.", "question_toks": ["list", "name", "of", "mountain", "that", "do", "not", "have", "any", "climber", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["List", "the", "names", "of", "mountains", "that", "do", "not", "have", "any", "climber", "."], "question_arg": [["list"], ["name"], ["of"], ["mountain"], ["that"], ["do"], ["not"], ["have"], ["any"], ["climber"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["list", "NN"], ["name", "NN"], ["of", "IN"], ["mountain", "NN"], ["that", "WDT"], ["do", "VBP"], ["not", "RB"], ["have", "VB"], ["any", "DT"], ["climber", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(19) A(0) C(1) T(0) Root(5) Sel(0) N(0) A(0) C(1) T(1)"}, {"db_id": "climbing", "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\"", "query_toks": ["SELECT", "max", "(", "Points", ")", "FROM", "climber", "WHERE", "Country", "=", "``", "United", "Kingdom", "''"], "query_toks_no_value": ["select", "max", "(", "points", ")", "from", "climber", "where", "country", "=", "value"], "question": "Return the maximum number of points for climbers from the United Kingdom.", "question_toks": ["return", "maximum", "number", "of", "point", "for", "climber", "from", "united", "kingdom", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"United Kingdom\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["Return", "the", "maximum", "number", "of", "points", "for", "climbers", "from", "the", "United", "Kingdom", "."], "question_arg": [["return"], ["maximum"], ["number"], ["of"], ["point"], ["for"], ["climber"], ["from"], ["united"], ["kingdom"], ["."]], "question_arg_type": [["NONE"], ["agg"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["country"], ["NONE"], ["NONE"]], "nltk_pos": [["return", "NN"], ["maximum", "JJ"], ["number", "NN"], ["of", "IN"], ["point", "NN"], ["for", "IN"], ["climber", "NN"], ["from", "IN"], ["united", "JJ"], ["kingdom", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(1) C(9) T(1) Filter(2) A(0) C(6) T(1)"}, {"db_id": "ship_1", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1", "query_toks": ["SELECT", "t1.name", "FROM", "ship", "AS", "t1", "JOIN", "captain", "AS", "t2", "ON", "t1.ship_id", "=", "t2.ship_id", "GROUP", "BY", "t2.ship_id", "HAVING", "count", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "ship", "as", "t1", "join", "captain", "as", "t2", "on", "t1", ".", "ship_id", "=", "t2", ".", "ship_id", "group", "by", "t2", ".", "ship_id", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of ships that have more than one captain?", "question_toks": ["what", "are", "name", "of", "ship", "that", "have", "more", "than", "one", "captain", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "captain id", "name", "ship id", "age", "class", "rank", "ship id", "name", "type", "built year", "class", "flag"], "table_names": ["captain", "ship"], "col_set": ["*", "captain id", "name", "ship id", "age", "class", "rank", "type", "built year", "flag"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"3": 7, "7": 7, "1": 1}, "origin_question_toks": ["What", "are", "the", "names", "of", "ships", "that", "have", "more", "than", "one", "captain", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["ship"], ["that"], ["have"], ["more"], ["than"], ["one"], ["captain"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["ship", "NN"], ["that", "WDT"], ["have", "VBP"], ["more", "JJR"], ["than", "IN"], ["one", "CD"], ["captain", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(5) A(3) C(0) T(0)"}, {"db_id": "activity_1", "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student", "query_toks": ["SELECT", "FacID", "FROM", "Faculty_participates_in", "INTERSECT", "SELECT", "advisor", "FROM", "Student"], "query_toks_no_value": ["select", "facid", "from", "faculty_participates_in", "intersect", "select", "advisor", "from", "student"], "question": "Show the ids of all the faculty members who participate in an activity and advise a student.", "question_toks": ["show", "id", "of", "all", "faculty", "member", "who", "participate", "in", "an", "activity", "and", "advise", "a", "student", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["Show", "the", "ids", "of", "all", "the", "faculty", "members", "who", "participate", "in", "an", "activity", "and", "advise", "a", "student", "."], "question_arg": [["show"], ["id"], ["of"], ["all"], ["faculty"], ["member"], ["who"], ["participate"], ["in"], ["an"], ["activity"], ["and"], ["advise"], ["a"], ["student"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["id", "NN"], ["of", "IN"], ["all", "DT"], ["faculty", "NN"], ["member", "NN"], ["who", "WP"], ["participate", "VBP"], ["in", "IN"], ["an", "DT"], ["activity", "NN"], ["and", "CC"], ["advise", "VB"], ["a", "DT"], ["student", "NN"], [".", "."]], "rule_label": "Root1(0) Root(5) Sel(0) N(0) A(0) C(4) T(2) Root(5) Sel(0) N(0) A(0) C(10) T(3)"}, {"db_id": "climbing", "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "mountain", "ORDER", "BY", "Height", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "mountain", "order", "by", "height", "desc", "limit", "value"], "question": "What is the name of the highest mountain?", "question_toks": ["what", "is", "name", "of", "highest", "mountain", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "highest", "mountain", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["highest"], ["mountain"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["highest", "JJS"], ["mountain", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(2) T(0) Sup(0) A(0) C(3) T(0)"}, {"db_id": "climbing", "query": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1", "query_toks": ["SELECT", "T2.Height", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID", "ORDER", "BY", "T1.Points", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "height", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id", "order", "by", "t1", ".", "points", "desc", "limit", "value"], "question": "Show the height of the mountain climbed by the climber with the maximum points.", "question_toks": ["show", "height", "of", "mountain", "climbed", "by", "climber", "with", "maximum", "point", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["Show", "the", "height", "of", "the", "mountain", "climbed", "by", "the", "climber", "with", "the", "maximum", "points", "."], "question_arg": [["show"], ["height"], ["of"], ["mountain"], ["climbed"], ["by"], ["climber"], ["with"], ["maximum"], ["point"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["agg"], ["col"], ["NONE"]], "nltk_pos": [["show", "NN"], ["height", "NN"], ["of", "IN"], ["mountain", "NN"], ["climbed", "VBN"], ["by", "IN"], ["climber", "NN"], ["with", "IN"], ["maximum", "JJ"], ["point", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(3) T(0) Sup(0) A(0) C(9) T(1)"}, {"db_id": "train_station", "query": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "LOCATION", "FROM", "station", "GROUP", "BY", "LOCATION", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "location", "from", "station", "group", "by", "location", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the location with most number of train stations.", "question_toks": ["show", "location", "with", "most", "number", "of", "train", "station", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "name", "time", "service", "train id", "station id"], "table_names": ["station", "train", "train station"], "col_set": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "time", "service"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2], "keys": {"14": 1, "1": 1, "13": 13, "9": 9}, "origin_question_toks": ["Show", "the", "location", "with", "most", "number", "of", "train", "stations", "."], "question_arg": [["show"], ["location"], ["with"], ["most"], ["number", "of", "platform"], ["train", "station"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["MOST"], ["col"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["location", "NN"], ["with", "IN"], ["most", "JJS"], ["number", "NN"], ["of", "IN"], ["train", "JJ"], ["station", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(6) T(0) Sup(0) A(3) C(0) T(0)"}, {"db_id": "train_station", "query": "SELECT count(*) FROM station", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "station"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "station"], "question": "How many train stations are there?", "question_toks": ["how", "many", "train", "station", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "name", "time", "service", "train id", "station id"], "table_names": ["station", "train", "train station"], "col_set": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "time", "service"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2], "keys": {"14": 1, "1": 1, "13": 13, "9": 9}, "origin_question_toks": ["How", "many", "train", "stations", "are", "there", "?"], "question_arg": [["how"], ["many"], ["train", "station"], ["are"], ["there"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["train", "NN"], ["station", "NN"], ["are", "VBP"], ["there", "RB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(0)"}, {"db_id": "mountain_photos", "query": "SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "camera_lens", "WHERE", "focal_length_mm", ">", "15"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "camera_lens", "where", "focal_length_mm", ">", "value"], "question": "How many camera lenses have a focal length longer than 15 mm?", "question_toks": ["how", "many", "camera", "lens", "have", "a", "focal", "length", "longer", "than", "15", "mm", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], 15.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "name", "height", "prominence", "range", "country", "id", "brand", "name", "focal length mm", "max aperture", "id", "camera lens id", "mountain id", "color", "name"], "table_names": ["mountain", "camera lens", "photos"], "col_set": ["*", "id", "name", "height", "prominence", "range", "country", "brand", "focal length mm", "max aperture", "camera lens id", "mountain id", "color"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], "keys": {"14": 1, "1": 1, "13": 7, "7": 7, "12": 12}, "origin_question_toks": ["How", "many", "camera", "lenses", "have", "a", "focal", "length", "longer", "than", "15", "mm", "?"], "question_arg": [["how"], ["many"], ["camera", "lens"], ["have"], ["a"], ["focal", "length", "mm"], ["longer"], ["than"], ["15"], ["mm"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["MORE"], ["NONE"], ["value"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["camera", "NN"], ["lens", "NNS"], ["have", "VBP"], ["a", "DT"], ["focal", "JJ"], ["length", "NN"], ["longer", "JJR"], ["than", "IN"], ["15", "CD"], ["mm", "NNS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(5) A(0) C(8) T(1)"}, {"db_id": "csu_1", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus", "query_toks": ["SELECT", "T1.campus", ",", "sum", "(", "T2.degrees", ")", "FROM", "campuses", "AS", "T1", "JOIN", "degrees", "AS", "T2", "ON", "T1.id", "=", "T2.campus", "WHERE", "T1.county", "=", "``", "Orange", "''", "AND", "T2.year", ">", "=", "2000", "GROUP", "BY", "T1.campus"], "query_toks_no_value": ["select", "t1", ".", "campus", ",", "sum", "(", "t2", ".", "degrees", ")", "from", "campuses", "as", "t1", "join", "degrees", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "campus", "where", "t1", ".", "county", "=", "value", "and", "t2", ".", "year", ">", "=", "value", "group", "by", "t1", ".", "campus"], "question": "For each Orange county campus, report the number of degrees granted after 2000.", "question_toks": ["for", "each", "orange", "county", "campus", ",", "report", "number", "of", "degree", "granted", "after", "year", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Orange\"", null], "and", [false, 5, [0, [0, 9, false], null], 2000.0, null]], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "campus", "location", "county", "year", "campus", "year", "campus fee", "year", "campus", "degrees", "campus", "discipline", "year", "undergraduate", "graduate", "campus", "year", "totalenrollment ay", "fte ay", "campus", "year", "faculty"], "table_names": ["campuses", "csu fees", "degrees", "discipline enrollments", "enrollments", "faculty"], "col_set": ["*", "id", "campus", "location", "county", "year", "campus fee", "degrees", "discipline", "undergraduate", "graduate", "totalenrollment ay", "fte ay", "faculty"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5], "keys": {"6": 6, "1": 1, "10": 1, "12": 12, "17": 17, "21": 1, "9": 9}, "origin_question_toks": ["For", "each", "Orange", "county", "campus", ",", "report", "the", "number", "of", "degrees", "granted", "after", "2000", "."], "question_arg": [["for"], ["each"], ["orange"], ["county"], ["campus"], [","], ["report"], ["number"], ["of"], ["degree"], ["granted"], ["after"], ["year"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["for", "IN"], ["each", "DT"], ["orange", "NN"], ["county", "NN"], ["campus", "NN"], [",", ","], ["report", "NN"], ["number", "NN"], ["of", "IN"], ["degree", "NN"], ["granted", "VBN"], ["after", "IN"], ["2000", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(2) T(0) A(4) C(7) T(2) Filter(0) Filter(2) A(0) C(4) T(0) Filter(7) A(0) C(5) T(2)"}, {"db_id": "dorm_1", "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)", "query_toks": ["SELECT", "dorm_name", "FROM", "dorm", "WHERE", "dormid", "NOT", "IN", "(", "SELECT", "dormid", "FROM", "has_amenity", ")"], "query_toks_no_value": ["select", "dorm_name", "from", "dorm", "where", "dormid", "not", "in", "(", "select", "dormid", "from", "has_amenity", ")"], "question": "Find the name of dorms that do not have any amenity", "question_toks": ["find", "name", "of", "dorm", "that", "do", "not", "have", "any", "amenity"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[true, 8, [0, [0, 9, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["Find", "the", "name", "of", "dorms", "that", "do", "not", "have", "any", "amenity"], "question_arg": [["find"], ["name"], ["of"], ["dorm"], ["that"], ["do"], ["not"], ["have"], ["any"], ["amenity"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["dorm", "NN"], ["that", "WDT"], ["do", "VBP"], ["not", "RB"], ["have", "VB"], ["any", "DT"], ["amenity", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(1) Filter(19) A(0) C(9) T(1) Root(5) Sel(0) N(0) A(0) C(9) T(3)"}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T2.balance", "+", "T3.balance", "DESC"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t2", ".", "balance", "+", "t3", ".", "balance", "desc"], "question": "Find the name, checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order.", "question_toks": ["find", "name", ",", "checking", "balance", "and", "saving", "balance", "of", "all", "account", "in", "bank", "sorted", "by", "their", "total", "checking", "and", "saving", "balance", "in", "descending", "order", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[2, [0, 6, false], [0, 4, false]]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["Find", "the", "name", ",", "checking", "balance", "and", "savings", "balance", "of", "all", "accounts", "in", "the", "bank", "sorted", "by", "their", "total", "checking", "and", "savings", "balance", "in", "descending", "order", "."], "question_arg": [["find"], ["name"], [","], ["checking"], ["balance"], ["and"], ["saving"], ["balance"], ["of"], ["all"], ["account"], ["in"], ["bank"], ["sorted"], ["by"], ["their"], ["total"], ["checking"], ["and"], ["saving"], ["balance"], ["in"], ["descending"], ["order"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["col"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "NN"], ["name", "NN"], [",", ","], ["checking", "VBG"], ["balance", "NN"], ["and", "CC"], ["saving", "VBG"], ["balance", "NN"], ["of", "IN"], ["all", "DT"], ["account", "NN"], ["in", "IN"], ["bank", "NN"], ["sorted", "VBN"], ["by", "IN"], ["their", "PRP$"], ["total", "JJ"], ["checking", "NN"], ["and", "CC"], ["saving", "VBG"], ["balance", "NN"], ["in", "IN"], ["descending", "VBG"], ["order", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(2) A(0) C(3) T(2) A(0) C(3) T(1) A(0) C(2) T(0) Order(0) A(0) C(3) T(2)"}, {"db_id": "climbing", "query": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID", "query_toks": ["SELECT", "T1.Name", ",", "T2.Height", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "height", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id"], "question": "What are the names of climbers and the corresponding heights of the mountains that they climb?", "question_toks": ["what", "are", "name", "of", "climber", "and", "corresponding", "height", "of", "mountain", "that", "they", "climb", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["What", "are", "the", "names", "of", "climbers", "and", "the", "corresponding", "heights", "of", "the", "mountains", "that", "they", "climb", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["climber"], ["and"], ["corresponding"], ["height"], ["of"], ["mountain"], ["that"], ["they"], ["climb"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["climber", "NN"], ["and", "CC"], ["corresponding", "VBG"], ["height", "NN"], ["of", "IN"], ["mountain", "NN"], ["that", "IN"], ["they", "PRP"], ["climb", "VBP"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(2) T(1) A(0) C(3) T(0)"}, {"db_id": "dorm_1", "query": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)", "query_toks": ["SELECT", "avg", "(", "T1.age", ")", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "dorm", "AS", "T3", "ON", "T3.dormid", "=", "T2.dormid", "WHERE", "T3.student_capacity", "=", "(", "SELECT", "max", "(", "student_capacity", ")", "FROM", "dorm", ")"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "age", ")", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "dorm", "as", "t3", "on", "t3", ".", "dormid", "=", "t2", ".", "dormid", "where", "t3", ".", "student_capacity", "=", "(", "select", "max", "(", "student_capacity", ")", "from", "dorm", ")"], "question": "Find the average age of students who are living in the dorm with the largest capacity.", "question_toks": ["find", "average", "age", "of", "student", "who", "are", "living", "in", "dorm", "with", "largest", "capacity", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 18, false], null]]}, "select": [false, [[5, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["Find", "the", "average", "age", "of", "students", "who", "are", "living", "in", "the", "dorm", "with", "the", "largest", "capacity", "."], "question_arg": [["find"], ["average"], ["age"], ["of"], ["student"], ["who"], ["are"], ["living"], ["in"], ["dorm"], ["with"], ["largest"], ["student", "capacity"], ["."]], "question_arg_type": [["NONE"], ["agg"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["NONE"]], "nltk_pos": [["find", "JJ"], ["average", "JJ"], ["age", "NN"], ["of", "IN"], ["student", "NN"], ["who", "WP"], ["are", "VBP"], ["living", "VBG"], ["in", "IN"], ["dorm", "NN"], ["with", "IN"], ["largest", "JJS"], ["capacity", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(5) C(4) T(0) Filter(11) A(0) C(11) T(1) Root(5) Sel(0) N(0) A(1) C(11) T(1)"}, {"db_id": "dorm_1", "query": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "student", "WHERE", "city_code", "!", "=", "'HKG", "'", "ORDER", "BY", "age"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "student", "where", "city_code", "!", "=", "value", "order", "by", "age"], "question": "What are the first and last names of all students who are not living in the city HKG and order the results by age?", "question_toks": ["what", "are", "first", "and", "last", "name", "of", "all", "student", "who", "are", "not", "living", "in", "city", "hkg", "and", "order", "result", "by", "age", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 8, false], null], "\"HKG\"", null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["What", "are", "the", "first", "and", "last", "names", "of", "all", "students", "who", "are", "not", "living", "in", "the", "city", "HKG", "and", "order", "the", "results", "by", "age", "?"], "question_arg": [["what"], ["are"], ["first", "name"], ["and"], ["last", "name"], ["of"], ["all"], ["student"], ["who"], ["are"], ["not"], ["living"], ["in"], ["city", "code"], ["hkg"], ["and"], ["order"], ["result"], ["by"], ["age"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["first", "JJ"], ["and", "CC"], ["last", "JJ"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["student", "NN"], ["who", "WP"], ["are", "VBP"], ["not", "RB"], ["living", "VBG"], ["in", "IN"], ["city", "NN"], ["hkg", "NN"], ["and", "CC"], ["order", "NN"], ["result", "NN"], ["by", "IN"], ["age", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(1) Sel(0) N(1) A(0) C(3) T(0) A(0) C(2) T(0) Filter(3) A(0) C(8) T(0) Order(1) A(0) C(4) T(0)"}, {"db_id": "small_bank_1", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T2.balance", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T3.balance", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "balance", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t3", ".", "balance", "limit", "value"], "question": "Find the name and checking balance of the account with the lowest savings balance.", "question_toks": ["find", "name", "and", "checking", "balance", "of", "account", "with", "lowest", "saving", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["Find", "the", "name", "and", "checking", "balance", "of", "the", "account", "with", "the", "lowest", "savings", "balance", "."], "question_arg": [["find"], ["name"], ["and"], ["checking"], ["balance"], ["of"], ["account"], ["with"], ["lowest"], ["saving"], ["balance"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["and", "CC"], ["checking", "VBG"], ["balance", "NN"], ["of", "IN"], ["account", "NN"], ["with", "IN"], ["lowest", "JJS"], ["saving", "VBG"], ["balance", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(2) T(0) A(0) C(3) T(2) Sup(1) A(0) C(3) T(1)"}, {"db_id": "climbing", "query": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000", "query_toks": ["SELECT", "Name", "FROM", "mountain", "WHERE", "Height", ">", "5000", "OR", "Prominence", ">", "1000"], "query_toks_no_value": ["select", "name", "from", "mountain", "where", "height", ">", "value", "or", "prominence", ">", "value"], "question": "What are the names of mountains that have a height of over 5000 or a prominence of over 1000?", "question_toks": ["what", "are", "name", "of", "mountain", "that", "have", "a", "height", "of", "over", "5000", "or", "a", "prominence", "of", "over", "1000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5000.0, null], "or", [false, 3, [0, [0, 4, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["What", "are", "the", "names", "of", "mountains", "that", "have", "a", "height", "of", "over", "5000", "or", "a", "prominence", "of", "over", "1000", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["mountain"], ["that"], ["have"], ["a"], ["height"], ["of"], ["over"], ["5000"], ["or"], ["a"], ["prominence"], ["of"], ["over"], ["1000"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["mountain", "NN"], ["that", "WDT"], ["have", "VBP"], ["a", "DT"], ["height", "NN"], ["of", "IN"], ["over", "IN"], ["5000", "CD"], ["or", "CC"], ["a", "DT"], ["prominence", "NN"], ["of", "IN"], ["over", "IN"], ["1000", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(1) Filter(5) A(0) C(3) T(0) Filter(5) A(0) C(4) T(0)"}, {"db_id": "small_bank_1", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC", "query_toks": ["SELECT", "T2.balance", ",", "T3.balance", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "ORDER", "BY", "T2.balance", "+", "T3.balance", "DESC"], "query_toks_no_value": ["select", "t2", ".", "balance", ",", "t3", ".", "balance", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "order", "by", "t2", ".", "balance", "+", "t3", ".", "balance", "desc"], "question": "What are the names, checking balances, and savings balances of customers, ordered by the total of checking and savings balances descending?", "question_toks": ["what", "are", "name", ",", "checking", "balance", ",", "and", "saving", "balance", "of", "customer", ",", "ordered", "by", "total", "of", "checking", "and", "saving", "balance", "descending", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[2, [0, 6, false], [0, 4, false]]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["What", "are", "the", "names", ",", "checking", "balances", ",", "and", "savings", "balances", "of", "customers", ",", "ordered", "by", "the", "total", "of", "checking", "and", "savings", "balances", "descending", "?"], "question_arg": [["what"], ["are"], ["name"], [","], ["checking"], ["balance"], [","], ["and"], ["saving"], ["balance"], ["of"], ["customer", "id"], [","], ["ordered"], ["by"], ["total"], ["of"], ["checking"], ["and"], ["saving"], ["balance"], ["descending"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "JJ"], [",", ","], ["checking", "VBG"], ["balance", "NN"], [",", ","], ["and", "CC"], ["saving", "VBG"], ["balance", "NN"], ["of", "IN"], ["customer", "NN"], [",", ","], ["ordered", "VBN"], ["by", "IN"], ["total", "NN"], ["of", "IN"], ["checking", "NN"], ["and", "CC"], ["saving", "VBG"], ["balance", "NN"], ["descending", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(2) A(0) C(3) T(2) A(0) C(3) T(1) A(0) C(2) T(0) Order(0) A(0) C(3) T(2)"}, {"db_id": "dorm_1", "query": "SELECT count(*) FROM dorm", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "dorm"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "dorm"], "question": "How many dorms are in the database?", "question_toks": ["how", "many", "dorm", "are", "in", "database", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["How", "many", "dorms", "are", "in", "the", "database", "?"], "question_arg": [["how"], ["many"], ["dorm"], ["are"], ["in"], ["database"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["dorm", "NN"], ["are", "VBP"], ["in", "IN"], ["database", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(1)"}, {"db_id": "small_bank_1", "query": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name", "query_toks": ["SELECT", "sum", "(", "T2.balance", ")", ",", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "savings", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "GROUP", "BY", "T1.name"], "query_toks_no_value": ["select", "sum", "(", "t2", ".", "balance", ")", ",", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "savings", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "group", "by", "t1", ".", "name"], "question": "Find the total saving balance for each account name.", "question_toks": ["find", "total", "saving", "balance", "for", "each", "account", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[4, [0, [0, 4, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["Find", "the", "total", "saving", "balance", "for", "each", "account", "name", "."], "question_arg": [["find"], ["total"], ["saving"], ["balance"], ["for"], ["each"], ["account"], ["name"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["total", "JJ"], ["saving", "VBG"], ["balance", "NN"], ["for", "IN"], ["each", "DT"], ["account", "NN"], ["name", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(4) C(3) T(1) A(0) C(2) T(0)"}, {"db_id": "dorm_1", "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "JOIN", "dorm", "AS", "T3", "ON", "T3.dormid", "=", "T2.dormid", "WHERE", "T3.dorm_name", "=", "'Smith", "Hall", "'", "AND", "T1.sex", "=", "'F", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "join", "dorm", "as", "t3", "on", "t3", ".", "dormid", "=", "t2", ".", "dormid", "where", "t3", ".", "dorm_name", "=", "value", "and", "t1", ".", "sex", "=", "value"], "question": "Find the number of female students (with F sex) living in Smith Hall", "question_toks": ["find", "number", "of", "female", "student", "(", "with", "f", "sex", ")", "living", "in", "smith", "hall"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 18, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Smith Hall\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"F\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["Find", "the", "number", "of", "female", "students", "(", "with", "F", "sex", ")", "living", "in", "Smith", "Hall"], "question_arg": [["find"], ["room", "number"], ["of"], ["female"], ["student"], ["("], ["with"], ["f"], ["sex"], [")"], ["living"], ["in"], ["smith"], ["hall"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["number", "NN"], ["of", "IN"], ["female", "JJ"], ["student", "NN"], ["(", "("], ["with", "IN"], ["f", "NN"], ["sex", "NN"], [")", ")"], ["living", "NN"], ["in", "IN"], ["smith", "JJ"], ["hall", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(4) Filter(0) Filter(2) A(0) C(10) T(1) Filter(2) A(0) C(5) T(0)"}, {"db_id": "csu_1", "query": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\"", "query_toks": ["SELECT", "sum", "(", "t1.graduate", ")", "FROM", "discipline_enrollments", "AS", "t1", "JOIN", "campuses", "AS", "t2", "ON", "t1.campus", "=", "t2.id", "WHERE", "t1.year", "=", "2004", "AND", "t2.campus", "=", "``", "San", "Francisco", "State", "University", "''"], "query_toks_no_value": ["select", "sum", "(", "t1", ".", "graduate", ")", "from", "discipline_enrollments", "as", "t1", "join", "campuses", "as", "t2", "on", "t1", ".", "campus", "=", "t2", ".", "id", "where", "t1", ".", "year", "=", "value", "and", "t2", ".", "campus", "=", "value"], "question": "How many people graduated from San Francisco State University in 2004?", "question_toks": ["how", "many", "people", "graduated", "from", "san", "francisco", "state", "university", "in", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [false, [[4, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], 2004.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"San Francisco State University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "campus", "location", "county", "year", "campus", "year", "campus fee", "year", "campus", "degrees", "campus", "discipline", "year", "undergraduate", "graduate", "campus", "year", "totalenrollment ay", "fte ay", "campus", "year", "faculty"], "table_names": ["campuses", "csu fees", "degrees", "discipline enrollments", "enrollments", "faculty"], "col_set": ["*", "id", "campus", "location", "county", "year", "campus fee", "degrees", "discipline", "undergraduate", "graduate", "totalenrollment ay", "fte ay", "faculty"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5], "keys": {"6": 6, "1": 1, "10": 1, "12": 12, "17": 17, "21": 1, "9": 9}, "origin_question_toks": ["How", "many", "people", "graduated", "from", "San", "Francisco", "State", "University", "in", "2004", "?"], "question_arg": [["how"], ["many"], ["people"], ["graduated"], ["from"], ["san"], ["francisco"], ["state"], ["university"], ["in"], ["year"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["people", "NNS"], ["graduated", "VBD"], ["from", "IN"], ["san", "JJ"], ["francisco", "NN"], ["state", "NN"], ["university", "NN"], ["in", "IN"], ["2004", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(4) C(10) T(3) Filter(0) Filter(2) A(0) C(5) T(3) Filter(2) A(0) C(2) T(0)"}, {"db_id": "climbing", "query": "SELECT Country FROM mountain WHERE Height  >  5000", "query_toks": ["SELECT", "Country", "FROM", "mountain", "WHERE", "Height", ">", "5000"], "query_toks_no_value": ["select", "country", "from", "mountain", "where", "height", ">", "value"], "question": "What are the countries of mountains with height bigger than 5000?", "question_toks": ["what", "are", "country", "of", "mountain", "with", "height", "bigger", "than", "5000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 5000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["What", "are", "the", "countries", "of", "mountains", "with", "height", "bigger", "than", "5000", "?"], "question_arg": [["what"], ["are"], ["country"], ["of"], ["mountain"], ["with"], ["height"], ["bigger"], ["than"], ["5000"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["MORE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["country", "NN"], ["of", "IN"], ["mountain", "NN"], ["with", "IN"], ["height", "NN"], ["bigger", "JJR"], ["than", "IN"], ["5000", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(0) Filter(5) A(0) C(3) T(0)"}, {"db_id": "activity_1", "query": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\"", "query_toks": ["SELECT", "T2.fname", ",", "T2.lname", "FROM", "Faculty", "AS", "T1", "JOIN", "Student", "AS", "T2", "ON", "T1.FacID", "=", "T2.advisor", "WHERE", "T1.fname", "=", "``", "Michael", "''", "AND", "T1.lname", "=", "``", "Goodrich", "''"], "query_toks_no_value": ["select", "t2", ".", "fname", ",", "t2", ".", "lname", "from", "faculty", "as", "t1", "join", "student", "as", "t2", "on", "t1", ".", "facid", "=", "t2", ".", "advisor", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Which students are advised by Michael Goodrich? Give me their first and last names.", "question_toks": ["which", "student", "are", "advised", "by", "michael", "goodrich", "?", "give", "me", "their", "first", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 4], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 15, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], "\"Michael\"", null], "and", [false, 2, [0, [0, 16, false], null], "\"Goodrich\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["Which", "students", "are", "advised", "by", "Michael", "Goodrich", "?", "Give", "me", "their", "first", "and", "last", "names", "."], "question_arg": [["which"], ["student"], ["are"], ["advised"], ["by"], ["michael"], ["goodrich"], ["?"], ["give"], ["me"], ["their"], ["first", "name"], ["and"], ["last", "name"], ["."]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["student", "NN"], ["are", "VBP"], ["advised", "VBN"], ["by", "IN"], ["michael", "NN"], ["goodrich", "NN"], ["?", "."], ["give", "VB"], ["me", "PRP"], ["their", "PRP$"], ["first", "JJ"], ["and", "CC"], ["last", "JJ"], ["name", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(6) T(3) A(0) C(5) T(3) Filter(0) Filter(2) A(0) C(6) T(4) Filter(2) A(0) C(5) T(4)"}, {"db_id": "csu_1", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"", "query_toks": ["SELECT", "campus", "FROM", "campuses", "WHERE", "county", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "campus", "from", "campuses", "where", "county", "=", "value"], "question": "Report the name of all campuses in Los Angeles county.", "question_toks": ["report", "name", "of", "all", "campus", "in", "los", "angeles", "county", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"Los Angeles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "campus", "location", "county", "year", "campus", "year", "campus fee", "year", "campus", "degrees", "campus", "discipline", "year", "undergraduate", "graduate", "campus", "year", "totalenrollment ay", "fte ay", "campus", "year", "faculty"], "table_names": ["campuses", "csu fees", "degrees", "discipline enrollments", "enrollments", "faculty"], "col_set": ["*", "id", "campus", "location", "county", "year", "campus fee", "degrees", "discipline", "undergraduate", "graduate", "totalenrollment ay", "fte ay", "faculty"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5], "keys": {"6": 6, "1": 1, "10": 1, "12": 12, "17": 17, "21": 1, "9": 9}, "origin_question_toks": ["Report", "the", "name", "of", "all", "campuses", "in", "Los", "Angeles", "county", "."], "question_arg": [["report"], ["name"], ["of"], ["all"], ["campus"], ["in"], ["los"], ["angeles"], ["county"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["report", "NN"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["campus", "NN"], ["in", "IN"], ["los", "JJ"], ["angeles", "NNS"], ["county", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(4) T(0)"}, {"db_id": "small_bank_1", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance", "query_toks": ["SELECT", "T1.name", "FROM", "accounts", "AS", "T1", "JOIN", "checking", "AS", "T2", "ON", "T1.custid", "=", "T2.custid", "JOIN", "savings", "AS", "T3", "ON", "T1.custid", "=", "T3.custid", "WHERE", "T2.balance", ">", "T3.balance"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "accounts", "as", "t1", "join", "checking", "as", "t2", "on", "t1", ".", "custid", "=", "t2", ".", "custid", "join", "savings", "as", "t3", "on", "t1", ".", "custid", "=", "t3", ".", "custid", "where", "t2", ".", "balance", ">", "t3", ".", "balance"], "question": "Find the name of accounts whose checking balance is higher than corresponding saving balance.", "question_toks": ["find", "name", "of", "account", "whose", "checking", "balance", "is", "higher", "than", "corresponding", "saving", "balance", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 3, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], [0, 4, false], null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "customer id", "name", "customer id", "balance", "customer id", "balance"], "table_names": ["accounts", "savings", "checking"], "col_set": ["*", "customer id", "name", "balance"], "col_table": [-1, 0, 0, 1, 1, 2, 2], "keys": {"3": 3, "1": 1, "5": 5}, "origin_question_toks": ["Find", "the", "name", "of", "accounts", "whose", "checking", "balance", "is", "higher", "than", "corresponding", "saving", "balance", "."], "question_arg": [["find"], ["name"], ["of"], ["account"], ["whose"], ["checking"], ["balance"], ["is"], ["higher"], ["than"], ["corresponding"], ["saving"], ["balance"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["table"], ["col"], ["NONE"], ["MORE"], ["NONE"], ["NONE"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["account", "NN"], ["whose", "WP$"], ["checking", "VBG"], ["balance", "NN"], ["is", "VBZ"], ["higher", "JJR"], ["than", "IN"], ["corresponding", "VBG"], ["saving", "VBG"], ["balance", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(5) A(0) C(3) T(2)"}, {"db_id": "network_1", "query": "SELECT name FROM Highschooler WHERE grade  =  10", "query_toks": ["SELECT", "name", "FROM", "Highschooler", "WHERE", "grade", "=", "10"], "query_toks_no_value": ["select", "name", "from", "highschooler", "where", "grade", "=", "value"], "question": "What are the names of all high schoolers in grade 10?", "question_toks": ["what", "are", "name", "of", "all", "high", "schoolers", "in", "grade", "10", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "id", "name", "grade", "student id", "friend id", "student id", "liked id"], "table_names": ["high schooler", "friend", "likes"], "col_set": ["*", "id", "name", "grade", "student id", "friend id", "liked id"], "col_table": [-1, 0, 0, 0, 1, 1, 2, 2], "keys": {"5": 1, "1": 1, "4": 4, "6": 6, "7": 1}, "origin_question_toks": ["What", "are", "the", "names", "of", "all", "high", "schoolers", "in", "grade", "10", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["all"], ["high"], ["schoolers"], ["in"], ["grade"], ["10"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["value"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["high", "JJ"], ["schoolers", "NNS"], ["in", "IN"], ["grade", "NN"], ["10", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(3) T(0)"}, {"db_id": "train_station", "query": "SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges", "query_toks": ["SELECT", "name", ",", "LOCATION", "FROM", "station", "ORDER", "BY", "Annual_entry_exit", ",", "Annual_interchanges"], "query_toks_no_value": ["select", "name", ",", "location", "from", "station", "order", "by", "annual_entry_exit", ",", "annual_interchanges"], "question": "List the names and locations of all stations ordered by their yearly entry exit and interchange amounts.", "question_toks": ["list", "name", "and", "location", "of", "all", "station", "ordered", "by", "their", "yearly", "entry", "exit", "and", "interchange", "amount", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 3, false], null], [0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "name", "time", "service", "train id", "station id"], "table_names": ["station", "train", "train station"], "col_set": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "time", "service"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2], "keys": {"14": 1, "1": 1, "13": 13, "9": 9}, "origin_question_toks": ["List", "the", "names", "and", "locations", "of", "all", "stations", "ordered", "by", "their", "yearly", "entry", "exit", "and", "interchange", "amounts", "."], "question_arg": [["list"], ["name"], ["and"], ["location"], ["of"], ["all"], ["station"], ["ordered"], ["by"], ["their"], ["yearly"], ["annual", "entry", "exit"], ["and"], ["annual", "interchange"], ["amount"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["list", "NN"], ["name", "NN"], ["and", "CC"], ["location", "NN"], ["of", "IN"], ["all", "DT"], ["station", "NN"], ["ordered", "VBN"], ["by", "IN"], ["their", "PRP$"], ["yearly", "JJ"], ["entry", "NN"], ["exit", "NN"], ["and", "CC"], ["interchange", "NN"], ["amount", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(1) A(0) C(2) T(0) A(0) C(6) T(0) Order(1) A(0) C(3) T(0)"}, {"db_id": "activity_1", "query": "SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20", "query_toks": ["SELECT", "StuID", "FROM", "Participates_in", "INTERSECT", "SELECT", "StuID", "FROM", "Student", "WHERE", "age", "<", "20"], "query_toks_no_value": ["select", "stuid", "from", "participates_in", "intersect", "select", "stuid", "from", "student", "where", "age", "<", "value"], "question": "Show the ids for all the students who participate in an activity and are under 20.", "question_toks": ["show", "id", "for", "all", "student", "who", "participate", "in", "an", "activity", "and", "are", "under", "20", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "activity id", "activity name", "student id", "activity id", "faculty id", "activity id", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "faculty id", "last name", "first name", "rank", "sex", "phone", "room", "building"], "table_names": ["activity", "participates in", "faculty participates in", "student", "faculty"], "col_set": ["*", "activity id", "activity name", "student id", "faculty id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "rank", "phone", "room", "building"], "col_table": [-1, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4], "keys": {"4": 1, "1": 1, "3": 7, "7": 7, "6": 1, "5": 15, "15": 15}, "origin_question_toks": ["Show", "the", "ids", "for", "all", "the", "students", "who", "participate", "in", "an", "activity", "and", "are", "under", "20", "."], "question_arg": [["show"], ["id"], ["for"], ["all"], ["student"], ["who"], ["participate"], ["in"], ["an"], ["activity"], ["and"], ["are"], ["under"], ["20"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["show", "NN"], ["id", "NN"], ["for", "IN"], ["all", "DT"], ["student", "NN"], ["who", "WP"], ["participate", "VBP"], ["in", "IN"], ["an", "DT"], ["activity", "NN"], ["and", "CC"], ["are", "VBP"], ["under", "IN"], ["20", "CD"], [".", "."]], "rule_label": "Root1(0) Root(5) Sel(0) N(0) A(0) C(3) T(1) Root(3) Sel(0) N(0) A(0) C(3) T(3) Filter(4) A(0) C(7) T(3)"}, {"db_id": "climbing", "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\"", "query_toks": ["SELECT", "DISTINCT", "T2.Name", "FROM", "climber", "AS", "T1", "JOIN", "mountain", "AS", "T2", "ON", "T1.Mountain_ID", "=", "T2.Mountain_ID", "WHERE", "T1.Country", "=", "``", "West", "Germany", "''"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", "from", "climber", "as", "t1", "join", "mountain", "as", "t2", "on", "t1", ".", "mountain_id", "=", "t2", ".", "mountain_id", "where", "t1", ".", "country", "=", "value"], "question": "Show the distinct names of mountains climbed by climbers from country \"West Germany\".", "question_toks": ["show", "distinct", "name", "of", "mountain", "climbed", "by", "climber", "from", "country", "'", "west", "germany", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"West Germany\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "name", "country", "time", "points", "mountain id"], "table_names": ["mountain", "climber"], "col_set": ["*", "mountain id", "name", "height", "prominence", "range", "country", "climber id", "time", "points"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"12": 1, "1": 1, "7": 7}, "origin_question_toks": ["Show", "the", "distinct", "names", "of", "mountains", "climbed", "by", "climbers", "from", "country", "``", "West", "Germany", "''", "."], "question_arg": [["show"], ["distinct"], ["name"], ["of"], ["mountain"], ["climbed"], ["by"], ["climber"], ["from"], ["country"], ["'"], ["west"], ["germany"], ["'"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["country"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["distinct", "JJ"], ["name", "NN"], ["of", "IN"], ["mountain", "NN"], ["climbed", "VBN"], ["by", "IN"], ["climber", "NN"], ["from", "IN"], ["country", "NN"], ["'", "POS"], ["west", "JJS"], ["germany", "NN"], ["'", "POS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(6) T(1)"}, {"db_id": "train_station", "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", "FROM", "train_station", "AS", "T1", "JOIN", "station", "AS", "T2", "ON", "T1.station_id", "=", "T2.station_id", "GROUP", "BY", "T1.station_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "train_station", "as", "t1", "join", "station", "as", "t2", "on", "t1", ".", "station_id", "=", "t2", ".", "station_id", "group", "by", "t1", ".", "station_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the station name with greatest number of trains.", "question_toks": ["show", "station", "name", "with", "greatest", "number", "of", "train", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 14, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 14, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "name", "time", "service", "train id", "station id"], "table_names": ["station", "train", "train station"], "col_set": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "time", "service"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2], "keys": {"14": 1, "1": 1, "13": 13, "9": 9}, "origin_question_toks": ["Show", "the", "station", "name", "with", "greatest", "number", "of", "trains", "."], "question_arg": [["show"], ["station"], ["name"], ["with"], ["greatest"], ["number", "of", "platform"], ["train"], ["."]], "question_arg_type": [["NONE"], ["table"], ["col"], ["NONE"], ["MOST"], ["col"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["station", "NN"], ["name", "NN"], ["with", "IN"], ["greatest", "JJS"], ["number", "NN"], ["of", "IN"], ["train", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(2) T(0) Sup(0) A(3) C(0) T(2)"}, {"db_id": "train_station", "query": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15", "query_toks": ["SELECT", "LOCATION", "FROM", "station", "EXCEPT", "SELECT", "LOCATION", "FROM", "station", "WHERE", "number_of_platforms", ">", "=", "15"], "query_toks_no_value": ["select", "location", "from", "station", "except", "select", "location", "from", "station", "where", "number_of_platforms", ">", "=", "value"], "question": "Show all locations which don't have a train station with at least 15 platforms.", "question_toks": ["show", "all", "location", "which", "do", "n't", "have", "a", "train", "station", "with", "at", "least", "15", "platform", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 5, [0, [0, 8, false], null], 15.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "names": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "name", "time", "service", "train id", "station id"], "table_names": ["station", "train", "train station"], "col_set": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "time", "service"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2], "keys": {"14": 1, "1": 1, "13": 13, "9": 9}, "origin_question_toks": ["Show", "all", "locations", "which", "do", "n't", "have", "a", "train", "station", "with", "at", "least", "15", "platforms", "."], "question_arg": [["show"], ["all"], ["location"], ["which"], ["do"], ["n't"], ["have"], ["a"], ["train", "station"], ["with"], ["at"], ["least"], ["15"], ["platform"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["value"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "VB"], ["all", "DT"], ["location", "NN"], ["which", "WDT"], ["do", "VBP"], ["n't", "RB"], ["have", "VB"], ["a", "DT"], ["train", "NN"], ["station", "NN"], ["with", "IN"], ["at", "IN"], ["least", "JJS"], ["15", "CD"], ["platform", "NN"], [".", "."]], "rule_label": "Root1(2) Root(5) Sel(0) N(0) A(0) C(6) T(0) Root(3) Sel(0) N(0) A(0) C(6) T(0) Filter(7) A(0) C(8) T(0)"}, {"db_id": "machine_repair", "query": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID", "query_toks": ["SELECT", "T3.Name", ",", "T2.Machine_series", "FROM", "repair_assignment", "AS", "T1", "JOIN", "machine", "AS", "T2", "ON", "T1.machine_id", "=", "T2.machine_id", "JOIN", "technician", "AS", "T3", "ON", "T1.technician_ID", "=", "T3.technician_ID"], "query_toks_no_value": ["select", "t3", ".", "name", ",", "t2", ".", "machine_series", "from", "repair_assignment", "as", "t1", "join", "machine", "as", "t2", "on", "t1", ".", "machine_id", "=", "t2", ".", "machine_id", "join", "technician", "as", "t3", "on", "t1", ".", "technician_id", "=", "t3", ".", "technician_id"], "question": "Show names of technicians and series of machines they are assigned to repair.", "question_toks": ["show", "name", "of", "technician", "and", "series", "of", "machine", "they", "are", "assigned", "to", "repair", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 19, false], null], [0, 5, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "repair id", "name", "launch date", "notes", "machine id", "making year", "class", "team", "machine series", "value points", "quality rank", "technician id", "name", "team", "starting year", "age", "technician id", "repair id", "machine id"], "table_names": ["repair", "machine", "technician", "repair assignment"], "col_set": ["*", "repair id", "name", "launch date", "notes", "machine id", "making year", "class", "team", "machine series", "value points", "quality rank", "technician id", "starting year", "age"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3], "keys": {"19": 5, "5": 5, "18": 1, "1": 1, "17": 17, "12": 12}, "origin_question_toks": ["Show", "names", "of", "technicians", "and", "series", "of", "machines", "they", "are", "assigned", "to", "repair", "."], "question_arg": [["show"], ["name"], ["of"], ["technician"], ["and"], ["machine", "series"], ["of"], ["machine"], ["they"], ["are"], ["assigned"], ["to"], ["repair"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["of", "IN"], ["technician", "JJ"], ["and", "CC"], ["series", "NN"], ["of", "IN"], ["machine", "NN"], ["they", "PRP"], ["are", "VBP"], ["assigned", "VBN"], ["to", "TO"], ["repair", "VB"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(2) T(2) A(0) C(9) T(1)"}, {"db_id": "dorm_1", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')", "query_toks": ["SELECT", "T1.fname", ",", "T1.age", "FROM", "student", "AS", "T1", "JOIN", "lives_in", "AS", "T2", "ON", "T1.stuid", "=", "T2.stuid", "WHERE", "T2.dormid", "NOT", "IN", "(", "SELECT", "T3.dormid", "FROM", "has_amenity", "AS", "T3", "JOIN", "dorm_amenity", "AS", "T4", "ON", "T3.amenid", "=", "T4.amenid", "WHERE", "T4.amenity_name", "=", "'TV", "Lounge", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "fname", ",", "t1", ".", "age", "from", "student", "as", "t1", "join", "lives_in", "as", "t2", "on", "t1", ".", "stuid", "=", "t2", ".", "stuid", "where", "t2", ".", "dormid", "not", "in", "(", "select", "t3", ".", "dormid", "from", "has_amenity", "as", "t3", "join", "dorm_amenity", "as", "t4", "on", "t3", ".", "amenid", "=", "t4", ".", "amenid", "where", "t4", ".", "amenity_name", "=", "value", ")"], "question": "Find the first name and age of students who are living in the dorms that do not have amenity TV Lounge.", "question_toks": ["find", "first", "name", "and", "age", "of", "student", "who", "are", "living", "in", "dorm", "that", "do", "not", "have", "amenity", "tv", "lounge", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 4]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 17, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[true, 8, [0, [0, 18, false], null], {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 16, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], "\"TV Lounge\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "dorm id", "amenity id", "student id", "dorm id", "room number"], "table_names": ["student", "dorm", "dorm amenity", "has amenity", "lives in"], "col_set": ["*", "student id", "last name", "first name", "age", "sex", "major", "advisor", "city code", "dorm id", "dorm name", "student capacity", "gender", "amenity id", "amenity name", "room number"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4], "keys": {"16": 13, "13": 16, "15": 9, "9": 18, "18": 9, "17": 1, "1": 1}, "origin_question_toks": ["Find", "the", "first", "name", "and", "age", "of", "students", "who", "are", "living", "in", "the", "dorms", "that", "do", "not", "have", "amenity", "TV", "Lounge", "."], "question_arg": [["find"], ["first", "name"], ["and"], ["age"], ["of"], ["student"], ["who"], ["are"], ["living"], ["in"], ["dorm"], ["that"], ["do"], ["not"], ["have"], ["amenity"], ["tv"], ["lounge"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["first", "JJ"], ["name", "NN"], ["and", "CC"], ["age", "NN"], ["of", "IN"], ["student", "NN"], ["who", "WP"], ["are", "VBP"], ["living", "VBG"], ["in", "IN"], ["dorm", "NN"], ["that", "WDT"], ["do", "VBP"], ["not", "RB"], ["have", "VB"], ["amenity", "NN"], ["tv", "NN"], ["lounge", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(3) T(0) A(0) C(4) T(0) Filter(19) A(0) C(9) T(4) Root(3) Sel(0) N(0) A(0) C(9) T(3) Filter(2) A(0) C(14) T(2)"}, {"db_id": "ship_1", "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)", "query_toks": ["SELECT", "name", ",", "CLASS", "FROM", "ship", "WHERE", "ship_id", "NOT", "IN", "(", "SELECT", "ship_id", "FROM", "captain", ")"], "query_toks_no_value": ["select", "name", ",", "class", "from", "ship", "where", "ship_id", "not", "in", "(", "select", "ship_id", "from", "captain", ")"], "question": "what are the names and classes of the ships that do not have any captain yet?", "question_toks": ["what", "are", "name", "and", "class", "of", "ship", "that", "do", "not", "have", "any", "captain", "yet", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "captain id", "name", "ship id", "age", "class", "rank", "ship id", "name", "type", "built year", "class", "flag"], "table_names": ["captain", "ship"], "col_set": ["*", "captain id", "name", "ship id", "age", "class", "rank", "type", "built year", "flag"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "keys": {"3": 7, "7": 7, "1": 1}, "origin_question_toks": ["what", "are", "the", "names", "and", "classes", "of", "the", "ships", "that", "do", "not", "have", "any", "captain", "yet", "?"], "question_arg": [["what"], ["are"], ["name"], ["and"], ["class"], ["of"], ["ship"], ["that"], ["do"], ["not"], ["have"], ["any"], ["captain"], ["yet"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "JJ"], ["and", "CC"], ["class", "NN"], ["of", "IN"], ["ship", "NN"], ["that", "WDT"], ["do", "VBP"], ["not", "RB"], ["have", "VB"], ["any", "DT"], ["captain", "NN"], ["yet", "RB"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(2) T(1) A(0) C(5) T(1) Filter(19) A(0) C(3) T(1) Root(5) Sel(0) N(0) A(0) C(3) T(0)"}, {"db_id": "train_station", "query": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION", "query_toks": ["SELECT", "LOCATION", ",", "sum", "(", "number_of_platforms", ")", ",", "sum", "(", "total_passengers", ")", "FROM", "station", "GROUP", "BY", "LOCATION"], "query_toks_no_value": ["select", "location", ",", "sum", "(", "number_of_platforms", ")", ",", "sum", "(", "total_passengers", ")", "from", "station", "group", "by", "location"], "question": "Show all locations and the total number of platforms and passengers for all train stations in each location.", "question_toks": ["show", "all", "location", "and", "total", "number", "of", "platform", "and", "passenger", "for", "all", "train", "station", "in", "each", "location", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [4, [0, [0, 8, false], null]], [4, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "name", "time", "service", "train id", "station id"], "table_names": ["station", "train", "train station"], "col_set": ["*", "station id", "name", "annual entry exit", "annual interchanges", "total passengers", "location", "main services", "number of platforms", "train id", "time", "service"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2], "keys": {"14": 1, "1": 1, "13": 13, "9": 9}, "origin_question_toks": ["Show", "all", "locations", "and", "the", "total", "number", "of", "platforms", "and", "passengers", "for", "all", "train", "stations", "in", "each", "location", "."], "question_arg": [["show"], ["all"], ["location"], ["and"], ["total", "passenger"], ["number", "of", "platform"], ["and"], ["total", "passenger"], ["for"], ["all"], ["train", "station"], ["in"], ["each"], ["location"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["show", "VB"], ["all", "DT"], ["location", "NN"], ["and", "CC"], ["total", "JJ"], ["number", "NN"], ["of", "IN"], ["platform", "NN"], ["and", "CC"], ["passenger", "NN"], ["for", "IN"], ["all", "DT"], ["train", "NN"], ["station", "NN"], ["in", "IN"], ["each", "DT"], ["location", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(2) A(0) C(6) T(0) A(4) C(8) T(0) A(4) C(5) T(0)"}]