[{"db_id": "network_2", "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'", "query_toks": ["SELECT", "T1.name", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Dan", "'", "INTERSECT", "SELECT", "T1.name", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Alice", "'"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "intersect", "select", "t1", ".", "name", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value"], "question": "Find the name and age of the person who is a friend of both Dan and Alice.", "question_toks": ["find", "name", "and", "age", "of", "person", "who", "is", "a", "friend", "of", "both", "dan", "and", "alice", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Dan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Find", "the", "name", "and", "age", "of", "the", "person", "who", "is", "a", "friend", "of", "both", "Dan", "and", "Alice", "."], "question_arg": [["find"], ["name"], ["and"], ["age"], ["of"], ["person"], ["who"], ["is"], ["a"], ["friend"], ["of"], ["both"], ["dan"], ["and"], ["alice"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["and", "CC"], ["age", "NN"], ["of", "IN"], ["person", "NN"], ["who", "WP"], ["is", "VBZ"], ["a", "DT"], ["friend", "NN"], ["of", "IN"], ["both", "DT"], ["dan", "NN"], ["and", "CC"], ["alice", "NN"], [".", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(1) A(0) C(1) T(0) A(0) C(2) T(0) Filter(2) A(0) C(6) T(1) Root(3) Sel(0) N(1) A(0) C(1) T(0) A(0) C(2) T(0) Filter(2) A(0) C(6) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "density", "=", "(", "SELECT", "MIN", "(", "density", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "density", "=", "(", "select", "min", "(", "density", ")", "from", "state", ")"], "question": "which state has the least population density", "question_toks": ["which", "state", "ha", "least", "population", "density"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "least", "population", "density"], "question_arg": [["which"], ["state"], ["ha"], ["least"], ["population"], ["density"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["col"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["least", "JJS"], ["population", "NN"], ["density", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(6) T(0) Root(5) Sel(0) N(0) A(2) C(6) T(0)"}, {"db_id": "geo", "query": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );", "query_toks": ["SELECT", "traverse", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MIN", "(", "LENGTH", ")", "FROM", "river", ")", ";"], "query_toks_no_value": ["select", "traverse", "from", "river", "where", "length", "=", "(", "select", "min", "(", "length", ")", "from", "river", ")"], "question": "what states does the shortest river run through", "question_toks": ["what", "state", "doe", "shortest", "river", "run", "through"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[2, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "does", "the", "shortest", "river", "run", "through"], "question_arg": [["what"], ["state"], ["doe"], ["shortest"], ["river"], ["run"], ["through"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["doe", "NN"], ["shortest", "JJS"], ["river", "NN"], ["run", "VBP"], ["through", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(2) C(17) T(6)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")"], "question": "what state has the smallest area", "question_toks": ["what", "state", "ha", "smallest", "area"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "has", "the", "smallest", "area"], "question_arg": [["what"], ["state"], ["ha"], ["smallest"], ["area"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["ha", "NN"], ["smallest", "JJS"], ["area", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "icfp_1", "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\"", "query_toks": ["SELECT", "fname", "FROM", "authors", "WHERE", "lname", "=", "``", "Ueno", "''"], "query_toks_no_value": ["select", "fname", "from", "authors", "where", "lname", "=", "value"], "question": "What is the first name of the author with last name \"Ueno\"?", "question_toks": ["what", "is", "first", "name", "of", "author", "with", "last", "name", "'", "ueno", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Ueno\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["What", "is", "the", "first", "name", "of", "the", "author", "with", "last", "name", "``", "Ueno", "''", "?"], "question_arg": [["what"], ["is"], ["first", "name"], ["of"], ["author"], ["with"], ["last", "name"], ["'"], ["ueno"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["first", "JJ"], ["name", "NN"], ["of", "IN"], ["author", "NN"], ["with", "IN"], ["last", "JJ"], ["name", "NN"], ["'", "''"], ["ueno", "JJ"], ["'", "POS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(1) Filter(2) A(0) C(5) T(1)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "Give me the best restaurant in san francisco for french food ?", "question_toks": ["give", "me", "best", "restaurant", "in", "san", "francisco", "for", "french", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["Give", "me", "the", "best", "restaurant", "in", "san", "francisco", "for", "french", "food", "?"], "question_arg": [["give"], ["me"], ["best"], ["restaurant"], ["in"], ["san"], ["francisco"], ["for"], ["french"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["best", "JJS"], ["restaurant", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["for", "IN"], ["french", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(1) C(7) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM city GROUP BY state_name ORDER BY AVG ( population ) LIMIT 1;", "query_toks": ["SELECT", "state_name", "FROM", "city", "GROUP", "BY", "state_name", "ORDER", "BY", "AVG", "(", "population", ")", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "state_name", "from", "city", "group", "by", "state_name", "order", "by", "avg", "(", "population", ")", "limit", "value"], "question": "which state has the smallest average urban population", "question_toks": ["which", "state", "ha", "smallest", "average", "urban", "population"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["asc", [[0, [5, 8, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "smallest", "average", "urban", "population"], "question_arg": [["which"], ["state"], ["ha"], ["smallest"], ["average"], ["urban"], ["population"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["agg"], ["NONE"], ["col"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["smallest", "JJS"], ["average", "JJ"], ["urban", "JJ"], ["population", "NN"]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(1) T(1) Sup(1) A(5) C(2) T(1)"}, {"db_id": "icfp_1", "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "t1.title", ")", "FROM", "papers", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Tokohu", "University", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "title", ")", "from", "papers", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "How many papers are published by the institution \"Tokohu University\"?", "question_toks": ["how", "many", "paper", "are", "published", "by", "institution", "'", "tokohu", "university", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 8, true], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Tokohu University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["How", "many", "papers", "are", "published", "by", "the", "institution", "``", "Tokohu", "University", "''", "?"], "question_arg": [["how"], ["many"], ["paper"], ["are"], ["published"], ["by"], ["institution"], ["'"], ["tokohu"], ["university"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["paper", "NN"], ["are", "VBP"], ["published", "VBN"], ["by", "IN"], ["institution", "NN"], ["'", "POS"], ["tokohu", "NN"], ["university", "NN"], ["'", "POS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(8) T(2) Filter(2) A(0) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );", "query_toks": ["SELECT", "state_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "t1.population", ")", "FROM", "state", "AS", "t2", "JOIN", "city", "AS", "t1", "ON", "t2.capital", "=", "t1.city_name", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "t1", ".", "population", ")", "from", "state", "as", "t2", "join", "city", "as", "t1", "on", "t2", ".", "capital", "=", "t1", ".", "city_name", ")"], "question": "what state has the largest capital", "question_toks": ["what", "state", "ha", "largest", "capital"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 7, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "has", "the", "largest", "capital"], "question_arg": [["what"], ["state"], ["ha"], ["largest"], ["capital"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["ha", "NN"], ["largest", "JJS"], ["capital", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "geo", "query": "SELECT COUNT ( city_name ) FROM city;", "query_toks": ["SELECT", "COUNT", "(", "city_name", ")", "FROM", "city", ";"], "query_toks_no_value": ["select", "count", "(", "city_name", ")", "from", "city"], "question": "how many cities does the usa have", "question_toks": ["how", "many", "city", "doe", "usa", "have"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "cities", "does", "the", "usa", "have"], "question_arg": [["how"], ["many"], ["city"], ["doe"], ["usa"], ["have"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["city", "NN"], ["doe", "NN"], ["usa", "NNS"], ["have", "VBP"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "california", "''", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "california", "''", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", "where", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")", ")", "and", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")"], "question": "what is the largest state that borders california", "question_toks": ["what", "is", "largest", "state", "that", "border", "california"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"california\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"california\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "largest", "state", "that", "borders", "california"], "question_arg": [["what"], ["is"], ["largest"], ["state"], ["that"], ["border"], ["california"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["largest", "JJS"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["california", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(11) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(1) C(3) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.SourceAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "sourceairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "How many flights depart from City Aberdeen?", "question_toks": ["how", "many", "flight", "depart", "from", "city", "aberdeen", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["How", "many", "flights", "depart", "from", "City", "Aberdeen", "?"], "question_arg": [["how"], ["many"], ["flight"], ["depart"], ["from"], ["city"], ["aberdeen"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["city"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["flight", "NN"], ["depart", "NN"], ["from", "IN"], ["city", "NN"], ["aberdeen", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(2) A(0) C(5) T(1)"}, {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good french restaurant in the yosemite and mono lake area ?", "question_toks": ["where", "is", "a", "good", "french", "restaurant", "in", "yosemite", "and", "mono", "lake", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"yosemite and mono lake area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "is", "a", "good", "french", "restaurant", "in", "the", "yosemite", "and", "mono", "lake", "area", "?"], "question_arg": [["where"], ["is"], ["a"], ["good"], ["french"], ["restaurant"], ["in"], ["yosemite"], ["and"], ["mono"], ["lake"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["a", "DT"], ["good", "JJ"], ["french", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["yosemite", "NN"], ["and", "CC"], ["mono", "JJ"], ["lake", "NN"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "network_2", "query": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)", "query_toks": ["SELECT", "DISTINCT", "T2.name", ",", "T2.friend", ",", "T1.age", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.age", ">", "(", "SELECT", "avg", "(", "age", ")", "FROM", "person", ")"], "query_toks_no_value": ["select", "distinct", "t2", ".", "name", ",", "t2", ".", "friend", ",", "t1", ".", "age", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "age", ">", "(", "select", "avg", "(", "age", ")", "from", "person", ")"], "question": "Who has friends that are older than the average age? Print their friends and their ages as well", "question_toks": ["who", "ha", "friend", "that", "are", "older", "than", "average", "age", "?", "print", "their", "friend", "and", "their", "age", "a", "well"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 7, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Who", "has", "friends", "that", "are", "older", "than", "the", "average", "age", "?", "Print", "their", "friends", "and", "their", "ages", "as", "well"], "question_arg": [["who"], ["ha"], ["friend"], ["that"], ["are"], ["older"], ["than"], ["average"], ["age"], ["?"], ["print"], ["their"], ["friend"], ["and"], ["their"], ["age"], ["a"], ["well"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["who", "WP"], ["ha", "VBD"], ["friend", "NN"], ["that", "WDT"], ["are", "VBP"], ["older", "JJR"], ["than", "IN"], ["average", "JJ"], ["age", "NN"], ["?", "."], ["print", "VB"], ["their", "PRP$"], ["friend", "NN"], ["and", "CC"], ["their", "PRP$"], ["age", "NN"], ["a", "DT"], ["well", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(2) A(0) C(1) T(1) A(0) C(6) T(1) A(0) C(2) T(0) Filter(13) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(5) C(2) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good restaurant in alameda ?", "question_toks": ["give", "me", "a", "good", "restaurant", "in", "alameda", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"alameda\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "a", "good", "restaurant", "in", "alameda", "?"], "question_arg": [["give"], ["me"], ["a"], ["good"], ["restaurant"], ["in"], ["alameda"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["a", "DT"], ["good", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["alameda", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(5) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "city_name", "=", "``", "boulder", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "city_name", "=", "value"], "question": "how big is the city of boulder", "question_toks": ["how", "big", "is", "city", "of", "boulder"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"boulder\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "big", "is", "the", "city", "of", "boulder"], "question_arg": [["how"], ["big"], ["is"], ["city"], ["of"], ["boulder"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["big", "JJ"], ["is", "VBZ"], ["city", "NN"], ["of", "IN"], ["boulder", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );", "query_toks": ["SELECT", "state_name", "FROM", "highlow", "WHERE", "highest_elevation", "=", "(", "SELECT", "MAX", "(", "highest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "highlow", "where", "highest_elevation", "=", "(", "select", "max", "(", "highest_elevation", ")", "from", "highlow", ")"], "question": "what state has highest elevation", "question_toks": ["what", "state", "ha", "highest", "elevation"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "has", "highest", "elevation"], "question_arg": [["what"], ["state"], ["ha"], ["highest", "elevation"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["col"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["ha", "NN"], ["highest", "JJS"], ["elevation", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(11) A(0) C(9) T(3) Root(5) Sel(0) N(0) A(1) C(9) T(3)"}, {"db_id": "concert_singer", "query": "SELECT count(*) FROM singer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "singer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "singer"], "question": "How many singers do we have?", "question_toks": ["how", "many", "singer", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["How", "many", "singers", "do", "we", "have", "?"], "question_arg": [["how"], ["many"], ["singer"], ["do"], ["we"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["singer", "NN"], ["do", "VBP"], ["we", "PRP"], ["have", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "state", ")", ")", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "state", ")", ")", ")"], "question": "what rivers flow through states that border the state with the largest population", "question_toks": ["what", "river", "flow", "through", "state", "that", "border", "state", "with", "largest", "population"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "rivers", "flow", "through", "states", "that", "border", "the", "state", "with", "the", "largest", "population"], "question_arg": [["what"], ["river"], ["flow"], ["through"], ["state"], ["that"], ["border"], ["state"], ["with"], ["largest"], ["population"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["river", "NN"], ["flow", "NN"], ["through", "IN"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["state", "NN"], ["with", "IN"], ["largest", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(18) A(0) C(18) T(6) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(18) A(0) C(1) T(2) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(1) C(2) T(0)"}, {"db_id": "network_2", "query": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')", "query_toks": ["SELECT", "count", "(", "DISTINCT", "name", ")", "FROM", "PersonFriend", "WHERE", "friend", "NOT", "IN", "(", "SELECT", "name", "FROM", "person", "WHERE", "city", "=", "'Austin", "'", ")"], "query_toks_no_value": ["select", "count", "(", "distinct", "name", ")", "from", "personfriend", "where", "friend", "not", "in", "(", "select", "name", "from", "person", "where", "city", "=", "value", ")"], "question": "What is the total number of people who has no friend living in the city of Austin.", "question_toks": ["what", "is", "total", "number", "of", "people", "who", "ha", "no", "friend", "living", "in", "city", "of", "austin", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 6, true], null]]]], "where": [[true, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Austin\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["What", "is", "the", "total", "number", "of", "people", "who", "has", "no", "friend", "living", "in", "the", "city", "of", "Austin", "."], "question_arg": [["what"], ["is"], ["total"], ["number"], ["of"], ["people"], ["who"], ["ha"], ["no"], ["friend"], ["living"], ["in"], ["city"], ["of"], ["austin"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["total", "JJ"], ["number", "NN"], ["of", "IN"], ["people", "NNS"], ["who", "WP"], ["ha", "VBP"], ["no", "DT"], ["friend", "NN"], ["living", "NN"], ["in", "IN"], ["city", "NN"], ["of", "IN"], ["austin", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(1) T(1) Filter(19) A(0) C(6) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(3) T(0)"}, {"db_id": "icfp_1", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "query_toks": ["SELECT", "DISTINCT", "t1.title", "FROM", "papers", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Google", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", "from", "papers", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Find all the papers published by the institution \"Google\".", "question_toks": ["find", "all", "paper", "published", "by", "institution", "'", "google", "'", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Google\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Find", "all", "the", "papers", "published", "by", "the", "institution", "``", "Google", "''", "."], "question_arg": [["find"], ["all"], ["paper"], ["published"], ["by"], ["institution"], ["'"], ["google"], ["'"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["all", "DT"], ["paper", "NN"], ["published", "VBN"], ["by", "IN"], ["institution", "NN"], ["'", "POS"], ["google", "NN"], ["'", "POS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT COUNT ( state_name ) FROM state;", "query_toks": ["SELECT", "COUNT", "(", "state_name", ")", "FROM", "state", ";"], "query_toks_no_value": ["select", "count", "(", "state_name", ")", "from", "state"], "question": "how many states are there in the usa", "question_toks": ["how", "many", "state", "are", "there", "in", "usa"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "are", "there", "in", "the", "usa"], "question_arg": [["how"], ["many"], ["state"], ["are"], ["there"], ["in"], ["usa"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["are", "VBP"], ["there", "RB"], ["in", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(1) T(0)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", "WHERE", "state_name", "=", "``", "wyoming", "''", ")", "AND", "state_name", "=", "``", "wyoming", "''", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", "where", "state_name", "=", "value", ")", "and", "state_name", "=", "value"], "question": "what is the city in wyoming with the largest population", "question_toks": ["what", "is", "city", "in", "wyoming", "with", "largest", "population"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"wyoming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 10, false], null], "\"wyoming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "city", "in", "wyoming", "with", "the", "largest", "population"], "question_arg": [["what"], ["is"], ["city"], ["in"], ["wyoming"], ["with"], ["largest"], ["population"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["city", "NN"], ["in", "IN"], ["wyoming", "VBG"], ["with", "IN"], ["largest", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(0) Filter(11) A(0) C(2) T(1) Root(3) Sel(0) N(0) A(1) C(2) T(1) Filter(2) A(0) C(1) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse  =  ( SELECT state_name FROM city WHERE population  >  150000 GROUP BY state_name ORDER BY COUNT ( city_name ) DESC LIMIT 1 ) ORDER BY LENGTH DESC LIMIT 1;", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "=", "(", "SELECT", "state_name", "FROM", "city", "WHERE", "population", ">", "150000", "GROUP", "BY", "state_name", "ORDER", "BY", "COUNT", "(", "city_name", ")", "DESC", "LIMIT", "1", ")", "ORDER", "BY", "LENGTH", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "=", "(", "select", "state_name", "from", "city", "where", "population", ">", "value", "group", "by", "state_name", "order", "by", "count", "(", "city_name", ")", "desc", "limit", "value", ")", "order", "by", "length", "desc", "limit", "value"], "question": "what is the longest river in the state with the most major cities", "question_toks": ["what", "is", "longest", "river", "in", "state", "with", "most", "major", "city"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 150000.0, null]], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 27, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "longest", "river", "in", "the", "state", "with", "the", "most", "major", "cities"], "question_arg": [["what"], ["is"], ["longest"], ["river"], ["in"], ["state"], ["with"], ["most"], ["major"], ["city"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["longest", "JJS"], ["river", "NN"], ["in", "IN"], ["state", "NN"], ["with", "IN"], ["most", "JJS"], ["major", "JJ"], ["city", "NN"]], "rule_label": "Root1(3) Root(0) Sel(0) N(0) A(0) C(16) T(6) Sup(0) A(0) C(17) T(6) Filter(11) A(0) C(18) T(6) Root(0) Sel(0) N(0) A(0) C(1) T(1) Sup(0) A(3) C(7) T(1) Filter(5) A(0) C(2) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", "WHERE", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", "where", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")", ")", ")", "and", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")", ")"], "question": "what is the population of the largest city in the state with the largest area", "question_toks": ["what", "is", "population", "of", "largest", "city", "in", "state", "with", "largest", "area"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "population", "of", "the", "largest", "city", "in", "the", "state", "with", "the", "largest", "area"], "question_arg": [["what"], ["is"], ["population"], ["of"], ["largest"], ["city"], ["in"], ["state"], ["with"], ["largest"], ["area"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["population", "NN"], ["of", "IN"], ["largest", "JJS"], ["city", "NN"], ["in", "IN"], ["state", "NN"], ["with", "IN"], ["largest", "JJS"], ["area", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(0) Filter(11) A(0) C(2) T(1) Root(3) Sel(0) N(0) A(1) C(2) T(1) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "=", "``", "illinois", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "=", "value"], "question": "which rivers are in illinois", "question_toks": ["which", "river", "are", "in", "illinois"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"illinois\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "rivers", "are", "in", "illinois"], "question_arg": [["which"], ["river"], ["are"], ["in"], ["illinois"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["river", "NN"], ["are", "VBP"], ["in", "IN"], ["illinois", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "state", ")"], "question": "which state has the biggest population", "question_toks": ["which", "state", "ha", "biggest", "population"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "biggest", "population"], "question_arg": [["which"], ["state"], ["ha"], ["biggest"], ["population"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["biggest", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(1) C(2) T(0)"}, {"db_id": "flight_1", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.distance", ">", "5000", "GROUP", "BY", "T1.eid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "distance", ">", "value", "group", "by", "t1", ".", "eid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the salaray and name of the employee with the most certificates to fly planes more than 5000?", "question_toks": ["what", "is", "salaray", "and", "name", "of", "employee", "with", "most", "certificate", "to", "fly", "plane", "more", "than", "5000", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 5000.0, null]], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "salaray", "and", "name", "of", "the", "employee", "with", "the", "most", "certificates", "to", "fly", "planes", "more", "than", "5000", "?"], "question_arg": [["what"], ["is"], ["salaray"], ["and"], ["name"], ["of"], ["employee"], ["with"], ["most"], ["certificate"], ["to"], ["fly"], ["plane"], ["more"], ["than"], ["5000"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["salaray", "JJ"], ["and", "CC"], ["name", "NN"], ["of", "IN"], ["employee", "NN"], ["with", "IN"], ["most", "JJS"], ["certificate", "NN"], ["to", "TO"], ["fly", "VB"], ["plane", "NN"], ["more", "JJR"], ["than", "IN"], ["5000", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(0) Sel(0) N(0) A(0) C(9) T(2) Sup(0) A(3) C(0) T(3) Filter(5) A(0) C(4) T(1)"}, {"db_id": "singer", "query": "SELECT count(*) FROM singer", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "singer"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "singer"], "question": "What is the count of singers?", "question_toks": ["what", "is", "count", "of", "singer", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["What", "is", "the", "count", "of", "singers", "?"], "question_arg": [["what"], ["is"], ["count"], ["of"], ["singer"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["count", "NN"], ["of", "IN"], ["singer", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(0)"}, {"db_id": "geo", "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";", "query_toks": ["SELECT", "capital", "FROM", "state", "WHERE", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "capital", "from", "state", "where", "state_name", "=", "value"], "question": "what is the capital of the state texas", "question_toks": ["what", "is", "capital", "of", "state", "texas"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "capital", "of", "the", "state", "texas"], "question_arg": [["what"], ["is"], ["capital"], ["of"], ["state"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["capital", "NN"], ["of", "IN"], ["state", "NN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "concert_singer", "query": "SELECT country ,  count(*) FROM singer GROUP BY country", "query_toks": ["SELECT", "country", ",", "count", "(", "*", ")", "FROM", "singer", "GROUP", "BY", "country"], "query_toks_no_value": ["select", "country", ",", "count", "(", "*", ")", "from", "singer", "group", "by", "country"], "question": "How many singers are from each country?", "question_toks": ["how", "many", "singer", "are", "from", "each", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["How", "many", "singers", "are", "from", "each", "country", "?"], "question_arg": [["how"], ["many"], ["singer"], ["are"], ["from"], ["each"], ["country"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["singer", "NN"], ["are", "VBP"], ["from", "IN"], ["each", "DT"], ["country", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(9) T(1) A(3) C(0) T(1)"}, {"db_id": "pilot_record", "query": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30", "query_toks": ["SELECT", "DISTINCT", "POSITION", "FROM", "pilot", "WHERE", "Age", ">", "30"], "query_toks_no_value": ["select", "distinct", "position", "from", "pilot", "where", "age", ">", "value"], "question": "List the distinct positions of pilots older than 30.", "question_toks": ["list", "distinct", "position", "of", "pilot", "older", "than", "30", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "pilot id", "aircraft id", "date"], "table_names": ["aircraft", "pilot", "pilot record"], "col_set": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "date"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"18": 1, "1": 1, "17": 17, "8": 8}, "origin_question_toks": ["List", "the", "distinct", "positions", "of", "pilots", "older", "than", "30", "."], "question_arg": [["list"], ["distinct"], ["position"], ["of"], ["pilot"], ["older"], ["than"], ["30"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["MORE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["list", "NN"], ["distinct", "JJ"], ["position", "NN"], ["of", "IN"], ["pilot", "NN"], ["older", "JJR"], ["than", "IN"], ["30", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(13) T(1) Filter(5) A(0) C(11) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "density", "=", "(", "SELECT", "MIN", "(", "density", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "density", "=", "(", "select", "min", "(", "density", ")", "from", "state", ")"], "question": "what state has the least population density", "question_toks": ["what", "state", "ha", "least", "population", "density"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "has", "the", "least", "population", "density"], "question_arg": [["what"], ["state"], ["ha"], ["least"], ["population"], ["density"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["col"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["ha", "VBD"], ["least", "JJS"], ["population", "NN"], ["density", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(6) T(0) Root(5) Sel(0) N(0) A(2) C(6) T(0)"}, {"db_id": "geo", "query": "SELECT SUM ( area ) FROM state;", "query_toks": ["SELECT", "SUM", "(", "area", ")", "FROM", "state", ";"], "query_toks_no_value": ["select", "sum", "(", "area", ")", "from", "state"], "question": "what is the combined area of all 50 states", "question_toks": ["what", "is", "combined", "area", "of", "all", "50", "state"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[4, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "combined", "area", "of", "all", "50", "states"], "question_arg": [["what"], ["is"], ["combined"], ["area"], ["of"], ["all"], ["50"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["value"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["combined", "JJ"], ["area", "NN"], ["of", "IN"], ["all", "DT"], ["50", "CD"], ["state", "NN"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(4) C(3) T(0)"}, {"db_id": "flight_1", "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value"], "question": "What is the average distance and price for all flights from LA?", "question_toks": ["what", "is", "average", "distance", "and", "price", "for", "all", "flight", "from", "la", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]], [5, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "average", "distance", "and", "price", "for", "all", "flights", "from", "LA", "?"], "question_arg": [["what"], ["is"], ["average"], ["distance"], ["and"], ["price"], ["for"], ["all"], ["flight"], ["from"], ["la"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["distance", "NN"], ["and", "CC"], ["price", "NN"], ["for", "IN"], ["all", "DT"], ["flight", "NN"], ["from", "IN"], ["la", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(5) C(4) T(0) A(5) C(7) T(0) Filter(2) A(0) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name WHERE t1.population  <=  150000;", "query_toks": ["SELECT", "t2.capital", "FROM", "state", "AS", "t2", "JOIN", "city", "AS", "t1", "ON", "t2.capital", "=", "t1.city_name", "WHERE", "t1.population", "<", "=", "150000", ";"], "query_toks_no_value": ["select", "t2", ".", "capital", "from", "state", "as", "t2", "join", "city", "as", "t1", "on", "t2", ".", "capital", "=", "t1", ".", "city_name", "where", "t1", ".", "population", "<", "=", "value"], "question": "which capitals are not major cities", "question_toks": ["which", "capital", "are", "not", "major", "city"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 6, [0, [0, 8, false], null], 150000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "capitals", "are", "not", "major", "cities"], "question_arg": [["which"], ["capital"], ["are"], ["not"], ["major"], ["city"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["which", "WDT"], ["capital", "NN"], ["are", "VBP"], ["not", "RB"], ["major", "JJ"], ["city", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(6) A(0) C(2) T(1)"}, {"db_id": "concert_singer", "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)", "query_toks": ["SELECT", "name", "FROM", "stadium", "WHERE", "stadium_id", "NOT", "IN", "(", "SELECT", "stadium_id", "FROM", "concert", ")"], "query_toks_no_value": ["select", "name", "from", "stadium", "where", "stadium_id", "not", "in", "(", "select", "stadium_id", "from", "concert", ")"], "question": "Show the stadium names without any concert.", "question_toks": ["show", "stadium", "name", "without", "any", "concert", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 18, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["Show", "the", "stadium", "names", "without", "any", "concert", "."], "question_arg": [["show"], ["stadium"], ["name"], ["without"], ["any"], ["concert"], ["."]], "question_arg_type": [["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["stadium", "NN"], ["name", "NN"], ["without", "IN"], ["any", "DT"], ["concert", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(3) T(0) Filter(19) A(0) C(1) T(0) Root(5) Sel(0) N(0) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";", "query_toks": ["SELECT", "COUNT", "(", "border", ")", "FROM", "border_info", "WHERE", "state_name", "=", "``", "kentucky", "''", ";"], "query_toks_no_value": ["select", "count", "(", "border", ")", "from", "border_info", "where", "state_name", "=", "value"], "question": "how many states border kentucky", "question_toks": ["how", "many", "state", "border", "kentucky"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"kentucky\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "border", "kentucky"], "question_arg": [["how"], ["many"], ["state"], ["border"], ["kentucky"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["border", "NN"], ["kentucky", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";", "query_toks": ["SELECT", "lowest_point", "FROM", "highlow", "WHERE", "state_name", "=", "``", "iowa", "''", ";"], "query_toks_no_value": ["select", "lowest_point", "from", "highlow", "where", "state_name", "=", "value"], "question": "what is the lowest point of iowa", "question_toks": ["what", "is", "lowest", "point", "of", "iowa"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"iowa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "lowest", "point", "of", "iowa"], "question_arg": [["what"], ["is"], ["lowest", "point"], ["of"], ["iowa"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["lowest", "JJS"], ["point", "NN"], ["of", "IN"], ["iowa", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "geo", "query": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"idaho\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"idaho\" );", "query_toks": ["SELECT", "state_name", "FROM", "highlow", "WHERE", "lowest_elevation", "=", "(", "SELECT", "MIN", "(", "lowest_elevation", ")", "FROM", "highlow", "WHERE", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "idaho", "''", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "idaho", "''", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "highlow", "where", "lowest_elevation", "=", "(", "select", "min", "(", "lowest_elevation", ")", "from", "highlow", "where", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")", ")", "and", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")"], "question": "which state has the lowest point that borders idaho", "question_toks": ["which", "state", "ha", "lowest", "point", "that", "border", "idaho"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [[false, 8, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"idaho\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"idaho\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "lowest", "point", "that", "borders", "idaho"], "question_arg": [["which"], ["state"], ["ha"], ["lowest", "point"], ["that"], ["border"], ["idaho"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["lowest", "JJS"], ["point", "NN"], ["that", "WDT"], ["border", "VBZ"], ["idaho", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(0) Filter(11) A(0) C(12) T(3) Root(3) Sel(0) N(0) A(2) C(12) T(3) Filter(18) A(0) C(1) T(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2) Filter(18) A(0) C(1) T(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T1.Airline", "=", "T2.uid", "WHERE", "T2.Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1", ".", "airline", "=", "t2", ".", "uid", "where", "t2", ".", "airline", "=", "value"], "question": "Give the number of Jetblue Airways flights.", "question_toks": ["give", "number", "of", "jetblue", "airway", "flight", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Give", "the", "number", "of", "Jetblue", "Airways", "flights", "."], "question_arg": [["give"], ["flight", "number"], ["of"], ["jetblue"], ["airway"], ["flight"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["give", "JJ"], ["number", "NN"], ["of", "IN"], ["jetblue", "JJ"], ["airway", "NN"], ["flight", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(2) A(0) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT capital FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) );", "query_toks": ["SELECT", "capital", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "texas", "''", ")", ")", ";"], "query_toks_no_value": ["select", "capital", "from", "state", "where", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")", ")"], "question": "what is the capital of the state that borders the state that borders texas", "question_toks": ["what", "is", "capital", "of", "state", "that", "border", "state", "that", "border", "texas"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "capital", "of", "the", "state", "that", "borders", "the", "state", "that", "borders", "texas"], "question_arg": [["what"], ["is"], ["capital"], ["of"], ["state"], ["that"], ["border"], ["state"], ["that"], ["border"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["capital", "NN"], ["of", "IN"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(18) A(0) C(1) T(2) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "theme_gallery", "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "artist", "WHERE", "age", ">", "46", "AND", "year_join", ">", "1990"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "artist", "where", "age", ">", "value", "and", "year_join", ">", "value"], "question": "How many artists are above age 46 and joined after 1990?", "question_toks": ["how", "many", "artist", "are", "above", "age", "46", "and", "joined", "after", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 46.0, null], "and", [false, 3, [0, [0, 4, false], null], 1990.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["How", "many", "artists", "are", "above", "age", "46", "and", "joined", "after", "1990", "?"], "question_arg": [["how"], ["many"], ["artist"], ["are"], ["above"], ["age"], ["46"], ["and"], ["joined"], ["after"], ["year"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["value"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["artist", "NN"], ["are", "VBP"], ["above", "JJ"], ["age", "NN"], ["46", "CD"], ["and", "CC"], ["joined", "VBD"], ["after", "IN"], ["1990", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(0) Filter(5) A(0) C(5) T(0) Filter(5) A(0) C(4) T(0)"}, {"db_id": "storm_record", "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'", "query_toks": ["SELECT", "T3.name", "FROM", "affected_region", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "JOIN", "storm", "AS", "T3", "ON", "T1.storm_id", "=", "T3.storm_id", "WHERE", "T2.region_name", "=", "'Denmark", "'"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "affected_region", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "join", "storm", "as", "t3", "on", "t1", ".", "storm_id", "=", "t3", ".", "storm_id", "where", "t2", ".", "region_name", "=", "value"], "question": "What are the names of the storms that affected Denmark?", "question_toks": ["what", "are", "name", "of", "storm", "that", "affected", "denmark", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Denmark\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "storms", "that", "affected", "Denmark", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["storm"], ["that"], ["affected"], ["denmark"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["storm", "NN"], ["that", "WDT"], ["affected", "VBD"], ["denmark", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(9) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "=", "``", "illinois", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "=", "value"], "question": "which rivers flow through illinois", "question_toks": ["which", "river", "flow", "through", "illinois"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"illinois\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "rivers", "flow", "through", "illinois"], "question_arg": [["which"], ["river"], ["flow"], ["through"], ["illinois"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["river", "NN"], ["flow", "NN"], ["through", "IN"], ["illinois", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "flight_4", "query": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "WHERE", "T1.name", "=", "'American", "Airlines", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "where", "t1", ".", "name", "=", "value"], "question": "Find the number of routes operated by American Airlines.", "question_toks": ["find", "number", "of", "route", "operated", "by", "american", "airline", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"American Airlines\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "number", "of", "routes", "operated", "by", "American", "Airlines", "."], "question_arg": [["find"], ["number"], ["of"], ["route"], ["operated"], ["by"], ["american"], ["airline"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["number", "NN"], ["of", "IN"], ["route", "NN"], ["operated", "VBN"], ["by", "IN"], ["american", "JJ"], ["airline", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(2) A(0) C(10) T(2)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "Give me the best french restaurant in san francisco ?", "question_toks": ["give", "me", "best", "french", "restaurant", "in", "san", "francisco", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["Give", "me", "the", "best", "french", "restaurant", "in", "san", "francisco", "?"], "question_arg": [["give"], ["me"], ["best"], ["french"], ["restaurant"], ["in"], ["san"], ["francisco"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["best", "JJS"], ["french", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(1) C(7) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "icfp_1", "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.name", "FROM", "inst", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.instid", "=", "t2.instid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "GROUP", "BY", "t1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "inst", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "instid", "=", "t2", ".", "instid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which institution has the most papers? Find the name of the institution.", "question_toks": ["which", "institution", "ha", "most", "paper", "?", "find", "name", "of", "institution", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Which", "institution", "has", "the", "most", "papers", "?", "Find", "the", "name", "of", "the", "institution", "."], "question_arg": [["which"], ["institution"], ["ha"], ["most"], ["paper"], ["?"], ["find"], ["name"], ["of"], ["institution"], ["."]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["institution", "NN"], ["ha", "VBZ"], ["most", "JJS"], ["paper", "NN"], ["?", "."], ["find", "VB"], ["name", "NN"], ["of", "IN"], ["institution", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(2) T(0) Sup(0) A(3) C(0) T(0)"}, {"db_id": "soccer_2", "query": "SELECT count(*) FROM tryout WHERE decision  =  'yes'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "tryout", "WHERE", "decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "tryout", "where", "decision", "=", "value"], "question": "How many students received a yes from tryouts?", "question_toks": ["how", "many", "student", "received", "a", "yes", "from", "tryout", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["How", "many", "students", "received", "a", "yes", "from", "tryouts", "?"], "question_arg": [["how"], ["many"], ["student"], ["received"], ["a"], ["yes", "card"], ["from"], ["tryout"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["student", "NN"], ["received", "VBD"], ["a", "DT"], ["yes", "NN"], ["from", "IN"], ["tryout", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(2) A(0) C(9) T(2)"}, {"db_id": "icfp_1", "query": "SELECT count(*) FROM inst", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "inst"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "inst"], "question": "Count the number of institutions.", "question_toks": ["count", "number", "of", "institution", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Count", "the", "number", "of", "institutions", "."], "question_arg": [["author", "count"], ["number"], ["of"], ["institution"], ["."]], "question_arg_type": [["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["count", "NN"], ["number", "NN"], ["of", "IN"], ["institution", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );", "query_toks": ["SELECT", "state_name", "FROM", "highlow", "WHERE", "highest_elevation", "=", "(", "SELECT", "MAX", "(", "highest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "highlow", "where", "highest_elevation", "=", "(", "select", "max", "(", "highest_elevation", ")", "from", "highlow", ")"], "question": "what state has the highest elevation", "question_toks": ["what", "state", "ha", "highest", "elevation"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "has", "the", "highest", "elevation"], "question_arg": [["what"], ["state"], ["ha"], ["highest", "elevation"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["col"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["ha", "NN"], ["highest", "JJS"], ["elevation", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(11) A(0) C(9) T(3) Root(5) Sel(0) N(0) A(1) C(9) T(3)"}, {"db_id": "soccer_2", "query": "SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'", "query_toks": ["SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "'goalie", "'", "INTERSECT", "SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "'mid", "'"], "query_toks_no_value": ["select", "cname", "from", "tryout", "where", "ppos", "=", "value", "intersect", "select", "cname", "from", "tryout", "where", "ppos", "=", "value"], "question": "Find the names of schools that have some students playing in goalie and mid positions.", "question_toks": ["find", "name", "of", "school", "that", "have", "some", "student", "playing", "in", "goalie", "and", "mid", "position", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "names", "of", "schools", "that", "have", "some", "students", "playing", "in", "goalie", "and", "mid", "positions", "."], "question_arg": [["find"], ["name"], ["of"], ["school"], ["that"], ["have"], ["some"], ["student"], ["playing"], ["in"], ["goalie"], ["and"], ["mid"], ["player", "position"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["school", "NN"], ["that", "WDT"], ["have", "VBP"], ["some", "DT"], ["student", "NN"], ["playing", "VBG"], ["in", "IN"], ["goalie", "NN"], ["and", "CC"], ["mid", "JJ"], ["position", "NN"], [".", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(1) T(2) Filter(2) A(0) C(8) T(2) Root(3) Sel(0) N(0) A(0) C(1) T(2) Filter(2) A(0) C(8) T(2)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", "WHERE", "state_name", "=", "``", "wyoming", "''", ")", "AND", "state_name", "=", "``", "wyoming", "''", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", "where", "state_name", "=", "value", ")", "and", "state_name", "=", "value"], "question": "what is the biggest city in wyoming", "question_toks": ["what", "is", "biggest", "city", "in", "wyoming"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"wyoming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 10, false], null], "\"wyoming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "biggest", "city", "in", "wyoming"], "question_arg": [["what"], ["is"], ["biggest"], ["city"], ["in"], ["wyoming"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["biggest", "JJS"], ["city", "NN"], ["in", "IN"], ["wyoming", "VBG"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(0) Filter(11) A(0) C(2) T(1) Root(3) Sel(0) N(0) A(1) C(2) T(1) Filter(2) A(0) C(1) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" );", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "colorado", "''", ")", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")"], "question": "what states border states that border colorado", "question_toks": ["what", "state", "border", "state", "that", "border", "colorado"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"colorado\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "border", "states", "that", "border", "colorado"], "question_arg": [["what"], ["state"], ["border"], ["state"], ["that"], ["border"], ["colorado"]], "question_arg_type": [["NONE"], ["table"], ["col"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["border", "NN"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["colorado", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(18) A(0) C(1) T(2) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")"], "question": "what is the state with the smallest area", "question_toks": ["what", "is", "state", "with", "smallest", "area"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "state", "with", "the", "smallest", "area"], "question_arg": [["what"], ["is"], ["state"], ["with"], ["smallest"], ["area"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["state", "NN"], ["with", "IN"], ["smallest", "JJ"], ["area", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "soccer_2", "query": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\"", "query_toks": ["SELECT", "cName", "FROM", "College", "WHERE", "enr", "<", "13000", "AND", "state", "=", "``", "AZ", "''", "UNION", "SELECT", "cName", "FROM", "College", "WHERE", "enr", ">", "15000", "AND", "state", "=", "``", "LA", "''"], "query_toks_no_value": ["select", "cname", "from", "college", "where", "enr", "<", "value", "and", "state", "=", "value", "union", "select", "cname", "from", "college", "where", "enr", ">", "value", "and", "state", "=", "value"], "question": "Find the names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment.", "question_toks": ["find", "name", "of", "either", "college", "in", "la", "with", "greater", "than", "15000", "size", "or", "in", "state", "az", "with", "le", "than", "13000", "enrollment", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 13000.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"AZ\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 15000.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"LA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "names", "of", "either", "colleges", "in", "LA", "with", "greater", "than", "15000", "size", "or", "in", "state", "AZ", "with", "less", "than", "13000", "enrollment", "."], "question_arg": [["find"], ["name"], ["of"], ["either"], ["college"], ["in"], ["la"], ["with"], ["greater"], ["than"], ["15000"], ["size"], ["or"], ["in"], ["state"], ["az"], ["with"], ["le"], ["than"], ["13000"], ["enrollment"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["either", "DT"], ["college", "NN"], ["in", "IN"], ["la", "NN"], ["with", "IN"], ["greater", "JJR"], ["than", "IN"], ["15000", "CD"], ["size", "NN"], ["or", "CC"], ["in", "IN"], ["state", "NN"], ["az", "NN"], ["with", "IN"], ["le", "JJR"], ["than", "IN"], ["13000", "CD"], ["enrollment", "NN"], [".", "."]], "rule_label": "Root1(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(4) A(0) C(3) T(0) Filter(2) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(5) A(0) C(3) T(0) Filter(2) A(0) C(2) T(0)"}, {"db_id": "singer", "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1", "query_toks": ["SELECT", "Citizenship", "FROM", "singer", "GROUP", "BY", "Citizenship", "ORDER", "BY", "COUNT", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "citizenship", "from", "singer", "group", "by", "citizenship", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Please show the most common citizenship of singers.", "question_toks": ["please", "show", "most", "common", "citizenship", "of", "singer", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["Please", "show", "the", "most", "common", "citizenship", "of", "singers", "."], "question_arg": [["please"], ["show"], ["most"], ["common"], ["citizenship"], ["of"], ["singer"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["please", "VB"], ["show", "NN"], ["most", "RBS"], ["common", "JJ"], ["citizenship", "NN"], ["of", "IN"], ["singer", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(5) T(0) Sup(0) A(3) C(0) T(0)"}, {"db_id": "geo", "query": "SELECT COUNT ( DISTINCT state_name ) FROM border_info;", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "state_name", ")", "FROM", "border_info", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "state_name", ")", "from", "border_info"], "question": "how many states border at least one other state", "question_toks": ["how", "many", "state", "border", "at", "least", "one", "other", "state"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 11, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "border", "at", "least", "one", "other", "state"], "question_arg": [["how"], ["many"], ["state"], ["border"], ["at"], ["least"], ["one"], ["other"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["border", "NN"], ["at", "IN"], ["least", "JJS"], ["one", "CD"], ["other", "JJ"], ["state", "NN"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(1) T(2)"}, {"db_id": "concert_singer", "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC", "query_toks": ["SELECT", "name", ",", "country", ",", "age", "FROM", "singer", "ORDER", "BY", "age", "DESC"], "query_toks_no_value": ["select", "name", ",", "country", ",", "age", "from", "singer", "order", "by", "age", "desc"], "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "question_toks": ["show", "name", ",", "country", ",", "age", "for", "all", "singer", "ordered", "by", "age", "from", "oldest", "to", "youngest", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 13, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["Show", "name", ",", "country", ",", "age", "for", "all", "singers", "ordered", "by", "age", "from", "the", "oldest", "to", "the", "youngest", "."], "question_arg": [["show"], ["name"], [","], ["country"], [","], ["age"], ["for"], ["all"], ["singer"], ["ordered"], ["by"], ["age"], ["from"], ["oldest"], ["to"], ["youngest"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], [",", ","], ["country", "NN"], [",", ","], ["age", "NN"], ["for", "IN"], ["all", "DT"], ["singer", "NN"], ["ordered", "VBN"], ["by", "IN"], ["age", "NN"], ["from", "IN"], ["oldest", "JJS"], ["to", "TO"], ["youngest", "VB"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(2) A(0) C(3) T(1) A(0) C(9) T(1) A(0) C(12) T(1) Order(0) A(0) C(12) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"atlanta\" ) );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "capital", "=", "``", "atlanta", "''", ")", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "capital", "=", "value", ")", ")"], "question": "what rivers run through the states that border the state with the capital atlanta", "question_toks": ["what", "river", "run", "through", "state", "that", "border", "state", "with", "capital", "atlanta"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"atlanta\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "rivers", "run", "through", "the", "states", "that", "border", "the", "state", "with", "the", "capital", "atlanta"], "question_arg": [["what"], ["river"], ["run"], ["through"], ["state"], ["that"], ["border"], ["state"], ["with"], ["capital"], ["atlanta"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["river", "NN"], ["run", "VBP"], ["through", "IN"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["state", "NN"], ["with", "IN"], ["capital", "NN"], ["atlanta", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(18) A(0) C(18) T(6) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(18) A(0) C(1) T(2) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(5) T(0)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE state_name  =  \"california\";", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "state_name", "=", "``", "california", "''", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "state_name", "=", "value"], "question": "how many people are in the state of california", "question_toks": ["how", "many", "people", "are", "in", "state", "of", "california"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"california\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "people", "are", "in", "the", "state", "of", "california"], "question_arg": [["how"], ["many"], ["people"], ["are"], ["in"], ["state"], ["of"], ["california"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["people", "NNS"], ["are", "VBP"], ["in", "IN"], ["state", "NN"], ["of", "IN"], ["california", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "flight_1", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\"", "query_toks": ["SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Boeing", "737-800", "''", "INTERSECT", "SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Airbus", "A340-300", "''"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value", "intersect", "select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value"], "question": "Show names for all employees who have certificates on both Boeing 737-800 and Airbus A340-300.", "question_toks": ["show", "name", "for", "all", "employee", "who", "have", "certificate", "on", "both", "boeing", "737-800", "and", "airbus", "a340-300", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Boeing 737-800\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Airbus A340-300\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "names", "for", "all", "employees", "who", "have", "certificates", "on", "both", "Boeing", "737-800", "and", "Airbus", "A340-300", "."], "question_arg": [["show"], ["name"], ["for"], ["all"], ["employee"], ["who"], ["have"], ["certificate"], ["on"], ["both"], ["boeing"], ["737-800"], ["and"], ["airbus"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["for", "IN"], ["all", "DT"], ["employee", "NN"], ["who", "WP"], ["have", "VBP"], ["certificate", "VBN"], ["on", "IN"], ["both", "DT"], ["boeing", "VBG"], ["737-800", "CD"], ["and", "CC"], ["airbus", "JJ"], ["a340-300", "NN"], [".", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(9) T(2) Filter(2) A(0) C(9) T(1) Root(3) Sel(0) N(0) A(0) C(9) T(2) Filter(2) A(0) C(9) T(1)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value"], "question": "where is a restaurant in alameda ?", "question_toks": ["where", "is", "a", "restaurant", "in", "alameda", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"alameda\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "is", "a", "restaurant", "in", "alameda", "?"], "question_arg": [["where"], ["is"], ["a"], ["restaurant"], ["in"], ["alameda"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["a", "DT"], ["restaurant", "NN"], ["in", "IN"], ["alameda", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE state_name  =  \"california\";", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "state_name", "=", "``", "california", "''", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "state_name", "=", "value"], "question": "how many citizens in california", "question_toks": ["how", "many", "citizen", "in", "california"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"california\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "citizens", "in", "california"], "question_arg": [["how"], ["many"], ["citizen"], ["in"], ["california"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["citizen", "NN"], ["in", "IN"], ["california", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")"], "question": "state the state with the largest area", "question_toks": ["state", "state", "with", "largest", "area"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["state", "the", "state", "with", "the", "largest", "area"], "question_arg": [["state"], ["state"], ["with"], ["largest"], ["area"]], "question_arg_type": [["table"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["state", "NN"], ["state", "NN"], ["with", "IN"], ["largest", "JJS"], ["area", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}, {"db_id": "soccer_2", "query": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)", "query_toks": ["SELECT", "DISTINCT", "state", "FROM", "college", "WHERE", "enr", "<", "(", "SELECT", "max", "(", "enr", ")", "FROM", "college", ")"], "query_toks_no_value": ["select", "distinct", "state", "from", "college", "where", "enr", "<", "(", "select", "max", "(", "enr", ")", "from", "college", ")"], "question": "Find the states where have the colleges whose enrollments are less than the largest size.", "question_toks": ["find", "state", "where", "have", "college", "whose", "enrollment", "are", "le", "than", "largest", "size", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "states", "where", "have", "the", "colleges", "whose", "enrollments", "are", "less", "than", "the", "largest", "size", "."], "question_arg": [["find"], ["state"], ["where"], ["have"], ["college"], ["whose"], ["enrollment"], ["are"], ["le"], ["than"], ["largest"], ["size"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["state", "NN"], ["where", "WRB"], ["have", "VBP"], ["college", "NN"], ["whose", "WP$"], ["enrollment", "NN"], ["are", "VBP"], ["le", "VBN"], ["than", "IN"], ["largest", "JJS"], ["size", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(12) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}, {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good restaurant in the yosemite and mono lake area for french food ?", "question_toks": ["give", "me", "a", "good", "restaurant", "in", "yosemite", "and", "mono", "lake", "area", "for", "french", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"yosemite and mono lake area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "a", "good", "restaurant", "in", "the", "yosemite", "and", "mono", "lake", "area", "for", "french", "food", "?"], "question_arg": [["give"], ["me"], ["a"], ["good"], ["restaurant"], ["in"], ["yosemite"], ["and"], ["mono"], ["lake"], ["area"], ["for"], ["french"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["a", "DT"], ["good", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["yosemite", "NN"], ["and", "CC"], ["mono", "JJ"], ["lake", "NN"], ["area", "NN"], ["for", "IN"], ["french", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "palo", "alto", "''", "AND", "t1.food_type", "=", "``", "french", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "how many french restaurants are there in palo alto ?", "question_toks": ["how", "many", "french", "restaurant", "are", "there", "in", "palo", "alto", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"palo alto\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["how", "many", "french", "restaurants", "are", "there", "in", "palo", "alto", "?"], "question_arg": [["how"], ["many"], ["french"], ["restaurant"], ["are"], ["there"], ["in"], ["palo"], ["alto"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["french", "JJ"], ["restaurant", "NN"], ["are", "VBP"], ["there", "RB"], ["in", "IN"], ["palo", "NN"], ["alto", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "WHERE", "T2.DestAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "where", "t2", ".", "destairport", "=", "value"], "question": "What are airlines that have flights arriving at airport 'AHD'?", "question_toks": ["what", "are", "airline", "that", "have", "flight", "arriving", "at", "airport", "'", "ahd", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["What", "are", "airlines", "that", "have", "flights", "arriving", "at", "airport", "'AHD", "'", "?"], "question_arg": [["what"], ["are"], ["airline"], ["that"], ["have"], ["flight"], ["arriving"], ["at"], ["airport"], ["'"], ["ahd"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["airline", "NN"], ["that", "WDT"], ["have", "VBP"], ["flight", "NN"], ["arriving", "NN"], ["at", "IN"], ["airport", "NN"], ["'", "''"], ["ahd", "NN"], ["'", "POS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(12) T(2)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", ")"], "question": "name the longest river in us", "question_toks": ["name", "longest", "river", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["name", "the", "longest", "river", "in", "us"], "question_arg": [["name"], ["longest"], ["river"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["name", "NN"], ["longest", "JJS"], ["river", "NN"], ["in", "IN"], ["u", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(1) C(17) T(6)"}, {"db_id": "flight_4", "query": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name", "query_toks": ["SELECT", "T1.country", ",", "T1.name", ",", "count", "(", "*", ")", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T1.country", ",", "T1.name"], "query_toks_no_value": ["select", "t1", ".", "country", ",", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t1", ".", "country", ",", "t1", ".", "name"], "question": "What is the total number of routes for each country and airline in that country?", "question_toks": ["what", "is", "total", "number", "of", "route", "for", "each", "country", "and", "airline", "in", "that", "country", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 23, false], null]], [0, [0, [0, 19, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 23, false], [0, 19, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "total", "number", "of", "routes", "for", "each", "country", "and", "airline", "in", "that", "country", "?"], "question_arg": [["what"], ["is"], ["total"], ["number"], ["of"], ["route"], ["for"], ["each"], ["country"], ["and"], ["airline"], ["in"], ["that"], ["country"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["total", "JJ"], ["number", "NN"], ["of", "IN"], ["route", "NN"], ["for", "IN"], ["each", "DT"], ["country", "NN"], ["and", "CC"], ["airline", "NN"], ["in", "IN"], ["that", "DT"], ["country", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(2) A(0) C(12) T(2) A(0) C(10) T(2) A(3) C(0) T(0)"}, {"db_id": "flight_1", "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3", "query_toks": ["SELECT", "name", "FROM", "Employee", "ORDER", "BY", "salary", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "employee", "order", "by", "salary", "asc", "limit", "value"], "question": "What is the name of the 3 employees who get paid the least?", "question_toks": ["what", "is", "name", "of", "3", "employee", "who", "get", "paid", "least", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "3", "employees", "who", "get", "paid", "the", "least", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["3"], ["employee"], ["who"], ["get"], ["paid"], ["least"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["value"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["3", "CD"], ["employee", "NN"], ["who", "WP"], ["get", "VBP"], ["paid", "VBN"], ["least", "JJS"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(9) T(2) Sup(1) A(0) C(11) T(2)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "texas", "''", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "texas", "''", ")", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", "where", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")", ")", "and", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")"], "question": "what is the population of the largest state that borders texas", "question_toks": ["what", "is", "population", "of", "largest", "state", "that", "border", "texas"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "population", "of", "the", "largest", "state", "that", "borders", "texas"], "question_arg": [["what"], ["is"], ["population"], ["of"], ["largest"], ["state"], ["that"], ["border"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["population", "NN"], ["of", "IN"], ["largest", "JJS"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(0) Filter(11) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(1) C(3) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "concert_singer", "query": "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1", "query_toks": ["select", "t2.name", ",", "t2.capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1.stadium_id", "=", "t2.stadium_id", "where", "t1.year", ">", "2013", "group", "by", "t2.stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", ">", "value", "group", "by", "t2", ".", "stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?", "question_toks": ["what", "is", "name", "and", "capacity", "of", "stadium", "with", "most", "concert", "after", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 3, [0, [0, 19, false], null], 2013.0, null]], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["What", "is", "the", "name", "and", "capacity", "of", "the", "stadium", "with", "the", "most", "concerts", "after", "2013", "?"], "question_arg": [["what"], ["is", "male"], ["name"], ["and"], ["capacity"], ["of"], ["stadium"], ["with"], ["most"], ["concert"], ["after"], ["year"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["and", "CC"], ["capacity", "NN"], ["of", "IN"], ["stadium", "NN"], ["with", "IN"], ["most", "JJS"], ["concert", "NN"], ["after", "IN"], ["2013", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(0) Sel(0) N(1) A(0) C(3) T(0) A(0) C(4) T(0) Sup(0) A(3) C(0) T(0) Filter(5) A(0) C(17) T(2)"}, {"db_id": "network_2", "query": "SELECT count(DISTINCT job) FROM Person", "query_toks": ["SELECT", "count", "(", "DISTINCT", "job", ")", "FROM", "Person"], "query_toks_no_value": ["select", "count", "(", "distinct", "job", ")", "from", "person"], "question": "How many type of jobs do they have?", "question_toks": ["how", "many", "type", "of", "job", "do", "they", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 5, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["How", "many", "type", "of", "jobs", "do", "they", "have", "?"], "question_arg": [["how"], ["many"], ["type"], ["of"], ["job"], ["do"], ["they"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["type", "NN"], ["of", "IN"], ["job", "NN"], ["do", "VBP"], ["they", "PRP"], ["have", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(5) T(0)"}, {"db_id": "flight_2", "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"", "query_toks": ["SELECT", "City", ",", "Country", "FROM", "AIRPORTS", "WHERE", "AirportName", "=", "``", "Alton", "''"], "query_toks_no_value": ["select", "city", ",", "country", "from", "airports", "where", "airportname", "=", "value"], "question": "Which city and country is the Alton airport at?", "question_toks": ["which", "city", "and", "country", "is", "alton", "airport", "at", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alton\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Which", "city", "and", "country", "is", "the", "Alton", "airport", "at", "?"], "question_arg": [["which"], ["city"], ["and"], ["country"], ["is"], ["alton"], ["airport"], ["at"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["city", "NN"], ["and", "CC"], ["country", "NN"], ["is", "VBZ"], ["alton", "JJ"], ["airport", "NN"], ["at", "IN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(5) T(1) A(0) C(4) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "flight_1", "query": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1", "query_toks": ["SELECT", "aid", ",", "name", "FROM", "Aircraft", "ORDER", "BY", "distance", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "aid", ",", "name", "from", "aircraft", "order", "by", "distance", "desc", "limit", "value"], "question": "What is the id and name of the aircraft that can cover the maximum distance?", "question_toks": ["what", "is", "id", "and", "name", "of", "aircraft", "that", "can", "cover", "maximum", "distance", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 11, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "id", "and", "name", "of", "the", "aircraft", "that", "can", "cover", "the", "maximum", "distance", "?"], "question_arg": [["what"], ["is"], ["id"], ["and"], ["name"], ["of"], ["aircraft"], ["that"], ["can"], ["cover"], ["maximum"], ["distance"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["id", "JJ"], ["and", "CC"], ["name", "NN"], ["of", "IN"], ["aircraft", "NN"], ["that", "WDT"], ["can", "MD"], ["cover", "VB"], ["maximum", "JJ"], ["distance", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(8) T(1) A(0) C(9) T(1) Sup(0) A(0) C(4) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "t1.population", ")", "FROM", "state", "AS", "t2", "JOIN", "city", "AS", "t1", "ON", "t2.capital", "=", "t1.city_name", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "t1", ".", "population", ")", "from", "state", "as", "t2", "join", "city", "as", "t1", "on", "t2", ".", "capital", "=", "t1", ".", "city_name", ")"], "question": "what is the biggest capital city in the us", "question_toks": ["what", "is", "biggest", "capital", "city", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 7, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "biggest", "capital", "city", "in", "the", "us"], "question_arg": [["what"], ["is"], ["biggest"], ["capital"], ["city"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["col"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["biggest", "JJS"], ["capital", "NN"], ["city", "NN"], ["in", "IN"], ["u", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "network_2", "query": "SELECT name ,  job FROM Person ORDER BY name", "query_toks": ["SELECT", "name", ",", "job", "FROM", "Person", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "name", ",", "job", "from", "person", "order", "by", "name"], "question": "What are the names and job titles of every person ordered alphabetically by name?", "question_toks": ["what", "are", "name", "and", "job", "title", "of", "every", "person", "ordered", "alphabetically", "by", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 1, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["What", "are", "the", "names", "and", "job", "titles", "of", "every", "person", "ordered", "alphabetically", "by", "name", "?"], "question_arg": [["what"], ["are"], ["name"], ["and"], ["job"], ["title"], ["of"], ["every"], ["person"], ["ordered"], ["alphabetically"], ["by"], ["name"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "JJ"], ["and", "CC"], ["job", "NN"], ["title", "NN"], ["of", "IN"], ["every", "DT"], ["person", "NN"], ["ordered", "VBN"], ["alphabetically", "RB"], ["by", "IN"], ["name", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(1) A(0) C(1) T(0) A(0) C(5) T(0) Order(1) A(0) C(1) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "texas", "''", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "texas", "''", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", "where", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")", ")", "and", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")"], "question": "what is the smallest state that borders texas", "question_toks": ["what", "is", "smallest", "state", "that", "border", "texas"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "smallest", "state", "that", "borders", "texas"], "question_arg": [["what"], ["is"], ["smallest"], ["state"], ["that"], ["border"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["smallest", "JJ"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(11) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(2) C(3) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;", "query_toks": ["SELECT", "river_name", "FROM", "river", "GROUP", "BY", "(", "river_name", ")", "ORDER", "BY", "COUNT", "(", "DISTINCT", "traverse", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "group", "by", "(", "river_name", ")", "order", "by", "count", "(", "distinct", "traverse", ")", "desc", "limit", "value"], "question": "which river runs through the most states", "question_toks": ["which", "river", "run", "through", "most", "state"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": ["desc", [[0, [3, 29, true], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "river", "runs", "through", "the", "most", "states"], "question_arg": [["which"], ["river"], ["run"], ["through"], ["most"], ["state"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["which", "WDT"], ["river", "NN"], ["run", "VBP"], ["through", "IN"], ["most", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(16) T(6) Sup(0) A(3) C(18) T(6)"}, {"db_id": "soccer_2", "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "T1.pName", ",", "T2.cName", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "t1", ".", "pname", ",", "t2", ".", "cname", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "Find the name and college of students whose decisions are yes in the tryout.", "question_toks": ["find", "name", "and", "college", "of", "student", "whose", "decision", "are", "yes", "in", "tryout", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "name", "and", "college", "of", "students", "whose", "decisions", "are", "yes", "in", "the", "tryout", "."], "question_arg": [["find"], ["name"], ["and"], ["college"], ["of"], ["student"], ["whose"], ["decision"], ["are"], ["yes", "card"], ["in"], ["tryout"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["and", "CC"], ["college", "NN"], ["of", "IN"], ["student", "NN"], ["whose", "WP$"], ["decision", "NN"], ["are", "VBP"], ["yes", "VBN"], ["in", "IN"], ["tryout", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(5) T(1) A(0) C(1) T(2) Filter(2) A(0) C(9) T(2)"}, {"db_id": "geo", "query": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );", "query_toks": ["SELECT", "highest_point", "FROM", "highlow", "WHERE", "highest_elevation", "=", "(", "SELECT", "MAX", "(", "highest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "highest_point", "from", "highlow", "where", "highest_elevation", "=", "(", "select", "max", "(", "highest_elevation", ")", "from", "highlow", ")"], "question": "what is the highest point of the usa", "question_toks": ["what", "is", "highest", "point", "of", "usa"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "highest", "point", "of", "the", "usa"], "question_arg": [["what"], ["is"], ["highest", "point"], ["of"], ["usa"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["of", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(3) Filter(11) A(0) C(9) T(3) Root(5) Sel(0) N(0) A(1) C(9) T(3)"}, {"db_id": "icfp_1", "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\"", "query_toks": ["SELECT", "title", "FROM", "papers", "WHERE", "title", "LIKE", "``", "%", "Database", "%", "''"], "query_toks_no_value": ["select", "title", "from", "papers", "where", "title", "like", "value"], "question": "Which paper's title contains the word \"Database\"?", "question_toks": ["which", "paper", "'s", "title", "contains", "word", "'", "database", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%Database%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Which", "paper", "'s", "title", "contains", "the", "word", "``", "Database", "''", "?"], "question_arg": [["which"], ["paper"], ["'s"], ["title"], ["contains"], ["word"], ["'"], ["database"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["paper", "NN"], ["'s", "POS"], ["title", "NN"], ["contains", "VBZ"], ["word", "NN"], ["'", "''"], ["database", "NN"], ["'", "POS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(9) A(0) C(8) T(2)"}, {"db_id": "geo", "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";", "query_toks": ["SELECT", "lowest_point", "FROM", "highlow", "WHERE", "state_name", "=", "``", "iowa", "''", ";"], "query_toks_no_value": ["select", "lowest_point", "from", "highlow", "where", "state_name", "=", "value"], "question": "what is the lowest point in iowa in meters", "question_toks": ["what", "is", "lowest", "point", "in", "iowa", "in", "meter"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"iowa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "lowest", "point", "in", "iowa", "in", "meters"], "question_arg": [["what"], ["is"], ["lowest", "point"], ["in"], ["iowa"], ["in"], ["meter"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["lowest", "JJS"], ["point", "NN"], ["in", "IN"], ["iowa", "NN"], ["in", "IN"], ["meter", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "network_2", "query": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'", "query_toks": ["SELECT", "name", "FROM", "person", "EXCEPT", "SELECT", "T2.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.job", "=", "'student", "'"], "query_toks_no_value": ["select", "name", "from", "person", "except", "select", "t2", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "job", "=", "value"], "question": "What are the names of the people who have no friends who are students?", "question_toks": ["what", "are", "name", "of", "people", "who", "have", "no", "friend", "who", "are", "student", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"student\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "people", "who", "have", "no", "friends", "who", "are", "students", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["people"], ["who"], ["have"], ["no"], ["friend"], ["who"], ["are"], ["student"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["people", "NNS"], ["who", "WP"], ["have", "VBP"], ["no", "DT"], ["friend", "NN"], ["who", "WP"], ["are", "VBP"], ["student", "NN"], ["?", "."]], "rule_label": "Root1(2) Root(5) Sel(0) N(0) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(1) T(1) Filter(2) A(0) C(5) T(0)"}, {"db_id": "flight_1", "query": "SELECT avg(salary) ,  max(salary) FROM Employee", "query_toks": ["SELECT", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "FROM", "Employee"], "query_toks_no_value": ["select", "avg", "(", "salary", ")", ",", "max", "(", "salary", ")", "from", "employee"], "question": "What is average and maximum salary of all employees.", "question_toks": ["what", "is", "average", "and", "maximum", "salary", "of", "all", "employee", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]], [1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "average", "and", "maximum", "salary", "of", "all", "employees", "."], "question_arg": [["what"], ["is"], ["average"], ["and"], ["maximum"], ["salary"], ["of"], ["all"], ["employee"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["and", "CC"], ["maximum", "JJ"], ["salary", "NN"], ["of", "IN"], ["all", "DT"], ["employee", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(5) C(11) T(2) A(1) C(11) T(2)"}, {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "chinese", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "how many chinese restaurants are there in the bay area ?", "question_toks": ["how", "many", "chinese", "restaurant", "are", "there", "in", "bay", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"chinese\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["how", "many", "chinese", "restaurants", "are", "there", "in", "the", "bay", "area", "?"], "question_arg": [["how"], ["many"], ["chinese"], ["restaurant"], ["are"], ["there"], ["in"], ["bay"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["chinese", "JJ"], ["restaurant", "NN"], ["are", "VBP"], ["there", "RB"], ["in", "IN"], ["bay", "NN"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(2) A(0) C(6) T(1)"}, {"db_id": "soccer_2", "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')", "query_toks": ["SELECT", "cName", "FROM", "college", "WHERE", "enr", ">", "(", "SELECT", "max", "(", "enr", ")", "FROM", "college", "WHERE", "state", "=", "'FL", "'", ")"], "query_toks_no_value": ["select", "cname", "from", "college", "where", "enr", ">", "(", "select", "max", "(", "enr", ")", "from", "college", "where", "state", "=", "value", ")"], "question": "Find names of all colleges whose enrollment is greater than that of all colleges in the FL state.", "question_toks": ["find", "name", "of", "all", "college", "whose", "enrollment", "is", "greater", "than", "that", "of", "all", "college", "in", "fl", "state", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"FL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "names", "of", "all", "colleges", "whose", "enrollment", "is", "greater", "than", "that", "of", "all", "colleges", "in", "the", "FL", "state", "."], "question_arg": [["find"], ["name"], ["of"], ["all"], ["college"], ["whose"], ["enrollment"], ["is"], ["greater"], ["than"], ["that"], ["of"], ["all"], ["college"], ["in"], ["fl"], ["state"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["MORE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["college", "NN"], ["whose", "WP$"], ["enrollment", "NN"], ["is", "VBZ"], ["greater", "JJR"], ["than", "IN"], ["that", "DT"], ["of", "IN"], ["all", "DT"], ["college", "NN"], ["in", "IN"], ["fl", "JJ"], ["state", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(13) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(1) C(3) T(0) Filter(2) A(0) C(2) T(0)"}, {"db_id": "soccer_2", "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player", "query_toks": ["SELECT", "avg", "(", "HS", ")", ",", "max", "(", "HS", ")", ",", "min", "(", "HS", ")", "FROM", "Player"], "query_toks_no_value": ["select", "avg", "(", "hs", ")", ",", "max", "(", "hs", ")", ",", "min", "(", "hs", ")", "from", "player"], "question": "Find the max, average and min training hours of all players.", "question_toks": ["find", "max", ",", "average", "and", "min", "training", "hour", "of", "all", "player", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 7, false], null]], [1, [0, [0, 7, false], null]], [2, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "max", ",", "average", "and", "min", "training", "hours", "of", "all", "players", "."], "question_arg": [["find"], ["max"], [","], ["average"], ["and"], ["min"], ["training", "hour"], ["of"], ["all"], ["player"], ["."]], "question_arg_type": [["NONE"], ["agg"], ["NONE"], ["agg"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["find", "VB"], ["max", "NN"], [",", ","], ["average", "JJ"], ["and", "CC"], ["min", "JJ"], ["training", "VBG"], ["hour", "NN"], ["of", "IN"], ["all", "DT"], ["player", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(2) A(5) C(7) T(1) A(1) C(7) T(1) A(2) C(7) T(1)"}, {"db_id": "storm_record", "query": "SELECT region_name FROM region ORDER BY region_name", "query_toks": ["SELECT", "region_name", "FROM", "region", "ORDER", "BY", "region_name"], "query_toks_no_value": ["select", "region_name", "from", "region", "order", "by", "region_name"], "question": "What are the names of the regions in alphabetical order?", "question_toks": ["what", "are", "name", "of", "region", "in", "alphabetical", "order", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 9, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "regions", "in", "alphabetical", "order", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["region"], ["in"], ["alphabetical"], ["order"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["region", "NN"], ["in", "IN"], ["alphabetical", "JJ"], ["order", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(0) A(0) C(9) T(1) Order(1) A(0) C(9) T(1)"}, {"db_id": "icfp_1", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\"", "query_toks": ["SELECT", "t3.title", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "JOIN", "inst", "AS", "t4", "ON", "t2.instid", "=", "t4.instid", "WHERE", "t4.country", "=", "``", "USA", "''", "AND", "t2.authorder", "=", "2", "AND", "t1.lname", "=", "``", "Turon", "''"], "query_toks_no_value": ["select", "t3", ".", "title", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "join", "inst", "as", "t4", "on", "t2", ".", "instid", "=", "t4", ".", "instid", "where", "t4", ".", "country", "=", "value", "and", "t2", ".", "authorder", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Find papers whose second author has last name \"Turon\" and is affiliated with an institution in the country \"USA\".", "question_toks": ["find", "paper", "whose", "second", "author", "ha", "last", "name", "'", "turon", "'", "and", "is", "affiliated", "with", "an", "institution", "in", "country", "'", "usa", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"USA\"", null], "and", [false, 2, [0, [0, 12, false], null], 2.0, null], "and", [false, 2, [0, [0, 5, false], null], "\"Turon\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Find", "papers", "whose", "second", "author", "has", "last", "name", "``", "Turon", "''", "and", "is", "affiliated", "with", "an", "institution", "in", "the", "country", "``", "USA", "''", "."], "question_arg": [["find"], ["paper"], ["whose"], ["second"], ["author"], ["ha"], ["last", "name"], ["'"], ["turon"], ["'"], ["and"], ["is"], ["affiliated"], ["with"], ["an"], ["institution"], ["in"], ["country"], ["'"], ["usa"], ["'"], ["."]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["country"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["paper", "NN"], ["whose", "WP$"], ["second", "JJ"], ["author", "NN"], ["ha", "NN"], ["last", "JJ"], ["name", "NN"], ["'", "''"], ["turon", "NN"], ["'", "POS"], ["and", "CC"], ["is", "VBZ"], ["affiliated", "VBN"], ["with", "IN"], ["an", "DT"], ["institution", "NN"], ["in", "IN"], ["country", "NN"], ["'", "''"], ["usa", "JJ"], ["'", "POS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(0) Filter(2) A(0) C(3) T(0) Filter(0) Filter(2) A(0) C(9) T(3) Filter(2) A(0) C(5) T(1)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRPORTS", "AS", "T3", "ON", "T1.SourceAirport", "=", "T3.AirportCode", "WHERE", "T2.City", "=", "``", "Ashley", "''", "AND", "T3.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airports", "as", "t3", "on", "t1", ".", "sourceairport", "=", "t3", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "city", "=", "value"], "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "question_toks": ["how", "many", "flight", "depart", "from", "city", "'", "aberdeen", "'", "and", "have", "destination", "city", "'", "ashley", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Ashley\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["How", "many", "flights", "depart", "from", "City", "'Aberdeen", "'", "and", "have", "destination", "City", "'Ashley", "'", "?"], "question_arg": [["how"], ["many"], ["flight"], ["depart"], ["from"], ["city"], ["'"], ["aberdeen"], ["'"], ["and"], ["have"], ["destination", "airport"], ["city"], ["'"], ["ashley"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["city"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["flight", "NN"], ["depart", "NN"], ["from", "IN"], ["city", "NN"], ["'", "POS"], ["aberdeen", "NN"], ["'", "POS"], ["and", "CC"], ["have", "VBP"], ["destination", "VBN"], ["city", "NN"], ["'", "''"], ["ashley", "NN"], ["'", "POS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(0) Filter(2) A(0) C(5) T(1) Filter(2) A(0) C(5) T(1)"}, {"db_id": "geo", "query": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";", "query_toks": ["SELECT", "t2.capital", "FROM", "state", "AS", "t2", "JOIN", "border_info", "AS", "t1", "ON", "t2.state_name", "=", "t1.border", "WHERE", "t1.state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "capital", "from", "state", "as", "t2", "join", "border_info", "as", "t1", "on", "t2", ".", "state_name", "=", "t1", ".", "border", "where", "t1", ".", "state_name", "=", "value"], "question": "what are the capital cities of the states which border texas", "question_toks": ["what", "are", "capital", "city", "of", "state", "which", "border", "texas"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "capital", "cities", "of", "the", "states", "which", "border", "texas"], "question_arg": [["what"], ["are"], ["capital"], ["city"], ["of"], ["state"], ["which"], ["border"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["table"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["capital", "JJ"], ["city", "NN"], ["of", "IN"], ["state", "NN"], ["which", "WDT"], ["border", "NN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(2) A(0) C(1) T(2)"}, {"db_id": "flight_4", "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "query_toks": ["SELECT", "rid", "FROM", "routes", "WHERE", "dst_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")", "AND", "src_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")"], "query_toks_no_value": ["select", "rid", "from", "routes", "where", "dst_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")", "and", "src_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")"], "question": "What is the id of the routes whose source and destination airports are in the United States?", "question_toks": ["what", "is", "id", "of", "route", "whose", "source", "and", "destination", "airport", "are", "in", "united", "state", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 8, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "id", "of", "the", "routes", "whose", "source", "and", "destination", "airports", "are", "in", "the", "United", "States", "?"], "question_arg": [["what"], ["is"], ["id"], ["of"], ["route"], ["whose"], ["source", "airport"], ["and"], ["destination", "airport"], ["are"], ["in"], ["united"], ["state"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["id", "NN"], ["of", "IN"], ["route", "NN"], ["whose", "WP$"], ["source", "NN"], ["and", "CC"], ["destination", "NN"], ["airport", "NN"], ["are", "VBP"], ["in", "IN"], ["united", "JJ"], ["state", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(18) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(2) A(0) C(12) T(1) Filter(18) A(0) C(4) T(0) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(2) A(0) C(12) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "density", "=", "(", "SELECT", "MAX", "(", "density", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "density", "=", "(", "select", "max", "(", "density", ")", "from", "state", ")"], "question": "which state has the greatest density", "question_toks": ["which", "state", "ha", "greatest", "density"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "greatest", "density"], "question_arg": [["which"], ["state"], ["ha"], ["greatest"], ["density"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["greatest", "JJS"], ["density", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(6) T(0) Root(5) Sel(0) N(0) A(1) C(6) T(0)"}, {"db_id": "storm_record", "query": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "name", "FROM", "storm", "EXCEPT", "SELECT", "T1.name", "FROM", "storm", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.storm_id", "=", "T2.storm_id", "GROUP", "BY", "T1.storm_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "name", "from", "storm", "except", "select", "t1", ".", "name", "from", "storm", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "storm_id", "=", "t2", ".", "storm_id", "group", "by", "t1", ".", "storm_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show all storm names except for those with at least two affected regions.", "question_toks": ["show", "all", "storm", "name", "except", "for", "those", "with", "at", "least", "two", "affected", "region", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["Show", "all", "storm", "names", "except", "for", "those", "with", "at", "least", "two", "affected", "regions", "."], "question_arg": [["show"], ["all"], ["storm"], ["name"], ["except"], ["for"], ["those"], ["with"], ["at"], ["least"], ["two"], ["affected", "region"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["all", "DT"], ["storm", "NN"], ["name", "NN"], ["except", "IN"], ["for", "IN"], ["those", "DT"], ["with", "IN"], ["at", "IN"], ["least", "JJS"], ["two", "CD"], ["affected", "JJ"], ["region", "NN"], [".", "."]], "rule_label": "Root1(2) Root(5) Sel(0) N(0) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(7) A(3) C(0) T(2)"}, {"db_id": "geo", "query": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );", "query_toks": ["SELECT", "state_name", "FROM", "highlow", "WHERE", "lowest_elevation", "=", "(", "SELECT", "MIN", "(", "lowest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "highlow", "where", "lowest_elevation", "=", "(", "select", "min", "(", "lowest_elevation", ")", "from", "highlow", ")"], "question": "what is the state with the lowest point", "question_toks": ["what", "is", "state", "with", "lowest", "point"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "state", "with", "the", "lowest", "point"], "question_arg": [["what"], ["is"], ["state"], ["with"], ["lowest", "point"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["state", "NN"], ["with", "IN"], ["lowest", "JJS"], ["point", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(11) A(0) C(12) T(3) Root(5) Sel(0) N(0) A(2) C(12) T(3)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "density", "=", "(", "SELECT", "MAX", "(", "density", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "density", "=", "(", "select", "max", "(", "density", ")", "from", "state", ")"], "question": "what is the state with the largest population density", "question_toks": ["what", "is", "state", "with", "largest", "population", "density"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "state", "with", "the", "largest", "population", "density"], "question_arg": [["what"], ["is"], ["state"], ["with"], ["largest"], ["population"], ["density"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["state", "NN"], ["with", "IN"], ["largest", "JJS"], ["population", "NN"], ["density", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(6) T(0) Root(5) Sel(0) N(0) A(1) C(6) T(0)"}, {"db_id": "singer", "query": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Birth_Year", "=", "1948", "OR", "Birth_Year", "=", "1949"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "birth_year", "=", "value", "or", "birth_year", "=", "value"], "question": "What are the names of the singers whose birth years are either 1948 or 1949?", "question_toks": ["what", "are", "name", "of", "singer", "whose", "birth", "year", "are", "either", "year", "or", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], 1948.0, null], "or", [false, 2, [0, [0, 3, false], null], 1949.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "singers", "whose", "birth", "years", "are", "either", "1948", "or", "1949", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["singer"], ["whose"], ["birth", "year"], ["are"], ["either"], ["year"], ["or"], ["year"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["singer", "NN"], ["whose", "WP$"], ["birth", "JJ"], ["year", "NN"], ["are", "VBP"], ["either", "DT"], ["1948", "CD"], ["or", "CC"], ["1949", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(1) Filter(2) A(0) C(3) T(0) Filter(2) A(0) C(3) T(0)"}, {"db_id": "network_2", "query": "SELECT avg(age) FROM Person", "query_toks": ["SELECT", "avg", "(", "age", ")", "FROM", "Person"], "query_toks_no_value": ["select", "avg", "(", "age", ")", "from", "person"], "question": "What is the average age for all person?", "question_toks": ["what", "is", "average", "age", "for", "all", "person", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["What", "is", "the", "average", "age", "for", "all", "person", "?"], "question_arg": [["what"], ["is"], ["average"], ["age"], ["for"], ["all"], ["person"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["age", "NN"], ["for", "IN"], ["all", "DT"], ["person", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(5) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  \"tennessee\" );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "river_name", "NOT", "IN", "(", "SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "=", "``", "tennessee", "''", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "river_name", "not", "in", "(", "select", "river_name", "from", "river", "where", "traverse", "=", "value", ")"], "question": "what rivers do not run through tennessee", "question_toks": ["what", "river", "do", "not", "run", "through", "tennessee"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[true, 8, [0, [0, 26, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"tennessee\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "rivers", "do", "not", "run", "through", "tennessee"], "question_arg": [["what"], ["river"], ["do"], ["not"], ["run"], ["through"], ["tennessee"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["river", "NN"], ["do", "VBP"], ["not", "RB"], ["run", "VB"], ["through", "IN"], ["tennessee", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(19) A(0) C(16) T(6) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "state_name", "=", "value"], "question": "give me the cities which are in texas", "question_toks": ["give", "me", "city", "which", "are", "in", "texas"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["give", "me", "the", "cities", "which", "are", "in", "texas"], "question_arg": [["give"], ["me"], ["city"], ["which"], ["are"], ["in"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["city", "NN"], ["which", "WDT"], ["are", "VBP"], ["in", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "state", ")"], "question": "which state has the greatest population", "question_toks": ["which", "state", "ha", "greatest", "population"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "greatest", "population"], "question_arg": [["which"], ["state"], ["ha"], ["greatest"], ["population"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["greatest", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(1) C(2) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good arabics in mountain view ?", "question_toks": ["give", "me", "some", "good", "arabic", "in", "mountain", "view", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mountain view\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "some", "good", "arabics", "in", "mountain", "view", "?"], "question_arg": [["give"], ["me"], ["some"], ["good"], ["arabic"], ["in"], ["mountain"], ["view"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["some", "DT"], ["good", "JJ"], ["arabic", "NN"], ["in", "IN"], ["mountain", "NN"], ["view", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";", "query_toks": ["SELECT", "t2.capital", "FROM", "state", "AS", "t2", "JOIN", "border_info", "AS", "t1", "ON", "t2.state_name", "=", "t1.border", "WHERE", "t1.state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "capital", "from", "state", "as", "t2", "join", "border_info", "as", "t1", "on", "t2", ".", "state_name", "=", "t1", ".", "border", "where", "t1", ".", "state_name", "=", "value"], "question": "which capitals are in the states that border texas", "question_toks": ["which", "capital", "are", "in", "state", "that", "border", "texas"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "capitals", "are", "in", "the", "states", "that", "border", "texas"], "question_arg": [["which"], ["capital"], ["are"], ["in"], ["state"], ["that"], ["border"], ["texas"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["capital", "NN"], ["are", "VBP"], ["in", "IN"], ["state", "NN"], ["that", "IN"], ["border", "NN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "state", ")"], "question": "what is the most populous state in the us", "question_toks": ["what", "is", "most", "populous", "state", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "most", "populous", "state", "in", "the", "us"], "question_arg": [["what"], ["is"], ["most"], ["populous"], ["state"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["most", "RBS"], ["populous", "JJ"], ["state", "NN"], ["in", "IN"], ["u", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(1) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"colorado\" );", "query_toks": ["SELECT", "state_name", "FROM", "highlow", "WHERE", "highest_elevation", ">", "(", "SELECT", "highest_elevation", "FROM", "highlow", "WHERE", "state_name", "=", "``", "colorado", "''", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "highlow", "where", "highest_elevation", ">", "(", "select", "highest_elevation", "from", "highlow", "where", "state_name", "=", "value", ")"], "question": "which states have points that are higher than the highest point in colorado", "question_toks": ["which", "state", "have", "point", "that", "are", "higher", "than", "highest", "point", "in", "colorado"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"colorado\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "states", "have", "points", "that", "are", "higher", "than", "the", "highest", "point", "in", "colorado"], "question_arg": [["which"], ["state"], ["have"], ["point"], ["that"], ["are"], ["higher"], ["than"], ["highest", "point"], ["in"], ["colorado"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["have", "VBP"], ["point", "NN"], ["that", "WDT"], ["are", "VBP"], ["higher", "JJR"], ["than", "IN"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["colorado", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(13) A(0) C(9) T(3) Root(3) Sel(0) N(0) A(0) C(9) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good arabic on buchanan in san francisco ?", "question_toks": ["where", "is", "a", "good", "arabic", "on", "buchanan", "in", "san", "francisco", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"buchanan\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "is", "a", "good", "arabic", "on", "buchanan", "in", "san", "francisco", "?"], "question_arg": [["where"], ["is"], ["a"], ["good"], ["arabic"], ["on"], ["buchanan"], ["in"], ["san"], ["francisco"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["a", "DT"], ["good", "JJ"], ["arabic", "NN"], ["on", "IN"], ["buchanan", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(10) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "geo", "query": "SELECT highest_point  ,  state_name FROM highlow WHERE lowest_elevation  =  0;", "query_toks": ["SELECT", "highest_point", ",", "state_name", "FROM", "highlow", "WHERE", "lowest_elevation", "=", "0", ";"], "query_toks_no_value": ["select", "highest_point", ",", "state_name", "from", "highlow", "where", "lowest_elevation", "=", "value"], "question": "what is the highest point in each state whose lowest point is sea level", "question_toks": ["what", "is", "highest", "point", "in", "each", "state", "whose", "lowest", "point", "is", "sea", "level"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], 0.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "highest", "point", "in", "each", "state", "whose", "lowest", "point", "is", "sea", "level"], "question_arg": [["what"], ["is"], ["highest", "point"], ["in"], ["each"], ["state"], ["whose"], ["lowest", "point"], ["is"], ["sea"], ["level"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["each", "DT"], ["state", "NN"], ["whose", "WP$"], ["lowest", "JJS"], ["point", "NN"], ["is", "VBZ"], ["sea", "JJ"], ["level", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(11) T(3) A(0) C(1) T(3) Filter(2) A(0) C(12) T(3)"}, {"db_id": "icfp_1", "query": "SELECT fname ,  lname FROM authors ORDER BY lname", "query_toks": ["SELECT", "fname", ",", "lname", "FROM", "authors", "ORDER", "BY", "lname"], "query_toks_no_value": ["select", "fname", ",", "lname", "from", "authors", "order", "by", "lname"], "question": "Retrieve all the first and last names of authors in the alphabetical order of last names.", "question_toks": ["retrieve", "all", "first", "and", "last", "name", "of", "author", "in", "alphabetical", "order", "of", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Retrieve", "all", "the", "first", "and", "last", "names", "of", "authors", "in", "the", "alphabetical", "order", "of", "last", "names", "."], "question_arg": [["retrieve"], ["all"], ["first", "name"], ["and"], ["last", "name"], ["of"], ["author"], ["in"], ["alphabetical"], ["order"], ["of"], ["last", "name"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["retrieve", "VB"], ["all", "DT"], ["first", "JJ"], ["and", "CC"], ["last", "JJ"], ["name", "NN"], ["of", "IN"], ["author", "NN"], ["in", "IN"], ["alphabetical", "JJ"], ["order", "NN"], ["of", "IN"], ["last", "JJ"], ["name", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(1) A(0) C(6) T(1) A(0) C(5) T(1) Order(1) A(0) C(5) T(1)"}, {"db_id": "flight_1", "query": "SELECT origin ,  count(*) FROM Flight GROUP BY origin", "query_toks": ["SELECT", "origin", ",", "count", "(", "*", ")", "FROM", "Flight", "GROUP", "BY", "origin"], "query_toks_no_value": ["select", "origin", ",", "count", "(", "*", ")", "from", "flight", "group", "by", "origin"], "question": "Show all origins and the number of flights from each origin.", "question_toks": ["show", "all", "origin", "and", "number", "of", "flight", "from", "each", "origin", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "all", "origins", "and", "the", "number", "of", "flights", "from", "each", "origin", "."], "question_arg": [["show"], ["all"], ["origin"], ["and"], ["flight", "number"], ["of"], ["flight"], ["from"], ["each"], ["origin"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["show", "NN"], ["all", "DT"], ["origin", "NN"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["flight", "NN"], ["from", "IN"], ["each", "DT"], ["origin", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(2) T(0) A(3) C(0) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";", "query_toks": ["SELECT", "state_name", "FROM", "city", "WHERE", "city_name", "=", "``", "springfield", "''", ";"], "query_toks_no_value": ["select", "state_name", "from", "city", "where", "city_name", "=", "value"], "question": "what states have a city named springfield", "question_toks": ["what", "state", "have", "a", "city", "named", "springfield"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"springfield\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "have", "a", "city", "named", "springfield"], "question_arg": [["what"], ["state"], ["have"], ["a"], ["city"], ["named"], ["springfield"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["have", "VBP"], ["a", "DT"], ["city", "NN"], ["named", "VBN"], ["springfield", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MIN", "(", "population", ")", "FROM", "city", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "min", "(", "population", ")", "from", "city", ")"], "question": "what is the smallest city in the us", "question_toks": ["what", "is", "smallest", "city", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "smallest", "city", "in", "the", "us"], "question_arg": [["what"], ["is"], ["smallest"], ["city"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["smallest", "JJS"], ["city", "NN"], ["in", "IN"], ["u", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(2) C(2) T(1)"}, {"db_id": "flight_4", "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "routes", "WHERE", "dst_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'Canada", "'", ")", "AND", "src_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "routes", "where", "dst_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")", "and", "src_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")"], "question": "Find the number of routes from the United States to Canada.", "question_toks": ["find", "number", "of", "route", "from", "united", "state", "to", "canada", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 8, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Canada\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "number", "of", "routes", "from", "the", "United", "States", "to", "Canada", "."], "question_arg": [["find"], ["number"], ["of"], ["route"], ["from"], ["united"], ["state"], ["to"], ["canada"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["country"], ["NONE"]], "nltk_pos": [["find", "VB"], ["number", "NN"], ["of", "IN"], ["route", "NN"], ["from", "IN"], ["united", "JJ"], ["state", "NN"], ["to", "TO"], ["canada", "VB"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(0) Filter(18) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(2) A(0) C(12) T(1) Filter(18) A(0) C(4) T(0) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(2) A(0) C(12) T(1)"}, {"db_id": "geo", "query": "SELECT t2.highest_point FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MIN ( area ) FROM state );", "query_toks": ["SELECT", "t2.highest_point", "FROM", "highlow", "AS", "t2", "JOIN", "state", "AS", "t1", "ON", "t1.state_name", "=", "t2.state_name", "WHERE", "t1.area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "highest_point", "from", "highlow", "as", "t2", "join", "state", "as", "t1", "on", "t1", ".", "state_name", "=", "t2", ".", "state_name", "where", "t1", ".", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")"], "question": "what is the highest point in the smallest state", "question_toks": ["what", "is", "highest", "point", "in", "smallest", "state"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "highest", "point", "in", "the", "smallest", "state"], "question_arg": [["what"], ["is"], ["highest", "point"], ["in"], ["smallest"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["smallest", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(3) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "flight_4", "query": "SELECT name FROM airports WHERE city  =  'Goroka'", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "city", "=", "'Goroka", "'"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "city", "=", "value"], "question": "Find the name of the airport in the city of Goroka.", "question_toks": ["find", "name", "of", "airport", "in", "city", "of", "goroka", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"Goroka\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "name", "of", "the", "airport", "in", "the", "city", "of", "Goroka", "."], "question_arg": [["find"], ["name"], ["of"], ["airport"], ["in"], ["city"], ["of"], ["goroka"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["airport", "NN"], ["in", "IN"], ["city", "NN"], ["of", "IN"], ["goroka", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(1) Filter(2) A(0) C(11) T(1)"}, {"db_id": "flight_4", "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airports", "WHERE", "name", "LIKE", "'", "%", "International", "%", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports", "where", "name", "like", "value"], "question": "How many airports' names have the word Interanation in them?", "question_toks": ["how", "many", "airport", "'", "name", "have", "word", "interanation", "in", "them", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 9, [0, [0, 10, false], null], "\"%International%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["How", "many", "airports", "'", "names", "have", "the", "word", "Interanation", "in", "them", "?"], "question_arg": [["how"], ["many"], ["airport"], ["'"], ["name"], ["have"], ["word"], ["interanation"], ["in"], ["them"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["airport", "NN"], ["'", "POS"], ["name", "NN"], ["have", "VBP"], ["word", "NN"], ["interanation", "NN"], ["in", "IN"], ["them", "PRP"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(9) A(0) C(10) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";", "query_toks": ["SELECT", "state_name", "FROM", "city", "WHERE", "city_name", "=", "``", "springfield", "''", ";"], "query_toks_no_value": ["select", "state_name", "from", "city", "where", "city_name", "=", "value"], "question": "what states have cities named springfield", "question_toks": ["what", "state", "have", "city", "named", "springfield"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"springfield\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "have", "cities", "named", "springfield"], "question_arg": [["what"], ["state"], ["have"], ["city"], ["named"], ["springfield"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["have", "VBP"], ["city", "NN"], ["named", "VBN"], ["springfield", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "mississippi", "''", ")", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "river_name", "=", "value", ")"], "question": "what are the populations of states through which the mississippi runs", "question_toks": ["what", "are", "population", "of", "state", "through", "which", "mississippi", "run"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"mississippi\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "populations", "of", "states", "through", "which", "the", "mississippi", "runs"], "question_arg": [["what"], ["are"], ["population"], ["of"], ["state"], ["through"], ["which"], ["mississippi"], ["run"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["population", "NN"], ["of", "IN"], ["state", "NN"], ["through", "IN"], ["which", "WDT"], ["mississippi", "NN"], ["run", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "network_2", "query": "SELECT count(DISTINCT city) FROM Person", "query_toks": ["SELECT", "count", "(", "DISTINCT", "city", ")", "FROM", "Person"], "query_toks_no_value": ["select", "count", "(", "distinct", "city", ")", "from", "person"], "question": "How many different cities do people originate from?", "question_toks": ["how", "many", "different", "city", "do", "people", "originate", "from", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 3, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["How", "many", "different", "cities", "do", "people", "originate", "from", "?"], "question_arg": [["how"], ["many"], ["different"], ["city"], ["do"], ["people"], ["originate"], ["from"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["different", "JJ"], ["city", "NN"], ["do", "VBP"], ["people", "NNS"], ["originate", "VB"], ["from", "IN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(3) T(0)"}, {"db_id": "soccer_2", "query": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "tryout", "WHERE", "pPos", "=", "'goalie", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "tryout", "where", "ppos", "=", "value"], "question": "What is the number of students playing as a goalie?", "question_toks": ["what", "is", "number", "of", "student", "playing", "a", "a", "goalie", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "is", "the", "number", "of", "students", "playing", "as", "a", "goalie", "?"], "question_arg": [["what"], ["is"], ["number"], ["of"], ["student"], ["playing"], ["a"], ["a"], ["goalie"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["number", "NN"], ["of", "IN"], ["student", "NN"], ["playing", "VBG"], ["a", "DT"], ["a", "DT"], ["goalie", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(2) A(0) C(8) T(2)"}, {"db_id": "icfp_1", "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\"", "query_toks": ["SELECT", "title", "FROM", "papers", "WHERE", "title", "LIKE", "``", "%", "ML", "%", "''"], "query_toks_no_value": ["select", "title", "from", "papers", "where", "title", "like", "value"], "question": "Which papers have the substring \"ML\" in their titles? Return the titles of the papers.", "question_toks": ["which", "paper", "have", "substring", "'", "ml", "'", "in", "their", "title", "?", "return", "title", "of", "paper", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%ML%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Which", "papers", "have", "the", "substring", "``", "ML", "''", "in", "their", "titles", "?", "Return", "the", "titles", "of", "the", "papers", "."], "question_arg": [["which"], ["paper"], ["have"], ["substring"], ["'"], ["ml"], ["'"], ["in"], ["their"], ["title"], ["?"], ["return"], ["title"], ["of"], ["paper"], ["."]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["paper", "NN"], ["have", "VBP"], ["substring", "VBG"], ["'", "''"], ["ml", "NN"], ["'", "''"], ["in", "IN"], ["their", "PRP$"], ["title", "NN"], ["?", "."], ["return", "VB"], ["title", "NN"], ["of", "IN"], ["paper", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(9) A(0) C(8) T(2)"}, {"db_id": "flight_1", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2", "query_toks": ["SELECT", "T2.name", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "GROUP", "BY", "T1.aid", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "group", "by", "t1", ".", "aid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "Show names for all aircraft with at least two flights.", "question_toks": ["show", "name", "for", "all", "aircraft", "with", "at", "least", "two", "flight", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "names", "for", "all", "aircraft", "with", "at", "least", "two", "flights", "."], "question_arg": [["show"], ["name"], ["for"], ["all"], ["aircraft"], ["with"], ["at"], ["least"], ["two"], ["flight"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["for", "IN"], ["all", "DT"], ["aircraft", "NN"], ["with", "IN"], ["at", "IN"], ["least", "JJS"], ["two", "CD"], ["flight", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(7) A(3) C(0) T(0)"}, {"db_id": "geo", "query": "SELECT COUNT ( state_name ) FROM state;", "query_toks": ["SELECT", "COUNT", "(", "state_name", ")", "FROM", "state", ";"], "query_toks_no_value": ["select", "count", "(", "state_name", ")", "from", "state"], "question": "how many states does usa have", "question_toks": ["how", "many", "state", "doe", "usa", "have"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "does", "usa", "have"], "question_arg": [["how"], ["many"], ["state"], ["doe"], ["usa"], ["have"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["doe", "NNS"], ["usa", "NNS"], ["have", "VBP"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(1) T(0)"}, {"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "WHERE", "ticket_price", "<", "15"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "where", "ticket_price", "<", "value"], "question": "Show theme and year for all exhibitions with ticket prices lower than 15.", "question_toks": ["show", "theme", "and", "year", "for", "all", "exhibition", "with", "ticket", "price", "lower", "than", "15", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 4, [0, [0, 10, false], null], 15.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Show", "theme", "and", "year", "for", "all", "exhibitions", "with", "ticket", "prices", "lower", "than", "15", "."], "question_arg": [["show"], ["theme"], ["and"], ["year"], ["for"], ["all"], ["exhibition"], ["with"], ["ticket", "price"], ["lower"], ["than"], ["15"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["MORE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["show", "NN"], ["theme", "NN"], ["and", "CC"], ["year", "NN"], ["for", "IN"], ["all", "DT"], ["exhibition", "NN"], ["with", "IN"], ["ticket", "NN"], ["price", "NN"], ["lower", "JJR"], ["than", "IN"], ["15", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(8) T(1) A(0) C(7) T(1) Filter(4) A(0) C(9) T(1)"}, {"db_id": "icfp_1", "query": "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Atsushi\" AND t1.lname  =  \"Ohori\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t1.fname", "=", "``", "Atsushi", "''", "AND", "t1.lname", "=", "``", "Ohori", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "How many papers are \"Atsushi Ohori\" the author of?", "question_toks": ["how", "many", "paper", "are", "'", "atsushi", "ohori", "'", "author", "of", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Atsushi\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Ohori\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["How", "many", "papers", "are", "``", "Atsushi", "Ohori", "''", "the", "author", "of", "?"], "question_arg": [["how"], ["many"], ["paper"], ["are"], ["'"], ["atsushi"], ["ohori"], ["'"], ["author"], ["of"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["paper", "NN"], ["are", "VBP"], ["'", "POS"], ["atsushi", "JJ"], ["ohori", "NNS"], ["'", "POS"], ["author", "NN"], ["of", "IN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(0) Filter(2) A(0) C(6) T(1) Filter(2) A(0) C(5) T(1)"}, {"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the airport code of the airport with the most flights?", "question_toks": ["what", "is", "airport", "code", "of", "airport", "with", "most", "flight", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["What", "is", "the", "airport", "code", "of", "the", "airport", "with", "the", "most", "flights", "?"], "question_arg": [["what"], ["is"], ["airport", "code"], ["of"], ["airport"], ["with"], ["most"], ["flight"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["airport", "JJ"], ["code", "NN"], ["of", "IN"], ["airport", "NN"], ["with", "IN"], ["most", "JJS"], ["flight", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(6) T(1) Sup(0) A(3) C(0) T(2)"}, {"db_id": "theme_gallery", "query": "SELECT count(*) FROM artist", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "artist"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "artist"], "question": "Count the number of artists.", "question_toks": ["count", "number", "of", "artist", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Count", "the", "number", "of", "artists", "."], "question_arg": [["count"], ["number"], ["of"], ["artist"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["count", "NN"], ["number", "NN"], ["of", "IN"], ["artist", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(0)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "state_name", "=", "value"], "question": "what cities in texas", "question_toks": ["what", "city", "in", "texas"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "cities", "in", "texas"], "question_arg": [["what"], ["city"], ["in"], ["texas"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["city", "NN"], ["in", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE state_name  =  \"texas\";", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "state_name", "=", "value"], "question": "tell me what cities are in texas", "question_toks": ["tell", "me", "what", "city", "are", "in", "texas"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["tell", "me", "what", "cities", "are", "in", "texas"], "question_arg": [["tell"], ["me"], ["what"], ["city"], ["are"], ["in"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["tell", "VB"], ["me", "PRP"], ["what", "WP"], ["city", "NN"], ["are", "VBP"], ["in", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")"], "question": "what is the population of the state with the largest area", "question_toks": ["what", "is", "population", "of", "state", "with", "largest", "area"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "population", "of", "the", "state", "with", "the", "largest", "area"], "question_arg": [["what"], ["is"], ["population"], ["of"], ["state"], ["with"], ["largest"], ["area"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["population", "NN"], ["of", "IN"], ["state", "NN"], ["with", "IN"], ["largest", "JJS"], ["area", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines"], "question": "How many airlines do we have?", "question_toks": ["how", "many", "airline", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["How", "many", "airlines", "do", "we", "have", "?"], "question_arg": [["how"], ["many"], ["airline"], ["do"], ["we"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["airline", "NN"], ["do", "VBP"], ["we", "PRP"], ["have", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(0)"}, {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good place in the yosemite and mono lake area for french food ?", "question_toks": ["give", "me", "a", "good", "place", "in", "yosemite", "and", "mono", "lake", "area", "for", "french", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"yosemite and mono lake area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "a", "good", "place", "in", "the", "yosemite", "and", "mono", "lake", "area", "for", "french", "food", "?"], "question_arg": [["give"], ["me"], ["a"], ["good"], ["place"], ["in"], ["yosemite"], ["and"], ["mono"], ["lake"], ["area"], ["for"], ["french"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["a", "DT"], ["good", "JJ"], ["place", "NN"], ["in", "IN"], ["yosemite", "NN"], ["and", "CC"], ["mono", "JJ"], ["lake", "NN"], ["area", "NN"], ["for", "IN"], ["french", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT COUNT ( state_name ) FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  ( SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) ) ) );", "query_toks": ["SELECT", "COUNT", "(", "state_name", ")", "FROM", "highlow", "WHERE", "highest_elevation", ">", "(", "SELECT", "highest_elevation", "FROM", "highlow", "WHERE", "state_name", "=", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "capital", "=", "(", "SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", ")", ")", ")", ")", ";"], "query_toks_no_value": ["select", "count", "(", "state_name", ")", "from", "highlow", "where", "highest_elevation", ">", "(", "select", "highest_elevation", "from", "highlow", "where", "state_name", "=", "(", "select", "state_name", "from", "state", "where", "capital", "=", "(", "select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", ")", ")", ")", ")"], "question": "how many states have a higher point than the highest point of the state with the largest capital city in the us", "question_toks": ["how", "many", "state", "have", "a", "higher", "point", "than", "highest", "point", "of", "state", "with", "largest", "capital", "city", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "have", "a", "higher", "point", "than", "the", "highest", "point", "of", "the", "state", "with", "the", "largest", "capital", "city", "in", "the", "us"], "question_arg": [["how"], ["many"], ["state"], ["have"], ["a"], ["higher"], ["point"], ["than"], ["highest", "point"], ["of"], ["state"], ["with"], ["largest"], ["capital"], ["city"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["have", "VBP"], ["a", "DT"], ["higher", "JJR"], ["point", "NN"], ["than", "IN"], ["highest", "JJS"], ["point", "NN"], ["of", "IN"], ["state", "NN"], ["with", "IN"], ["largest", "JJS"], ["capital", "NN"], ["city", "NN"], ["in", "IN"], ["u", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(1) T(3) Filter(13) A(0) C(9) T(3) Root(3) Sel(0) N(0) A(0) C(9) T(3) Filter(11) A(0) C(1) T(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(5) T(0) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "mississippi", "''", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "river_name", "=", "value", ")"], "question": "what are the cities in states through which the mississippi runs", "question_toks": ["what", "are", "city", "in", "state", "through", "which", "mississippi", "run"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"mississippi\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "cities", "in", "states", "through", "which", "the", "mississippi", "runs"], "question_arg": [["what"], ["are"], ["city"], ["in"], ["state"], ["through"], ["which"], ["mississippi"], ["run"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["city", "NN"], ["in", "IN"], ["state", "NN"], ["through", "IN"], ["which", "WDT"], ["mississippi", "NN"], ["run", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "give me the best restaurant in the bay area for american food ?", "question_toks": ["give", "me", "best", "restaurant", "in", "bay", "area", "for", "american", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"american\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"american\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "the", "best", "restaurant", "in", "the", "bay", "area", "for", "american", "food", "?"], "question_arg": [["give"], ["me"], ["best"], ["restaurant"], ["in"], ["bay"], ["area"], ["for"], ["american"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["best", "JJS"], ["restaurant", "NN"], ["in", "IN"], ["bay", "JJ"], ["area", "NN"], ["for", "IN"], ["american", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(1) C(7) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(2) A(0) C(6) T(1)"}, {"db_id": "concert_singer", "query": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'", "query_toks": ["SELECT", "name", ",", "country", "FROM", "singer", "WHERE", "song_name", "LIKE", "'", "%", "Hey", "%", "'"], "query_toks_no_value": ["select", "name", ",", "country", "from", "singer", "where", "song_name", "like", "value"], "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "question_toks": ["what", "is", "name", "and", "nation", "of", "singer", "who", "have", "a", "song", "having", "'", "hey", "'", "in", "it", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 9, [0, [0, 11, false], null], "\"%Hey%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["what", "is", "the", "name", "and", "nation", "of", "the", "singer", "who", "have", "a", "song", "having", "'Hey", "'", "in", "its", "name", "?"], "question_arg": [["what"], ["is", "male"], ["name"], ["and"], ["nation"], ["of"], ["singer"], ["who"], ["have"], ["a"], ["song", "name"], ["having"], ["'"], ["hey"], ["'"], ["in"], ["it"], ["name"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "JJ"], ["and", "CC"], ["nation", "NN"], ["of", "IN"], ["singer", "NN"], ["who", "WP"], ["have", "VBP"], ["a", "DT"], ["song", "NN"], ["having", "VBG"], ["'", "''"], ["hey", "NN"], ["'", "''"], ["in", "IN"], ["it", "PRP"], ["name", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(3) T(1) A(0) C(9) T(1) Filter(9) A(0) C(10) T(1)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where are some good arabic restaurants in mountain view ?", "question_toks": ["where", "are", "some", "good", "arabic", "restaurant", "in", "mountain", "view", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mountain view\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "are", "some", "good", "arabic", "restaurants", "in", "mountain", "view", "?"], "question_arg": [["where"], ["are"], ["some"], ["good"], ["arabic"], ["restaurant"], ["in"], ["mountain"], ["view"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["are", "VBP"], ["some", "DT"], ["good", "JJ"], ["arabic", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["mountain", "NN"], ["view", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "desc", "limit", "value"], "question": "What is the name, city, and country of the airport with the highest elevation?", "question_toks": ["what", "is", "name", ",", "city", ",", "and", "country", "of", "airport", "with", "highest", "elevation", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "with", "the", "highest", "elevation", "?"], "question_arg": [["what"], ["is"], ["name"], [","], ["city"], [","], ["and"], ["country"], ["of"], ["airport"], ["with"], ["highest"], ["elevation"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "JJ"], [",", ","], ["city", "NN"], [",", ","], ["and", "CC"], ["country", "NN"], ["of", "IN"], ["airport", "NN"], ["with", "IN"], ["highest", "JJS"], ["elevation", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(2) A(0) C(10) T(1) A(0) C(11) T(1) A(0) C(12) T(1) Sup(0) A(0) C(15) T(1)"}, {"db_id": "geo", "query": "SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name JOIN border_info AS t3 ON t3.border  =  t2.state_name JOIN border_info AS t4 ON t4.border  =  t3.state_name WHERE t4.state_name  =  \"texas\";", "query_toks": ["SELECT", "t1.border", "FROM", "border_info", "AS", "t2", "JOIN", "border_info", "AS", "t1", "ON", "t2.border", "=", "t1.state_name", "JOIN", "border_info", "AS", "t3", "ON", "t3.border", "=", "t2.state_name", "JOIN", "border_info", "AS", "t4", "ON", "t4.border", "=", "t3.state_name", "WHERE", "t4.state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "t1", ".", "border", "from", "border_info", "as", "t2", "join", "border_info", "as", "t1", "on", "t2", ".", "border", "=", "t1", ".", "state_name", "join", "border_info", "as", "t3", "on", "t3", ".", "border", "=", "t2", ".", "state_name", "join", "border_info", "as", "t4", "on", "t4", ".", "border", "=", "t3", ".", "state_name", "where", "t4", ".", "state_name", "=", "value"], "question": "what states border states that border states that border states that border texas", "question_toks": ["what", "state", "border", "state", "that", "border", "state", "that", "border", "state", "that", "border", "texas"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 2], ["table_unit", 2], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "border", "states", "that", "border", "states", "that", "border", "states", "that", "border", "texas"], "question_arg": [["what"], ["state"], ["border"], ["state"], ["that"], ["border"], ["state"], ["that"], ["border"], ["state"], ["that"], ["border"], ["texas"]], "question_arg_type": [["NONE"], ["table"], ["col"], ["table"], ["NONE"], ["col"], ["table"], ["NONE"], ["col"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["border", "NN"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", "WHERE", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", "where", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")", ")", ")", "and", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")", ")"], "question": "what is the biggest city in the smallest state", "question_toks": ["what", "is", "biggest", "city", "in", "smallest", "state"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "biggest", "city", "in", "the", "smallest", "state"], "question_arg": [["what"], ["is"], ["biggest"], ["city"], ["in"], ["smallest"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["biggest", "JJS"], ["city", "NN"], ["in", "IN"], ["smallest", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(0) Filter(11) A(0) C(2) T(1) Root(3) Sel(0) N(0) A(1) C(2) T(1) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "state_name", "NOT", "IN", "(", "SELECT", "state_name", "FROM", "border_info", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "state_name", "not", "in", "(", "select", "state_name", "from", "border_info", ")"], "question": "what states have no bordering state", "question_toks": ["what", "state", "have", "no", "bordering", "state"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "have", "no", "bordering", "state"], "question_arg": [["what"], ["state"], ["have"], ["no"], ["bordering"], ["state"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["have", "VBP"], ["no", "DT"], ["bordering", "NN"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(19) A(0) C(1) T(0) Root(5) Sel(0) N(0) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );", "query_toks": ["SELECT", "t2.highest_point", "FROM", "state", "AS", "t1", "JOIN", "highlow", "AS", "t2", "ON", "t1.state_name", "=", "t2.state_name", "WHERE", "t1.state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "highest_point", "from", "state", "as", "t1", "join", "highlow", "as", "t2", "on", "t1", ".", "state_name", "=", "t2", ".", "state_name", "where", "t1", ".", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")", ")"], "question": "what is the highest point of the state with the largest area", "question_toks": ["what", "is", "highest", "point", "of", "state", "with", "largest", "area"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "highest", "point", "of", "the", "state", "with", "the", "largest", "area"], "question_arg": [["what"], ["is"], ["highest", "point"], ["of"], ["state"], ["with"], ["largest"], ["area"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["of", "IN"], ["state", "NN"], ["with", "IN"], ["largest", "JJS"], ["area", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(3) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}, {"db_id": "pilot_record", "query": "SELECT Pilot_name FROM pilot WHERE Team  =  \"Bradley\" OR Team  =  \"Fordham\"", "query_toks": ["SELECT", "Pilot_name", "FROM", "pilot", "WHERE", "Team", "=", "``", "Bradley", "''", "OR", "Team", "=", "``", "Fordham", "''"], "query_toks_no_value": ["select", "pilot_name", "from", "pilot", "where", "team", "=", "value", "or", "team", "=", "value"], "question": "Show the names of pilots from team \"Bradley\" or \"Fordham\".", "question_toks": ["show", "name", "of", "pilot", "from", "team", "'", "bradley", "'", "or", "'", "fordham", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 15, false], null], "\"Bradley\"", null], "or", [false, 2, [0, [0, 15, false], null], "\"Fordham\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "pilot id", "aircraft id", "date"], "table_names": ["aircraft", "pilot", "pilot record"], "col_set": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "date"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"18": 1, "1": 1, "17": 17, "8": 8}, "origin_question_toks": ["Show", "the", "names", "of", "pilots", "from", "team", "``", "Bradley", "''", "or", "``", "Fordham", "''", "."], "question_arg": [["show"], ["pilot", "name"], ["of"], ["pilot"], ["from"], ["team"], ["'"], ["bradley"], ["'"], ["or"], ["'"], ["fordham"], ["'"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["of", "IN"], ["pilot", "NN"], ["from", "IN"], ["team", "NN"], ["'", "''"], ["bradley", "NN"], ["'", "''"], ["or", "CC"], ["'", "POS"], ["fordham", "NN"], ["'", "POS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(1) Filter(2) A(0) C(15) T(1) Filter(2) A(0) C(15) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );", "query_toks": ["SELECT", "state_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", ")"], "question": "what state has the city with the most population", "question_toks": ["what", "state", "ha", "city", "with", "most", "population"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "has", "the", "city", "with", "the", "most", "population"], "question_arg": [["what"], ["state"], ["ha"], ["city"], ["with"], ["most"], ["population"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["ha", "VBD"], ["city", "NN"], ["with", "IN"], ["most", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "soccer_2", "query": "SELECT count(DISTINCT pPos) FROM tryout", "query_toks": ["SELECT", "count", "(", "DISTINCT", "pPos", ")", "FROM", "tryout"], "query_toks_no_value": ["select", "count", "(", "distinct", "ppos", ")", "from", "tryout"], "question": "What are the different types of player positions?", "question_toks": ["what", "are", "different", "type", "of", "player", "position", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "different", "types", "of", "player", "positions", "?"], "question_arg": [["what"], ["are"], ["different"], ["type"], ["of"], ["player", "position"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["different", "JJ"], ["type", "NN"], ["of", "IN"], ["player", "NN"], ["position", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(8) T(2)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good restaurants in mountain view for arabic food ?", "question_toks": ["what", "are", "some", "good", "restaurant", "in", "mountain", "view", "for", "arabic", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mountain view\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["what", "are", "some", "good", "restaurants", "in", "mountain", "view", "for", "arabic", "food", "?"], "question_arg": [["what"], ["are"], ["some"], ["good"], ["restaurant"], ["in"], ["mountain"], ["view"], ["for"], ["arabic"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["some", "DT"], ["good", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["mountain", "NN"], ["view", "NN"], ["for", "IN"], ["arabic", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MIN", "(", "population", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "population", "=", "(", "select", "min", "(", "population", ")", "from", "state", ")", ")"], "question": "what state borders the state with the smallest population", "question_toks": ["what", "state", "border", "state", "with", "smallest", "population"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "borders", "the", "state", "with", "the", "smallest", "population"], "question_arg": [["what"], ["state"], ["border"], ["state"], ["with"], ["smallest"], ["population"]], "question_arg_type": [["NONE"], ["table"], ["col"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["border", "NN"], ["state", "NN"], ["with", "IN"], ["smallest", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(18) A(0) C(1) T(2) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(2) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );", "query_toks": ["SELECT", "capital", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "capital", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")"], "question": "what is the capital city of the largest state in the us", "question_toks": ["what", "is", "capital", "city", "of", "largest", "state", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "capital", "city", "of", "the", "largest", "state", "in", "the", "us"], "question_arg": [["what"], ["is"], ["capital"], ["city"], ["of"], ["largest"], ["state"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["table"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["capital", "JJ"], ["city", "NN"], ["of", "IN"], ["largest", "JJS"], ["state", "NN"], ["in", "IN"], ["u", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}, {"db_id": "flight_4", "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name of airline which runs the most number of routes.", "question_toks": ["find", "name", "of", "airline", "which", "run", "most", "number", "of", "route", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "name", "of", "airline", "which", "runs", "the", "most", "number", "of", "routes", "."], "question_arg": [["find"], ["name"], ["of"], ["airline"], ["which"], ["run"], ["most"], ["number"], ["of"], ["route"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["airline", "NN"], ["which", "WDT"], ["run", "VBZ"], ["most", "RBS"], ["number", "NN"], ["of", "IN"], ["route", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(10) T(2) Sup(0) A(3) C(0) T(0)"}, {"db_id": "geo", "query": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";", "query_toks": ["SELECT", "highest_elevation", "FROM", "highlow", "WHERE", "highest_point", "=", "``", "guadalupe", "peak", "''", ";"], "query_toks_no_value": ["select", "highest_elevation", "from", "highlow", "where", "highest_point", "=", "value"], "question": "how tall is guadalupe peak", "question_toks": ["how", "tall", "is", "guadalupe", "peak"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 16, false], null], "\"guadalupe peak\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "tall", "is", "guadalupe", "peak"], "question_arg": [["how"], ["tall"], ["is"], ["guadalupe"], ["peak"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["tall", "JJ"], ["is", "VBZ"], ["guadalupe", "JJ"], ["peak", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(3) Filter(2) A(0) C(11) T(3)"}, {"db_id": "flight_2", "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value"], "question": "What is the abbreviation of Airline \"JetBlue Airways\"?", "question_toks": ["what", "is", "abbreviation", "of", "airline", "'", "jetblue", "airway", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["What", "is", "the", "abbreviation", "of", "Airline", "``", "JetBlue", "Airways", "''", "?"], "question_arg": [["what"], ["is"], ["abbreviation"], ["of"], ["airline"], ["'"], ["jetblue"], ["airway"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["abbreviation", "NN"], ["of", "IN"], ["airline", "NN"], ["'", "''"], ["jetblue", "JJ"], ["airway", "NN"], ["'", "POS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(3) T(0) Filter(2) A(0) C(2) T(0)"}, {"db_id": "theme_gallery", "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)", "query_toks": ["SELECT", "T1.theme", ",", "T2.name", "FROM", "exhibition", "AS", "T1", "JOIN", "artist", "AS", "T2", "ON", "T1.artist_id", "=", "T2.artist_id", "WHERE", "T1.ticket_price", ">", "(", "SELECT", "avg", "(", "ticket_price", ")", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "t1", ".", "theme", ",", "t2", ".", "name", "from", "exhibition", "as", "t1", "join", "artist", "as", "t2", "on", "t1", ".", "artist_id", "=", "t2", ".", "artist_id", "where", "t1", ".", "ticket_price", ">", "(", "select", "avg", "(", "ticket_price", ")", "from", "exhibition", ")"], "question": "Return the names of artists and the themes of their exhibitions that had a ticket price higher than average.", "question_toks": ["return", "name", "of", "artist", "and", "theme", "of", "their", "exhibition", "that", "had", "a", "ticket", "price", "higher", "than", "average", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 2, false], null]]]], "where": [[false, 3, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 10, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Return", "the", "names", "of", "artists", "and", "the", "themes", "of", "their", "exhibitions", "that", "had", "a", "ticket", "price", "higher", "than", "average", "."], "question_arg": [["return"], ["name"], ["of"], ["artist"], ["and"], ["theme"], ["of"], ["their"], ["exhibition"], ["that"], ["had"], ["a"], ["ticket", "price"], ["higher"], ["than"], ["average"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["MORE"], ["NONE"], ["agg"], ["NONE"]], "nltk_pos": [["return", "NN"], ["name", "NN"], ["of", "IN"], ["artist", "NN"], ["and", "CC"], ["theme", "NN"], ["of", "IN"], ["their", "PRP$"], ["exhibition", "NN"], ["that", "IN"], ["had", "VBD"], ["a", "DT"], ["ticket", "NN"], ["price", "NN"], ["higher", "JJR"], ["than", "IN"], ["average", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(8) T(1) A(0) C(2) T(0) Filter(13) A(0) C(9) T(1) Root(5) Sel(0) N(0) A(5) C(9) T(1)"}, {"db_id": "icfp_1", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\"", "query_toks": ["SELECT", "DISTINCT", "t3.name", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t1.fname", "=", "``", "Katsuhiro", "''", "AND", "t1.lname", "=", "``", "Ueno", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "Which institution does \"Katsuhiro Ueno\" belong to?", "question_toks": ["which", "institution", "doe", "'", "katsuhiro", "ueno", "'", "belong", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Katsuhiro\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Ueno\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Which", "institution", "does", "``", "Katsuhiro", "Ueno", "''", "belong", "to", "?"], "question_arg": [["which"], ["institution"], ["doe"], ["'"], ["katsuhiro"], ["ueno"], ["'"], ["belong"], ["to"], ["?"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["institution", "NN"], ["doe", "NN"], ["'", "''"], ["katsuhiro", "JJ"], ["ueno", "NN"], ["'", "''"], ["belong", "NN"], ["to", "TO"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(2) A(0) C(5) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", "WHERE", "state_name", "=", "``", "alaska", "''", ")", "AND", "state_name", "=", "``", "alaska", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", "where", "state_name", "=", "value", ")", "and", "state_name", "=", "value"], "question": "how large is the largest city in alaska", "question_toks": ["how", "large", "is", "largest", "city", "in", "alaska"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"alaska\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 10, false], null], "\"alaska\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "large", "is", "the", "largest", "city", "in", "alaska"], "question_arg": [["how"], ["large"], ["is"], ["largest"], ["city"], ["in"], ["alaska"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["large", "JJ"], ["is", "VBZ"], ["largest", "JJS"], ["city", "NN"], ["in", "IN"], ["alaska", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(0) Filter(11) A(0) C(2) T(1) Root(3) Sel(0) N(0) A(1) C(2) T(1) Filter(2) A(0) C(1) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "geo", "query": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";", "query_toks": ["SELECT", "COUNT", "(", "state_name", ")", "FROM", "city", "WHERE", "city_name", "=", "``", "springfield", "''", ";"], "query_toks_no_value": ["select", "count", "(", "state_name", ")", "from", "city", "where", "city_name", "=", "value"], "question": "how many states have cities named springfield", "question_toks": ["how", "many", "state", "have", "city", "named", "springfield"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"springfield\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "have", "cities", "named", "springfield"], "question_arg": [["how"], ["many"], ["state"], ["have"], ["city"], ["named"], ["springfield"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["have", "VBP"], ["city", "NN"], ["named", "VBN"], ["springfield", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(1) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "soccer_2", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'", "query_toks": ["SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "JOIN", "player", "AS", "T3", "ON", "T2.pID", "=", "T3.pID", "WHERE", "T3.pName", "=", "'Charles", "'"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "join", "player", "as", "t3", "on", "t2", ".", "pid", "=", "t3", ".", "pid", "where", "t3", ".", "pname", "=", "value"], "question": "Find the state of the college which player Charles is attending.", "question_toks": ["find", "state", "of", "college", "which", "player", "charles", "is", "attending", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Charles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "state", "of", "the", "college", "which", "player", "Charles", "is", "attending", "."], "question_arg": [["find"], ["state"], ["of"], ["college"], ["which"], ["player"], ["charles"], ["is"], ["attending"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["state", "NN"], ["of", "IN"], ["college", "NN"], ["which", "WDT"], ["player", "NN"], ["charles", "NNS"], ["is", "VBZ"], ["attending", "VBG"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(5) T(1)"}, {"db_id": "flight_2", "query": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "T1.FlightNo", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "t1", ".", "flightno", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value"], "question": "Give the flight numbers of flights arriving in Aberdeen.", "question_toks": ["give", "flight", "number", "of", "flight", "arriving", "in", "aberdeen", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Give", "the", "flight", "numbers", "of", "flights", "arriving", "in", "Aberdeen", "."], "question_arg": [["give"], ["flight", "number"], ["of"], ["flight"], ["arriving"], ["in"], ["aberdeen"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["city"], ["NONE"]], "nltk_pos": [["give", "VB"], ["flight", "NN"], ["number", "NN"], ["of", "IN"], ["flight", "NN"], ["arriving", "VBG"], ["in", "IN"], ["aberdeen", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(2) Filter(2) A(0) C(5) T(1)"}, {"db_id": "flight_4", "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "elevation", "BETWEEN", "-50", "AND", "50"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "elevation", "between", "value", "and", "value"], "question": "Find the name of airports whose altitude is between -50 and 50.", "question_toks": ["find", "name", "of", "airport", "whose", "altitude", "is", "between", "-50", "and", "50", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 1, [0, [0, 15, false], null], -50.0, 50.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "name", "of", "airports", "whose", "altitude", "is", "between", "-50", "and", "50", "."], "question_arg": [["find"], ["name"], ["of"], ["airport"], ["whose"], ["altitude"], ["is"], ["between"], ["-50"], ["and"], ["50"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["agg"], ["NONE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["airport", "NN"], ["whose", "WP$"], ["altitude", "NN"], ["is", "VBZ"], ["between", "IN"], ["-50", "NNP"], ["and", "CC"], ["50", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(1) Filter(8) A(0) C(15) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";", "query_toks": ["SELECT", "state_name", "FROM", "city", "WHERE", "city_name", "=", "``", "springfield", "''", ";"], "query_toks_no_value": ["select", "state_name", "from", "city", "where", "city_name", "=", "value"], "question": "which state is springfield in", "question_toks": ["which", "state", "is", "springfield", "in"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"springfield\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "is", "springfield", "in"], "question_arg": [["which"], ["state"], ["is"], ["springfield"], ["in"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["is", "VBZ"], ["springfield", "VBN"], ["in", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "network_2", "query": "SELECT min(age) ,  job FROM Person GROUP BY job", "query_toks": ["SELECT", "min", "(", "age", ")", ",", "job", "FROM", "Person", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "min", "(", "age", ")", ",", "job", "from", "person", "group", "by", "job"], "question": "How old is the youngest person for each job?", "question_toks": ["how", "old", "is", "youngest", "person", "for", "each", "job", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["How", "old", "is", "the", "youngest", "person", "for", "each", "job", "?"], "question_arg": [["how"], ["old"], ["is"], ["youngest"], ["person"], ["for"], ["each"], ["job"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["old", "JJ"], ["is", "VBZ"], ["youngest", "JJS"], ["person", "NN"], ["for", "IN"], ["each", "DT"], ["job", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(2) C(2) T(0) A(0) C(5) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "california", "''", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "california", "''", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", "where", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")", ")", "and", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")"], "question": "what state that borders california is the largest", "question_toks": ["what", "state", "that", "border", "california", "is", "largest"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"california\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"california\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "that", "borders", "california", "is", "the", "largest"], "question_arg": [["what"], ["state"], ["that"], ["border"], ["california"], ["is"], ["largest"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["MOST"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["california", "NN"], ["is", "VBZ"], ["largest", "JJS"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(11) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(1) C(3) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city is the most frequent source airport?", "question_toks": ["which", "city", "is", "most", "frequent", "source", "airport", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Which", "city", "is", "the", "most", "frequent", "source", "airport", "?"], "question_arg": [["which"], ["city"], ["is"], ["most"], ["frequent"], ["source", "airport"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["city", "NN"], ["is", "VBZ"], ["most", "RBS"], ["frequent", "JJ"], ["source", "NN"], ["airport", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(5) T(1) Sup(0) A(3) C(0) T(2)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "=", "(", "select", "state_name", "from", "state", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "state", ")", ")"], "question": "what states border the most populous state", "question_toks": ["what", "state", "border", "most", "populous", "state"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "border", "the", "most", "populous", "state"], "question_arg": [["what"], ["state"], ["border"], ["most"], ["populous"], ["state"]], "question_arg_type": [["NONE"], ["table"], ["col"], ["MOST"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["border", "NN"], ["most", "RBS"], ["populous", "JJ"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(11) A(0) C(1) T(2) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(1) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", ")"], "question": "give me the longest river that passes through the us", "question_toks": ["give", "me", "longest", "river", "that", "pass", "through", "u"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["give", "me", "the", "longest", "river", "that", "passes", "through", "the", "us"], "question_arg": [["give"], ["me"], ["longest"], ["river"], ["that"], ["pass"], ["through"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["longest", "JJS"], ["river", "NN"], ["that", "WDT"], ["pass", "VBP"], ["through", "IN"], ["u", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(1) C(17) T(6)"}, {"db_id": "network_2", "query": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "person", ")"], "query_toks_no_value": ["select", "name", "from", "person", "where", "age", "=", "(", "select", "max", "(", "age", ")", "from", "person", ")"], "question": "Who is the oldest person?", "question_toks": ["who", "is", "oldest", "person", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Who", "is", "the", "oldest", "person", "?"], "question_arg": [["who"], ["is"], ["oldest"], ["person"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"]], "nltk_pos": [["who", "WP"], ["is", "VBZ"], ["oldest", "JJS"], ["person", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(1) C(2) T(0)"}, {"db_id": "flight_4", "query": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "city", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", "GROUP", "BY", "city", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "city", "from", "airports", "where", "country", "=", "value", "group", "by", "city", "order", "by", "count", "(", "*", ")", "desc"], "question": "How many airports are there per city in the United States? Order the cities by decreasing number of airports.", "question_toks": ["how", "many", "airport", "are", "there", "per", "city", "in", "united", "state", "?", "order", "city", "by", "decreasing", "number", "of", "airport", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [[0, 11, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["How", "many", "airports", "are", "there", "per", "city", "in", "the", "United", "States", "?", "Order", "the", "cities", "by", "decreasing", "number", "of", "airports", "."], "question_arg": [["how"], ["many"], ["airport"], ["are"], ["there"], ["per"], ["city"], ["in"], ["united"], ["state"], ["?"], ["order"], ["city"], ["by"], ["decreasing"], ["number"], ["of"], ["airport"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["airport", "NN"], ["are", "VBP"], ["there", "RB"], ["per", "IN"], ["city", "NN"], ["in", "IN"], ["united", "JJ"], ["state", "NN"], ["?", "."], ["order", "NN"], ["city", "NN"], ["by", "IN"], ["decreasing", "VBG"], ["number", "NN"], ["of", "IN"], ["airport", "NN"], [".", "."]], "rule_label": "Root1(3) Root(1) Sel(0) N(1) A(3) C(0) T(1) A(0) C(11) T(1) Filter(2) A(0) C(12) T(1) Order(0) A(3) C(0) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", ">", "750", "AND", "traverse", "=", "``", "illinois", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", ">", "value", "and", "traverse", "=", "value"], "question": "name the major rivers in illinois", "question_toks": ["name", "major", "river", "in", "illinois"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 3, [0, [0, 27, false], null], 750.0, null], "and", [false, 2, [0, [0, 29, false], null], "\"illinois\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["name", "the", "major", "rivers", "in", "illinois"], "question_arg": [["name"], ["major"], ["river"], ["in"], ["illinois"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["name", "NN"], ["major", "JJ"], ["river", "NN"], ["in", "IN"], ["illinois", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(0) Filter(5) A(0) C(17) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has the most frequent destination airport?", "question_toks": ["which", "city", "ha", "most", "frequent", "destination", "airport", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Which", "city", "has", "the", "most", "frequent", "destination", "airport", "?"], "question_arg": [["which"], ["city"], ["ha"], ["most"], ["frequent"], ["destination", "airport"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["city", "NN"], ["ha", "NN"], ["most", "RBS"], ["frequent", "JJ"], ["destination", "NN"], ["airport", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(5) T(1) Sup(0) A(3) C(0) T(2)"}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "HAVING", "count", "(", "*", ")", "<", "200"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "having", "count", "(", "*", ")", "<", "value"], "question": "Find all airlines that have fewer than 200 flights.", "question_toks": ["find", "all", "airline", "that", "have", "fewer", "than", "200", "flight", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 4, [0, [3, 0, false], null], 200.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Find", "all", "airlines", "that", "have", "fewer", "than", "200", "flights", "."], "question_arg": [["find"], ["all"], ["airline"], ["that"], ["have"], ["fewer"], ["than"], ["200"], ["flight"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["table"], ["NONE"]], "nltk_pos": [["find", "VB"], ["all", "DT"], ["airline", "NN"], ["that", "WDT"], ["have", "VBP"], ["fewer", "JJR"], ["than", "IN"], ["200", "CD"], ["flight", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(4) A(3) C(0) T(2)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where are some restaurants good for arabic food in mountain view ?", "question_toks": ["where", "are", "some", "restaurant", "good", "for", "arabic", "food", "in", "mountain", "view", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mountain view\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "are", "some", "restaurants", "good", "for", "arabic", "food", "in", "mountain", "view", "?"], "question_arg": [["where"], ["are"], ["some"], ["restaurant"], ["good"], ["for"], ["arabic"], ["food", "type"], ["in"], ["mountain"], ["view"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["are", "VBP"], ["some", "DT"], ["restaurant", "NN"], ["good", "JJ"], ["for", "IN"], ["arabic", "JJ"], ["food", "NN"], ["in", "IN"], ["mountain", "NN"], ["view", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "storm_record", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1", "query_toks": ["SELECT", "T2.region_name", "FROM", "affected_region", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "JOIN", "storm", "AS", "T3", "ON", "T1.storm_id", "=", "T3.storm_id", "ORDER", "BY", "T3.Number_Deaths", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "region_name", "from", "affected_region", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "join", "storm", "as", "t3", "on", "t1", ".", "storm_id", "=", "t3", ".", "storm_id", "order", "by", "t3", ".", "number_deaths", "desc", "limit", "value"], "question": "What are the names of regions that were affected by the storm in which the most people died?", "question_toks": ["what", "are", "name", "of", "region", "that", "were", "affected", "by", "storm", "in", "which", "most", "people", "died", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 6, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["What", "are", "the", "names", "of", "regions", "that", "were", "affected", "by", "the", "storm", "in", "which", "the", "most", "people", "died", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["region"], ["that"], ["were"], ["affected"], ["by"], ["storm"], ["in"], ["which"], ["most"], ["people"], ["died"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["region", "NN"], ["that", "WDT"], ["were", "VBD"], ["affected", "VBN"], ["by", "IN"], ["storm", "NN"], ["in", "IN"], ["which", "WDT"], ["most", "JJS"], ["people", "NNS"], ["died", "VBD"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(9) T(1) Sup(0) A(0) C(6) T(0)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "mississippi", "''", ")", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "river_name", "=", "value", ")"], "question": "what are the populations of the states through which the mississippi river runs", "question_toks": ["what", "are", "population", "of", "state", "through", "which", "mississippi", "river", "run"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"mississippi\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "populations", "of", "the", "states", "through", "which", "the", "mississippi", "river", "runs"], "question_arg": [["what"], ["are"], ["population"], ["of"], ["state"], ["through"], ["which"], ["mississippi"], ["river"], ["run"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["population", "NN"], ["of", "IN"], ["state", "NN"], ["through", "IN"], ["which", "WDT"], ["mississippi", "VBP"], ["river", "NN"], ["run", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "concert_singer", "query": "SELECT DISTINCT country FROM singer WHERE age  >  20", "query_toks": ["SELECT", "DISTINCT", "country", "FROM", "singer", "WHERE", "age", ">", "20"], "query_toks_no_value": ["select", "distinct", "country", "from", "singer", "where", "age", ">", "value"], "question": "What are  the different countries with singers above age 20?", "question_toks": ["what", "are", "different", "country", "with", "singer", "above", "age", "20", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 20.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["What", "are", "the", "different", "countries", "with", "singers", "above", "age", "20", "?"], "question_arg": [["what"], ["are"], ["different"], ["country"], ["with"], ["singer"], ["above"], ["age"], ["20"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["value"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["different", "JJ"], ["country", "NN"], ["with", "IN"], ["singer", "NN"], ["above", "IN"], ["age", "NN"], ["20", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(5) A(0) C(12) T(1)"}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "GROUP", "BY", "T1.stadium_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "group", "by", "t1", ".", "stadium_id"], "question": "For each stadium, how many concerts play there?", "question_toks": ["for", "each", "stadium", ",", "how", "many", "concert", "play", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 18, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["For", "each", "stadium", ",", "how", "many", "concerts", "play", "there", "?"], "question_arg": [["for"], ["each"], ["stadium"], [","], ["how"], ["many"], ["concert"], ["play"], ["there"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["for", "IN"], ["each", "DT"], ["stadium", "NN"], [",", ","], ["how", "WRB"], ["many", "JJ"], ["concert", "VBP"], ["play", "VB"], ["there", "RB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(3) T(0) A(3) C(0) T(2)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value"], "question": "give me some restaurants in alameda ?", "question_toks": ["give", "me", "some", "restaurant", "in", "alameda", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"alameda\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "some", "restaurants", "in", "alameda", "?"], "question_arg": [["give"], ["me"], ["some"], ["restaurant"], ["in"], ["alameda"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["some", "DT"], ["restaurant", "NN"], ["in", "IN"], ["alameda", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";", "query_toks": ["SELECT", "COUNT", "(", "river_name", ")", "FROM", "river", "WHERE", "traverse", "=", "``", "idaho", "''", ";"], "query_toks_no_value": ["select", "count", "(", "river_name", ")", "from", "river", "where", "traverse", "=", "value"], "question": "give me the number of rivers in idaho", "question_toks": ["give", "me", "number", "of", "river", "in", "idaho"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"idaho\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["give", "me", "the", "number", "of", "rivers", "in", "idaho"], "question_arg": [["give"], ["me"], ["number"], ["of"], ["river"], ["in"], ["idaho"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["number", "NN"], ["of", "IN"], ["river", "NN"], ["in", "IN"], ["idaho", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(16) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "soccer_2", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'", "query_toks": ["SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'mid", "'", "EXCEPT", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'goalie", "'"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", "except", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value"], "question": "What are the names of all the states with college students playing in the mid position but no goalies?", "question_toks": ["what", "are", "name", "of", "all", "state", "with", "college", "student", "playing", "in", "mid", "position", "but", "no", "goalie", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "names", "of", "all", "the", "states", "with", "college", "students", "playing", "in", "the", "mid", "position", "but", "no", "goalies", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["all"], ["state"], ["with"], ["college"], ["student"], ["playing"], ["in"], ["mid"], ["player", "position"], ["but"], ["no"], ["goalie"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["state", "NN"], ["with", "IN"], ["college", "NN"], ["student", "NN"], ["playing", "VBG"], ["in", "IN"], ["mid", "JJ"], ["position", "NN"], ["but", "CC"], ["no", "DT"], ["goalie", "NN"], ["?", "."]], "rule_label": "Root1(2) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(8) T(2) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(8) T(2)"}, {"db_id": "geo", "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );", "query_toks": ["SELECT", "state_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "t1.population", ")", "FROM", "state", "AS", "t2", "JOIN", "city", "AS", "t1", "ON", "t2.capital", "=", "t1.city_name", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "t1", ".", "population", ")", "from", "state", "as", "t2", "join", "city", "as", "t1", "on", "t2", ".", "capital", "=", "t1", ".", "city_name", ")"], "question": "which state 's capital city is the largest", "question_toks": ["which", "state", "'s", "capital", "city", "is", "largest"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 7, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "'s", "capital", "city", "is", "the", "largest"], "question_arg": [["which"], ["state"], ["'s"], ["capital"], ["city"], ["is"], ["largest"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["col"], ["table"], ["NONE"], ["MOST"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["'s", "POS"], ["capital", "NN"], ["city", "NN"], ["is", "VBZ"], ["largest", "JJS"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "flight_1", "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"", "query_toks": ["SELECT", "origin", "FROM", "Flight", "WHERE", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "origin", "from", "flight", "where", "destination", "=", "value"], "question": "Show origins of all flights with destination Honolulu.", "question_toks": ["show", "origin", "of", "all", "flight", "with", "destination", "honolulu", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Honolulu\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "origins", "of", "all", "flights", "with", "destination", "Honolulu", "."], "question_arg": [["show"], ["origin"], ["of"], ["all"], ["flight"], ["with"], ["destination"], ["honolulu"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["origin", "NN"], ["of", "IN"], ["all", "DT"], ["flight", "NN"], ["with", "IN"], ["destination", "NN"], ["honolulu", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";", "query_toks": ["SELECT", "lowest_point", "FROM", "highlow", "WHERE", "state_name", "=", "``", "iowa", "''", ";"], "query_toks_no_value": ["select", "lowest_point", "from", "highlow", "where", "state_name", "=", "value"], "question": "where is the lowest point in iowa", "question_toks": ["where", "is", "lowest", "point", "in", "iowa"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"iowa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["where", "is", "the", "lowest", "point", "in", "iowa"], "question_arg": [["where"], ["is"], ["lowest", "point"], ["in"], ["iowa"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["lowest", "JJS"], ["point", "NN"], ["in", "IN"], ["iowa", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "geo", "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";", "query_toks": ["SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "ohio", "''", ";"], "query_toks_no_value": ["select", "traverse", "from", "river", "where", "river_name", "=", "value"], "question": "which states does the ohio run through", "question_toks": ["which", "state", "doe", "ohio", "run", "through"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"ohio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "states", "does", "the", "ohio", "run", "through"], "question_arg": [["which"], ["state"], ["doe"], ["ohio"], ["run"], ["through"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["doe", "NN"], ["ohio", "NN"], ["run", "VBP"], ["through", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good restaurant in the yosemite and mono lake area for french food ?", "question_toks": ["where", "is", "a", "good", "restaurant", "in", "yosemite", "and", "mono", "lake", "area", "for", "french", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"yosemite and mono lake area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "is", "a", "good", "restaurant", "in", "the", "yosemite", "and", "mono", "lake", "area", "for", "french", "food", "?"], "question_arg": [["where"], ["is"], ["a"], ["good"], ["restaurant"], ["in"], ["yosemite"], ["and"], ["mono"], ["lake"], ["area"], ["for"], ["french"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["a", "DT"], ["good", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["yosemite", "NN"], ["and", "CC"], ["mono", "JJ"], ["lake", "NN"], ["area", "NN"], ["for", "IN"], ["french", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;", "query_toks": ["SELECT", "river_name", "FROM", "river", "GROUP", "BY", "(", "river_name", ")", "ORDER", "BY", "COUNT", "(", "DISTINCT", "traverse", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "group", "by", "(", "river_name", ")", "order", "by", "count", "(", "distinct", "traverse", ")", "desc", "limit", "value"], "question": "what river flows through the most states", "question_toks": ["what", "river", "flow", "through", "most", "state"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": ["desc", [[0, [3, 29, true], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "river", "flows", "through", "the", "most", "states"], "question_arg": [["what"], ["river"], ["flow"], ["through"], ["most"], ["state"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["what", "WP"], ["river", "NN"], ["flow", "VBP"], ["through", "IN"], ["most", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(16) T(6) Sup(0) A(3) C(18) T(6)"}, {"db_id": "storm_record", "query": "SELECT count(DISTINCT region_id) FROM affected_region", "query_toks": ["SELECT", "count", "(", "DISTINCT", "region_id", ")", "FROM", "affected_region"], "query_toks_no_value": ["select", "count", "(", "distinct", "region_id", ")", "from", "affected_region"], "question": "Count the number of different affected regions.", "question_toks": ["count", "number", "of", "different", "affected", "region", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["Count", "the", "number", "of", "different", "affected", "regions", "."], "question_arg": [["count"], ["number", "death"], ["of"], ["different"], ["affected", "region"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["count", "NN"], ["number", "NN"], ["of", "IN"], ["different", "JJ"], ["affected", "JJ"], ["region", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(7) T(2)"}, {"db_id": "geo", "query": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";", "query_toks": ["SELECT", "COUNT", "(", "traverse", ")", "FROM", "river", "WHERE", "river_name", "=", "``", "missouri", "''", ";"], "query_toks_no_value": ["select", "count", "(", "traverse", ")", "from", "river", "where", "river_name", "=", "value"], "question": "how many states does the missouri river flow through", "question_toks": ["how", "many", "state", "doe", "missouri", "river", "flow", "through"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"missouri\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "does", "the", "missouri", "river", "flow", "through"], "question_arg": [["how"], ["many"], ["state"], ["doe"], ["missouri"], ["river"], ["flow"], ["through"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["doe", "NNS"], ["missouri", "VBP"], ["river", "NN"], ["flow", "NN"], ["through", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "flight_4", "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'", "query_toks": ["SELECT", "count", "(", "DISTINCT", "city", ")", "FROM", "airports", "WHERE", "country", "=", "'Greenland", "'"], "query_toks_no_value": ["select", "count", "(", "distinct", "city", ")", "from", "airports", "where", "country", "=", "value"], "question": "In how many cities are there airports in the country of Greenland?", "question_toks": ["in", "how", "many", "city", "are", "there", "airport", "in", "country", "of", "greenland", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 11, true], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Greenland\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["In", "how", "many", "cities", "are", "there", "airports", "in", "the", "country", "of", "Greenland", "?"], "question_arg": [["in"], ["how"], ["many"], ["city"], ["are"], ["there"], ["airport"], ["in"], ["country"], ["of"], ["greenland"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["country"], ["NONE"]], "nltk_pos": [["in", "IN"], ["how", "WRB"], ["many", "JJ"], ["city", "NN"], ["are", "VBP"], ["there", "RB"], ["airport", "RB"], ["in", "IN"], ["country", "NN"], ["of", "IN"], ["greenland", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(11) T(1) Filter(2) A(0) C(12) T(1)"}, {"db_id": "singer", "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Singer_ID", "NOT", "IN", "(", "SELECT", "Singer_ID", "FROM", "song", ")"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")"], "question": "List the name of singers that do not have any song.", "question_toks": ["list", "name", "of", "singer", "that", "do", "not", "have", "any", "song", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["List", "the", "name", "of", "singers", "that", "do", "not", "have", "any", "song", "."], "question_arg": [["list"], ["name"], ["of"], ["singer"], ["that"], ["do"], ["not"], ["have"], ["any"], ["song"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["list", "NN"], ["name", "NN"], ["of", "IN"], ["singer", "NN"], ["that", "WDT"], ["do", "VBP"], ["not", "RB"], ["have", "VB"], ["any", "DT"], ["song", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(19) A(0) C(1) T(0) Root(5) Sel(0) N(0) A(0) C(1) T(1)"}, {"db_id": "flight_1", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2", "query_toks": ["SELECT", "T2.name", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "GROUP", "BY", "T1.aid", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "group", "by", "t1", ".", "aid", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names for all aircrafts with at least 2 flights?", "question_toks": ["what", "are", "name", "for", "all", "aircraft", "with", "at", "least", "2", "flight", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "are", "the", "names", "for", "all", "aircrafts", "with", "at", "least", "2", "flights", "?"], "question_arg": [["what"], ["are"], ["name"], ["for"], ["all"], ["aircraft"], ["with"], ["at"], ["least"], ["2"], ["flight"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["value"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "JJ"], ["for", "IN"], ["all", "DT"], ["aircraft", "NN"], ["with", "IN"], ["at", "IN"], ["least", "JJS"], ["2", "CD"], ["flight", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(7) A(3) C(0) T(0)"}, {"db_id": "flight_1", "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"", "query_toks": ["SELECT", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''"], "query_toks_no_value": ["select", "avg", "(", "distance", ")", ",", "avg", "(", "price", ")", "from", "flight", "where", "origin", "=", "value"], "question": "What is the average distance and average price for flights from Los Angeles.", "question_toks": ["what", "is", "average", "distance", "and", "average", "price", "for", "flight", "from", "los", "angeles", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 4, false], null]], [5, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "average", "distance", "and", "average", "price", "for", "flights", "from", "Los", "Angeles", "."], "question_arg": [["what"], ["is"], ["average"], ["distance"], ["and"], ["average"], ["price"], ["for"], ["flight"], ["from"], ["los"], ["angeles"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["agg"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["distance", "NN"], ["and", "CC"], ["average", "JJ"], ["price", "NN"], ["for", "IN"], ["flight", "NN"], ["from", "IN"], ["los", "JJ"], ["angeles", "NNS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(5) C(4) T(0) A(5) C(7) T(0) Filter(2) A(0) C(2) T(0)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "where", "country", "=", "value"], "question": "How many airlines are from USA?", "question_toks": ["how", "many", "airline", "are", "from", "usa", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["How", "many", "airlines", "are", "from", "USA", "?"], "question_arg": [["how"], ["many"], ["airline"], ["are"], ["from"], ["usa"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["country"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["airline", "NN"], ["are", "VBP"], ["from", "IN"], ["usa", "JJ"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(2) A(0) C(4) T(0)"}, {"db_id": "soccer_2", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)", "query_toks": ["SELECT", "count", "(", "DISTINCT", "state", ")", "FROM", "college", "WHERE", "enr", ">", "(", "SELECT", "avg", "(", "enr", ")", "FROM", "college", ")"], "query_toks_no_value": ["select", "count", "(", "distinct", "state", ")", "from", "college", "where", "enr", ">", "(", "select", "avg", "(", "enr", ")", "from", "college", ")"], "question": "What is the number of states that has some college whose enrollment is larger than the average enrollment?", "question_toks": ["what", "is", "number", "of", "state", "that", "ha", "some", "college", "whose", "enrollment", "is", "larger", "than", "average", "enrollment", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "is", "the", "number", "of", "states", "that", "has", "some", "college", "whose", "enrollment", "is", "larger", "than", "the", "average", "enrollment", "?"], "question_arg": [["what"], ["is"], ["number"], ["of"], ["state"], ["that"], ["ha"], ["some"], ["college"], ["whose"], ["enrollment"], ["is"], ["larger"], ["than"], ["average"], ["enrollment"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["MORE"], ["NONE"], ["agg"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["number", "NN"], ["of", "IN"], ["state", "NN"], ["that", "WDT"], ["ha", "VBD"], ["some", "DT"], ["college", "NN"], ["whose", "WP$"], ["enrollment", "NN"], ["is", "VBZ"], ["larger", "JJR"], ["than", "IN"], ["average", "JJ"], ["enrollment", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(2) T(0) Filter(13) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(5) C(3) T(0)"}, {"db_id": "flight_2", "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "Airline", ",", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value"], "question": "What are the airline names and abbreviations for airlines in the USA?", "question_toks": ["what", "are", "airline", "name", "and", "abbreviation", "for", "airline", "in", "usa", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["What", "are", "the", "airline", "names", "and", "abbreviations", "for", "airlines", "in", "the", "USA", "?"], "question_arg": [["what"], ["are"], ["airline", "name"], ["and"], ["abbreviation"], ["for"], ["airline"], ["in"], ["usa"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["country"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["airline", "NN"], ["name", "NN"], ["and", "CC"], ["abbreviation", "NN"], ["for", "IN"], ["airline", "NN"], ["in", "IN"], ["usa", "JJ"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(2) T(0) A(0) C(3) T(0) Filter(2) A(0) C(4) T(0)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", "WHERE", "traverse", "=", "``", "texas", "''", ")", "AND", "traverse", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", "where", "traverse", "=", "value", ")", "and", "traverse", "=", "value"], "question": "what is the longest river that flows through texas", "question_toks": ["what", "is", "longest", "river", "that", "flow", "through", "texas"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 29, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "longest", "river", "that", "flows", "through", "texas"], "question_arg": [["what"], ["is"], ["longest"], ["river"], ["that"], ["flow"], ["through"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["longest", "JJS"], ["river", "NN"], ["that", "WDT"], ["flow", "VBP"], ["through", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(0) Filter(11) A(0) C(17) T(6) Root(3) Sel(0) N(0) A(1) C(17) T(6) Filter(2) A(0) C(18) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "network_2", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'", "query_toks": ["SELECT", "T2.friend", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T2.name", "=", "'Alice", "'", "AND", "T1.gender", "=", "'female", "'"], "query_toks_no_value": ["select", "t2", ".", "friend", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t2", ".", "name", "=", "value", "and", "t1", ".", "gender", "=", "value"], "question": "What are all the friends of Alice who are female?", "question_toks": ["what", "are", "all", "friend", "of", "alice", "who", "are", "female", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["What", "are", "all", "the", "friends", "of", "Alice", "who", "are", "female", "?"], "question_arg": [["what"], ["are"], ["all"], ["friend"], ["of"], ["alice"], ["who"], ["are"], ["female"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["all", "DT"], ["friend", "NN"], ["of", "IN"], ["alice", "NN"], ["who", "WP"], ["are", "VBP"], ["female", "JJ"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(1) Filter(0) Filter(2) A(0) C(1) T(1) Filter(2) A(0) C(4) T(0)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MIN", "(", "LENGTH", ")", "FROM", "river", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "min", "(", "length", ")", "from", "river", ")"], "question": "what is the shortest river in the us", "question_toks": ["what", "is", "shortest", "river", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[2, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "shortest", "river", "in", "the", "us"], "question_arg": [["what"], ["is"], ["shortest"], ["river"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["shortest", "JJ"], ["river", "NN"], ["in", "IN"], ["u", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(2) C(17) T(6)"}, {"db_id": "pilot_record", "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)", "query_toks": ["SELECT", "Pilot_name", "FROM", "pilot", "WHERE", "Pilot_ID", "NOT", "IN", "(", "SELECT", "Pilot_ID", "FROM", "pilot_record", ")"], "query_toks_no_value": ["select", "pilot_name", "from", "pilot", "where", "pilot_id", "not", "in", "(", "select", "pilot_id", "from", "pilot_record", ")"], "question": "List the names of pilots that do not have any record.", "question_toks": ["list", "name", "of", "pilot", "that", "do", "not", "have", "any", "record", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[true, 8, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "pilot id", "aircraft id", "date"], "table_names": ["aircraft", "pilot", "pilot record"], "col_set": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "date"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"18": 1, "1": 1, "17": 17, "8": 8}, "origin_question_toks": ["List", "the", "names", "of", "pilots", "that", "do", "not", "have", "any", "record", "."], "question_arg": [["list"], ["pilot", "name"], ["of"], ["pilot"], ["that"], ["do"], ["not"], ["have"], ["any"], ["record", "id"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["list", "NN"], ["name", "NN"], ["of", "IN"], ["pilot", "NN"], ["that", "WDT"], ["do", "VBP"], ["not", "RB"], ["have", "VB"], ["any", "DT"], ["record", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(19) A(0) C(8) T(1) Root(5) Sel(0) N(0) A(0) C(8) T(2)"}, {"db_id": "theme_gallery", "query": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200", "query_toks": ["SELECT", "T3.name", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "JOIN", "artist", "AS", "T3", "ON", "T3.artist_id", "=", "T2.artist_id", "GROUP", "BY", "T3.artist_id", "HAVING", "avg", "(", "T1.attendance", ")", ">", "200"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "join", "artist", "as", "t3", "on", "t3", ".", "artist_id", "=", "t2", ".", "artist_id", "group", "by", "t3", ".", "artist_id", "having", "avg", "(", "t1", ".", "attendance", ")", ">", "value"], "question": "Show all artist names with an average exhibition attendance over 200.", "question_toks": ["show", "all", "artist", "name", "with", "an", "average", "exhibition", "attendance", "over", "200", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 3, [0, [5, 13, false], null], 200.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Show", "all", "artist", "names", "with", "an", "average", "exhibition", "attendance", "over", "200", "."], "question_arg": [["show"], ["all"], ["artist"], ["name"], ["with"], ["an"], ["average"], ["exhibition"], ["attendance"], ["over"], ["200"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["agg"], ["table"], ["col"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["show", "NN"], ["all", "DT"], ["artist", "NN"], ["name", "NN"], ["with", "IN"], ["an", "DT"], ["average", "JJ"], ["exhibition", "NN"], ["attendance", "NN"], ["over", "IN"], ["200", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(5) A(5) C(11) T(2)"}, {"db_id": "soccer_2", "query": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'", "query_toks": ["SELECT", "cName", "FROM", "tryout", "WHERE", "decision", "=", "'yes", "'", "AND", "pPos", "=", "'goalie", "'"], "query_toks_no_value": ["select", "cname", "from", "tryout", "where", "decision", "=", "value", "and", "ppos", "=", "value"], "question": "What college has a student who successfully made the team in the role of a goalie?", "question_toks": ["what", "college", "ha", "a", "student", "who", "successfully", "made", "team", "in", "role", "of", "a", "goalie", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "college", "has", "a", "student", "who", "successfully", "made", "the", "team", "in", "the", "role", "of", "a", "goalie", "?"], "question_arg": [["what"], ["college"], ["ha"], ["a"], ["student"], ["who"], ["successfully"], ["made"], ["team"], ["in"], ["role"], ["of"], ["a"], ["goalie"], ["?"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["college", "NN"], ["ha", "VBD"], ["a", "DT"], ["student", "NN"], ["who", "WP"], ["successfully", "RB"], ["made", "VBD"], ["team", "NN"], ["in", "IN"], ["role", "NN"], ["of", "IN"], ["a", "DT"], ["goalie", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(9) T(2) Filter(2) A(0) C(8) T(2)"}, {"db_id": "geo", "query": "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"texas\";", "query_toks": ["SELECT", "COUNT", "(", "city_name", ")", "FROM", "city", "WHERE", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "count", "(", "city_name", ")", "from", "city", "where", "state_name", "=", "value"], "question": "how many cities does texas have", "question_toks": ["how", "many", "city", "doe", "texas", "have"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "cities", "does", "texas", "have"], "question_arg": [["how"], ["many"], ["city"], ["doe"], ["texas"], ["have"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["city", "NN"], ["doe", "VBP"], ["texas", "NNS"], ["have", "VBP"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(7) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", ">", "750", "AND", "traverse", "=", "``", "illinois", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", ">", "value", "and", "traverse", "=", "value"], "question": "what major rivers run through illinois", "question_toks": ["what", "major", "river", "run", "through", "illinois"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 3, [0, [0, 27, false], null], 750.0, null], "and", [false, 2, [0, [0, 29, false], null], "\"illinois\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "major", "rivers", "run", "through", "illinois"], "question_arg": [["what"], ["major"], ["river"], ["run"], ["through"], ["illinois"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["major", "JJ"], ["river", "NN"], ["run", "VBP"], ["through", "IN"], ["illinois", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(0) Filter(5) A(0) C(17) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "geo", "query": "SELECT t2.lowest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );", "query_toks": ["SELECT", "t2.lowest_point", "FROM", "state", "AS", "t1", "JOIN", "highlow", "AS", "t2", "ON", "t1.state_name", "=", "t2.state_name", "WHERE", "t1.state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "lowest_point", "from", "state", "as", "t1", "join", "highlow", "as", "t2", "on", "t1", ".", "state_name", "=", "t2", ".", "state_name", "where", "t1", ".", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")", ")"], "question": "what is the lowest point of the state with the largest area", "question_toks": ["what", "is", "lowest", "point", "of", "state", "with", "largest", "area"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "lowest", "point", "of", "the", "state", "with", "the", "largest", "area"], "question_arg": [["what"], ["is"], ["lowest", "point"], ["of"], ["state"], ["with"], ["largest"], ["area"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["lowest", "JJS"], ["point", "NN"], ["of", "IN"], ["state", "NN"], ["with", "IN"], ["largest", "JJS"], ["area", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(3) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE capital  =  \"salem\";", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "capital", "=", "``", "salem", "''", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "capital", "=", "value"], "question": "what state is salem the capital of", "question_toks": ["what", "state", "is", "salem", "capital", "of"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"salem\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "is", "salem", "the", "capital", "of"], "question_arg": [["what"], ["state"], ["is"], ["salem"], ["capital"], ["of"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["is", "VBZ"], ["salem", "JJ"], ["capital", "NN"], ["of", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(5) T(0)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", ")"], "question": "whats the largest city", "question_toks": ["whats", "largest", "city"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["whats", "the", "largest", "city"], "question_arg": [["whats"], ["largest"], ["city"]], "question_arg_type": [["NONE"], ["MOST"], ["table"]], "nltk_pos": [["whats", "NNS"], ["largest", "JJS"], ["city", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "icfp_1", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\"", "query_toks": ["SELECT", "DISTINCT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "University", "of", "Oxford", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Find the first names and last names of the authors whose institution affiliation is \"University of Oxford\".", "question_toks": ["find", "first", "name", "and", "last", "name", "of", "author", "whose", "institution", "affiliation", "is", "'", "university", "of", "oxford", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"University of Oxford\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Find", "the", "first", "names", "and", "last", "names", "of", "the", "authors", "whose", "institution", "affiliation", "is", "``", "University", "of", "Oxford", "''", "."], "question_arg": [["find"], ["first", "name"], ["and"], ["last", "name"], ["of"], ["author"], ["whose"], ["institution"], ["affiliation"], ["is"], ["'"], ["university"], ["of"], ["oxford"], ["'"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["first", "JJ"], ["name", "NN"], ["and", "CC"], ["last", "JJ"], ["name", "NN"], ["of", "IN"], ["author", "NN"], ["whose", "WP$"], ["institution", "NN"], ["affiliation", "NN"], ["is", "VBZ"], ["'", "POS"], ["university", "NN"], ["of", "IN"], ["oxford", "NN"], ["'", "POS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(6) T(1) A(0) C(5) T(1) Filter(2) A(0) C(2) T(0)"}, {"db_id": "network_2", "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'", "query_toks": ["SELECT", "T2.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.city", "=", "'new", "york", "city", "'"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "city", "=", "value"], "question": "Who has a friend that is from new york city?", "question_toks": ["who", "ha", "a", "friend", "that", "is", "from", "new", "york", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"new york city\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Who", "has", "a", "friend", "that", "is", "from", "new", "york", "city", "?"], "question_arg": [["who"], ["ha"], ["a"], ["friend"], ["that"], ["is"], ["from"], ["new"], ["york"], ["city"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["who", "WP"], ["ha", "VBD"], ["a", "DT"], ["friend", "NN"], ["that", "WDT"], ["is", "VBZ"], ["from", "IN"], ["new", "JJ"], ["york", "NN"], ["city", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(1) Filter(2) A(0) C(3) T(0)"}, {"db_id": "flight_1", "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)", "query_toks": ["SELECT", "name", "FROM", "Employee", "WHERE", "salary", ">", "(", "SELECT", "avg", "(", "salary", ")", "FROM", "Employee", ")"], "query_toks_no_value": ["select", "name", "from", "employee", "where", "salary", ">", "(", "select", "avg", "(", "salary", ")", "from", "employee", ")"], "question": "Show names for all employees with salary more than the average.", "question_toks": ["show", "name", "for", "all", "employee", "with", "salary", "more", "than", "average", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[5, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "names", "for", "all", "employees", "with", "salary", "more", "than", "the", "average", "."], "question_arg": [["show"], ["name"], ["for"], ["all"], ["employee"], ["with"], ["salary"], ["more"], ["than"], ["average"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["MORE"], ["NONE"], ["agg"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["for", "IN"], ["all", "DT"], ["employee", "NN"], ["with", "IN"], ["salary", "NN"], ["more", "JJR"], ["than", "IN"], ["average", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(2) Filter(13) A(0) C(11) T(2) Root(5) Sel(0) N(0) A(5) C(11) T(2)"}, {"db_id": "geo", "query": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );", "query_toks": ["SELECT", "highest_point", "FROM", "highlow", "WHERE", "highest_elevation", "=", "(", "SELECT", "MAX", "(", "highest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "highest_point", "from", "highlow", "where", "highest_elevation", "=", "(", "select", "max", "(", "highest_elevation", ")", "from", "highlow", ")"], "question": "what is the highest point in the us", "question_toks": ["what", "is", "highest", "point", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "highest", "point", "in", "the", "us"], "question_arg": [["what"], ["is"], ["highest", "point"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["u", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(3) Filter(11) A(0) C(9) T(3) Root(5) Sel(0) N(0) A(1) C(9) T(3)"}, {"db_id": "icfp_1", "query": "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Atsushi\" AND t1.lname  =  \"Ohori\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t1.fname", "=", "``", "Atsushi", "''", "AND", "t1.lname", "=", "``", "Ohori", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "How many papers have \"Atsushi Ohori\" published?", "question_toks": ["how", "many", "paper", "have", "'", "atsushi", "ohori", "'", "published", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Atsushi\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Ohori\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["How", "many", "papers", "have", "``", "Atsushi", "Ohori", "''", "published", "?"], "question_arg": [["how"], ["many"], ["paper"], ["have"], ["'"], ["atsushi"], ["ohori"], ["'"], ["published"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["paper", "NN"], ["have", "VBP"], ["'", "VBN"], ["atsushi", "JJ"], ["ohori", "NNS"], ["'", "POS"], ["published", "VBN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(0) Filter(2) A(0) C(6) T(1) Filter(2) A(0) C(5) T(1)"}, {"db_id": "icfp_1", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "query_toks": ["SELECT", "DISTINCT", "t1.fname", ",", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Google", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "fname", ",", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Which authors belong to the institution \"Google\"? Show the first names and last names.", "question_toks": ["which", "author", "belong", "to", "institution", "'", "google", "'", "?", "show", "first", "name", "and", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 6, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Google\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Which", "authors", "belong", "to", "the", "institution", "``", "Google", "''", "?", "Show", "the", "first", "names", "and", "last", "names", "."], "question_arg": [["which"], ["author"], ["belong"], ["to"], ["institution"], ["'"], ["google"], ["'"], ["?"], ["show"], ["first", "name"], ["and"], ["last", "name"], ["."]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["author", "NN"], ["belong", "NN"], ["to", "TO"], ["institution", "NN"], ["'", "''"], ["google", "NN"], ["'", "''"], ["?", "."], ["show", "VBP"], ["first", "JJ"], ["name", "NN"], ["and", "CC"], ["last", "JJ"], ["name", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(6) T(1) A(0) C(5) T(1) Filter(2) A(0) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";", "query_toks": ["SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "ohio", "''", ";"], "query_toks_no_value": ["select", "traverse", "from", "river", "where", "river_name", "=", "value"], "question": "which states does the ohio river pass through", "question_toks": ["which", "state", "doe", "ohio", "river", "pas", "through"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"ohio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "states", "does", "the", "ohio", "river", "pass", "through"], "question_arg": [["which"], ["state"], ["doe"], ["ohio"], ["river"], ["pas"], ["through"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["doe", "NN"], ["ohio", "NN"], ["river", "NN"], ["pas", "NN"], ["through", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) ) ) AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", ")", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", ")", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", "where", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", ")", ")", ")", "and", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", ")", ")"], "question": "what is the smallest state through which the longest river runs", "question_toks": ["what", "is", "smallest", "state", "through", "which", "longest", "river", "run"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "smallest", "state", "through", "which", "the", "longest", "river", "runs"], "question_arg": [["what"], ["is"], ["smallest"], ["state"], ["through"], ["which"], ["longest"], ["river"], ["run"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["smallest", "JJ"], ["state", "NN"], ["through", "IN"], ["which", "WDT"], ["longest", "JJS"], ["river", "NN"], ["run", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(11) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(2) C(3) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(1) C(17) T(6) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(1) C(17) T(6)"}, {"db_id": "geo", "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";", "query_toks": ["SELECT", "capital", "FROM", "state", "WHERE", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "capital", "from", "state", "where", "state_name", "=", "value"], "question": "what are the capital city in texas", "question_toks": ["what", "are", "capital", "city", "in", "texas"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "capital", "city", "in", "texas"], "question_arg": [["what"], ["are"], ["capital"], ["city"], ["in"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["capital", "JJ"], ["city", "NN"], ["in", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "flight_1", "query": "SELECT destination ,  count(*) FROM Flight GROUP BY destination", "query_toks": ["SELECT", "destination", ",", "count", "(", "*", ")", "FROM", "Flight", "GROUP", "BY", "destination"], "query_toks_no_value": ["select", "destination", ",", "count", "(", "*", ")", "from", "flight", "group", "by", "destination"], "question": "Show all destinations and the number of flights to each destination.", "question_toks": ["show", "all", "destination", "and", "number", "of", "flight", "to", "each", "destination", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "all", "destinations", "and", "the", "number", "of", "flights", "to", "each", "destination", "."], "question_arg": [["show"], ["all"], ["destination"], ["and"], ["flight", "number"], ["of"], ["flight"], ["to"], ["each"], ["destination"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["show", "NN"], ["all", "DT"], ["destination", "NN"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["flight", "NN"], ["to", "TO"], ["each", "DT"], ["destination", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(3) T(0) A(3) C(0) T(0)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE state_name  =  \"california\";", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "state_name", "=", "``", "california", "''", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "state_name", "=", "value"], "question": "how many citizens live in california", "question_toks": ["how", "many", "citizen", "live", "in", "california"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"california\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "citizens", "live", "in", "california"], "question_arg": [["how"], ["many"], ["citizen"], ["live"], ["in"], ["california"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["citizen", "VBP"], ["live", "JJ"], ["in", "IN"], ["california", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "flight_2", "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"", "query_toks": ["SELECT", "Airline", ",", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Country", "=", "``", "USA", "''"], "query_toks_no_value": ["select", "airline", ",", "abbreviation", "from", "airlines", "where", "country", "=", "value"], "question": "List all airline names and their abbreviations in \"USA\".", "question_toks": ["list", "all", "airline", "name", "and", "their", "abbreviation", "in", "'", "usa", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"USA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["List", "all", "airline", "names", "and", "their", "abbreviations", "in", "``", "USA", "''", "."], "question_arg": [["list"], ["all"], ["airline", "name"], ["and"], ["their"], ["abbreviation"], ["in"], ["'"], ["usa"], ["'"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["country"], ["NONE"], ["NONE"]], "nltk_pos": [["list", "NN"], ["all", "DT"], ["airline", "NN"], ["name", "NN"], ["and", "CC"], ["their", "PRP$"], ["abbreviation", "NN"], ["in", "IN"], ["'", "''"], ["usa", "JJ"], ["'", "POS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(2) T(0) A(0) C(3) T(0) Filter(2) A(0) C(4) T(0)"}, {"db_id": "geo", "query": "SELECT t2.highest_elevation FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MAX ( area ) FROM state );", "query_toks": ["SELECT", "t2.highest_elevation", "FROM", "highlow", "AS", "t2", "JOIN", "state", "AS", "t1", "ON", "t1.state_name", "=", "t2.state_name", "WHERE", "t1.area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "highest_elevation", "from", "highlow", "as", "t2", "join", "state", "as", "t1", "on", "t1", ".", "state_name", "=", "t2", ".", "state_name", "where", "t1", ".", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")"], "question": "how high is the highest point in the largest state", "question_toks": ["how", "high", "is", "highest", "point", "in", "largest", "state"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "high", "is", "the", "highest", "point", "in", "the", "largest", "state"], "question_arg": [["how"], ["high"], ["is"], ["highest", "point"], ["in"], ["largest"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["how", "WRB"], ["high", "JJ"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["largest", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(3) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );", "query_toks": ["SELECT", "lowest_point", "FROM", "highlow", "WHERE", "lowest_elevation", "=", "(", "SELECT", "MIN", "(", "lowest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "lowest_point", "from", "highlow", "where", "lowest_elevation", "=", "(", "select", "min", "(", "lowest_elevation", ")", "from", "highlow", ")"], "question": "what is the lowest point of the us", "question_toks": ["what", "is", "lowest", "point", "of", "u"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "lowest", "point", "of", "the", "us"], "question_arg": [["what"], ["is"], ["lowest", "point"], ["of"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["lowest", "JJS"], ["point", "NN"], ["of", "IN"], ["u", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(3) Filter(11) A(0) C(12) T(3) Root(5) Sel(0) N(0) A(2) C(12) T(3)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "city_name", "=", "``", "boulder", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "city_name", "=", "value"], "question": "number of citizens in boulder", "question_toks": ["number", "of", "citizen", "in", "boulder"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"boulder\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["number", "of", "citizens", "in", "boulder"], "question_arg": [["number"], ["of"], ["citizen"], ["in"], ["boulder"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["number", "NN"], ["of", "IN"], ["citizen", "NN"], ["in", "IN"], ["boulder", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "rio", "grande", "''", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "rio", "grande", "''", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", "where", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "river_name", "=", "value", ")", ")", "and", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "river_name", "=", "value", ")"], "question": "what is the largest state traversed by the rio grande river", "question_toks": ["what", "is", "largest", "state", "traversed", "by", "rio", "grande", "river"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"rio grande\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"rio grande\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "largest", "state", "traversed", "by", "the", "rio", "grande", "river"], "question_arg": [["what"], ["is"], ["largest"], ["state"], ["traversed"], ["by"], ["rio"], ["grande"], ["river"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["largest", "JJS"], ["state", "NN"], ["traversed", "VBN"], ["by", "IN"], ["rio", "NN"], ["grande", "NN"], ["river", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(11) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(1) C(3) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "geo", "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";", "query_toks": ["SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "ohio", "''", ";"], "query_toks_no_value": ["select", "traverse", "from", "river", "where", "river_name", "=", "value"], "question": "which state has the ohio river", "question_toks": ["which", "state", "ha", "ohio", "river"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"ohio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "ohio", "river"], "question_arg": [["which"], ["state"], ["ha"], ["ohio"], ["river"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["ohio", "NN"], ["river", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "theme_gallery", "query": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join", "query_toks": ["SELECT", "name", ",", "age", ",", "country", "FROM", "artist", "ORDER", "BY", "Year_Join"], "query_toks_no_value": ["select", "name", ",", "age", ",", "country", "from", "artist", "order", "by", "year_join"], "question": "Show all artist name, age, and country ordered by the yeared they joined.", "question_toks": ["show", "all", "artist", "name", ",", "age", ",", "and", "country", "ordered", "by", "yeared", "they", "joined", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Show", "all", "artist", "name", ",", "age", ",", "and", "country", "ordered", "by", "the", "yeared", "they", "joined", "."], "question_arg": [["show"], ["all"], ["artist"], ["name"], [","], ["age"], [","], ["and"], ["country"], ["ordered"], ["by"], ["yeared"], ["they"], ["joined"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["all", "DT"], ["artist", "NN"], ["name", "NN"], [",", ","], ["age", "NN"], [",", ","], ["and", "CC"], ["country", "NN"], ["ordered", "VBN"], ["by", "IN"], ["yeared", "JJ"], ["they", "PRP"], ["joined", "VBD"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(2) A(0) C(2) T(0) A(0) C(5) T(0) A(0) C(3) T(0) Order(1) A(0) C(4) T(0)"}, {"db_id": "flight_1", "query": "SELECT count(*) FROM Employee", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Employee"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "employee"], "question": "How many employees do we have?", "question_toks": ["how", "many", "employee", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["How", "many", "employees", "do", "we", "have", "?"], "question_arg": [["how"], ["many"], ["employee"], ["do"], ["we"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["employee", "NN"], ["do", "VBP"], ["we", "PRP"], ["have", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(2)"}, {"db_id": "flight_1", "query": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "GROUP", "BY", "T1.aid"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "group", "by", "t1", ".", "aid"], "question": "Show aircraft names and number of flights for each aircraft.", "question_toks": ["show", "aircraft", "name", "and", "number", "of", "flight", "for", "each", "aircraft", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "aircraft", "names", "and", "number", "of", "flights", "for", "each", "aircraft", "."], "question_arg": [["show"], ["aircraft"], ["name"], ["and"], ["flight", "number"], ["of"], ["flight"], ["for"], ["each"], ["aircraft"], ["."]], "question_arg_type": [["NONE"], ["table"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["aircraft", "NN"], ["name", "NN"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["flight", "NN"], ["for", "IN"], ["each", "DT"], ["aircraft", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(9) T(1) A(3) C(0) T(0)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MIN", "(", "population", ")", "FROM", "city", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "min", "(", "population", ")", "from", "city", ")"], "question": "what is the smallest city in the usa", "question_toks": ["what", "is", "smallest", "city", "in", "usa"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "smallest", "city", "in", "the", "usa"], "question_arg": [["what"], ["is"], ["smallest"], ["city"], ["in"], ["usa"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["smallest", "JJS"], ["city", "NN"], ["in", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(2) C(2) T(1)"}, {"db_id": "network_2", "query": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "gender", "FROM", "Person", "WHERE", "age", "<", "40", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "gender", "from", "person", "where", "age", "<", "value", "group", "by", "gender"], "question": "How many people are under 40 for each gender?", "question_toks": ["how", "many", "people", "are", "under", "40", "for", "each", "gender", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 4, [0, [0, 2, false], null], 40.0, null]], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["How", "many", "people", "are", "under", "40", "for", "each", "gender", "?"], "question_arg": [["how"], ["many"], ["people"], ["are"], ["under"], ["40"], ["for"], ["each"], ["gender"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["people", "NNS"], ["are", "VBP"], ["under", "IN"], ["40", "CD"], ["for", "IN"], ["each", "DT"], ["gender", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(3) C(0) T(0) A(0) C(4) T(0) Filter(4) A(0) C(2) T(0)"}, {"db_id": "flight_2", "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"", "query_toks": ["SELECT", "Airline", "FROM", "AIRLINES", "WHERE", "Abbreviation", "=", "``", "UAL", "''"], "query_toks_no_value": ["select", "airline", "from", "airlines", "where", "abbreviation", "=", "value"], "question": "Which airline has abbreviation 'UAL'?", "question_toks": ["which", "airline", "ha", "abbreviation", "'", "ual", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"UAL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Which", "airline", "has", "abbreviation", "'UAL", "'", "?"], "question_arg": [["which"], ["airline"], ["ha"], ["abbreviation"], ["'"], ["ual"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["airline", "NN"], ["ha", "NN"], ["abbreviation", "NN"], ["'", "POS"], ["ual", "JJ"], ["'", "POS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(3) T(0)"}, {"db_id": "theme_gallery", "query": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T1.attendance", ">", "100", "OR", "T2.ticket_price", "<", "10"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t1", ".", "attendance", ">", "value", "or", "t2", ".", "ticket_price", "<", "value"], "question": "Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10.", "question_toks": ["count", "number", "of", "exhibition", "that", "have", "had", "an", "attendnance", "of", "over", "100", "or", "a", "ticket", "price", "under", "10", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 100.0, null], "or", [false, 4, [0, [0, 10, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Count", "the", "number", "of", "exhibitions", "that", "have", "had", "an", "attendnance", "of", "over", "100", "or", "a", "ticket", "prices", "under", "10", "."], "question_arg": [["count"], ["number"], ["of"], ["exhibition"], ["that"], ["have"], ["had"], ["an"], ["attendnance"], ["of"], ["over"], ["100"], ["or"], ["a"], ["ticket", "price"], ["under"], ["10"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["count", "NN"], ["number", "NN"], ["of", "IN"], ["exhibition", "NN"], ["that", "WDT"], ["have", "VBP"], ["had", "VBD"], ["an", "DT"], ["attendnance", "NN"], ["of", "IN"], ["over", "IN"], ["100", "CD"], ["or", "CC"], ["a", "DT"], ["ticket", "JJ"], ["price", "NN"], ["under", "IN"], ["10", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(1) Filter(5) A(0) C(11) T(2) Filter(4) A(0) C(9) T(1)"}, {"db_id": "theme_gallery", "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)", "query_toks": ["SELECT", "name", "FROM", "artist", "WHERE", "artist_id", "NOT", "IN", "(", "SELECT", "artist_id", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "name", "from", "artist", "where", "artist_id", "not", "in", "(", "select", "artist_id", "from", "exhibition", ")"], "question": "What are the names of artists that have not had any exhibitions?", "question_toks": ["what", "are", "name", "of", "artist", "that", "have", "not", "had", "any", "exhibition", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["What", "are", "the", "names", "of", "artists", "that", "have", "not", "had", "any", "exhibitions", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["artist"], ["that"], ["have"], ["not"], ["had"], ["any"], ["exhibition"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["artist", "NN"], ["that", "WDT"], ["have", "VBP"], ["not", "RB"], ["had", "VBN"], ["any", "DT"], ["exhibition", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(19) A(0) C(1) T(0) Root(5) Sel(0) N(0) A(0) C(1) T(1)"}, {"db_id": "flight_1", "query": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Employee", "WHERE", "salary", "BETWEEN", "100000", "AND", "200000"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "employee", "where", "salary", "between", "value", "and", "value"], "question": "How many employees have salary between 100000 and 200000?", "question_toks": ["how", "many", "employee", "have", "salary", "between", "100000", "and", "200000", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 1, [0, [0, 14, false], null], 100000.0, 200000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["How", "many", "employees", "have", "salary", "between", "100000", "and", "200000", "?"], "question_arg": [["how"], ["many"], ["employee"], ["have"], ["salary"], ["between"], ["100000"], ["and"], ["200000"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["agg"], ["value"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["employee", "NN"], ["have", "VBP"], ["salary", "VBN"], ["between", "IN"], ["100000", "CD"], ["and", "CC"], ["200000", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(8) A(0) C(11) T(2)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "state", ")"], "question": "what state has the highest population", "question_toks": ["what", "state", "ha", "highest", "population"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "has", "the", "highest", "population"], "question_arg": [["what"], ["state"], ["ha"], ["highest"], ["population"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["ha", "NN"], ["highest", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(1) C(2) T(0)"}, {"db_id": "flight_1", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5", "query_toks": ["SELECT", "T2.name", "FROM", "Certificate", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T2.aid", "=", "T1.aid", "WHERE", "T2.distance", ">", "5000", "GROUP", "BY", "T1.aid", "ORDER", "BY", "count", "(", "*", ")", ">", "=", "5"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "certificate", "as", "t1", "join", "aircraft", "as", "t2", "on", "t2", ".", "aid", "=", "t1", ".", "aid", "where", "t2", ".", "distance", ">", "value", "group", "by", "t1", ".", "aid", "order", "by", "count", "(", "*", ")", ">", "=", "value"], "question": "Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate.", "question_toks": ["show", "name", "and", "distance", "of", "aircraft", "with", "more", "than", "5000", "distance", "and", "which", "at", "least", "5", "people", "have", "it", "certificate", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 5000.0, null]], "groupBy": [[0, 16, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "the", "name", "and", "distance", "of", "the", "aircrafts", "with", "more", "than", "5000", "distance", "and", "which", "at", "least", "5", "people", "have", "its", "certificate", "."], "question_arg": [["show"], ["name"], ["and"], ["distance"], ["of"], ["aircraft"], ["with"], ["more"], ["than"], ["5000"], ["distance"], ["and"], ["which"], ["at"], ["least"], ["5"], ["people"], ["have"], ["it"], ["certificate"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["value"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["and", "CC"], ["distance", "NN"], ["of", "IN"], ["aircraft", "NN"], ["with", "IN"], ["more", "JJR"], ["than", "IN"], ["5000", "CD"], ["distance", "NN"], ["and", "CC"], ["which", "WDT"], ["at", "IN"], ["least", "JJS"], ["5", "CD"], ["people", "NNS"], ["have", "VBP"], ["it", "PRP"], ["certificate", "NN"], [".", "."]], "rule_label": "Root1(3) Root(1) Sel(0) N(0) A(0) C(9) T(1) Filter(5) A(0) C(4) T(1) Order(1) A(3) C(0) T(3)"}, {"db_id": "pilot_record", "query": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC", "query_toks": ["SELECT", "Pilot_name", "FROM", "pilot", "ORDER", "BY", "Rank", "ASC"], "query_toks_no_value": ["select", "pilot_name", "from", "pilot", "order", "by", "rank", "asc"], "question": "List the names of pilots in ascending order of rank.", "question_toks": ["list", "name", "of", "pilot", "in", "ascending", "order", "of", "rank", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "pilot id", "aircraft id", "date"], "table_names": ["aircraft", "pilot", "pilot record"], "col_set": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "date"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"18": 1, "1": 1, "17": 17, "8": 8}, "origin_question_toks": ["List", "the", "names", "of", "pilots", "in", "ascending", "order", "of", "rank", "."], "question_arg": [["list"], ["pilot", "name"], ["of"], ["pilot"], ["in"], ["ascending"], ["order", "year"], ["of"], ["rank"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["list", "NN"], ["name", "NN"], ["of", "IN"], ["pilot", "NN"], ["in", "IN"], ["ascending", "VBG"], ["order", "NN"], ["of", "IN"], ["rank", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(0) A(0) C(9) T(1) Order(1) A(0) C(10) T(1)"}, {"db_id": "icfp_1", "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "t1.title", ")", "FROM", "papers", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Tokohu", "University", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "title", ")", "from", "papers", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Find the number of papers published by authors from the institution \"Tokohu University\".", "question_toks": ["find", "number", "of", "paper", "published", "by", "author", "from", "institution", "'", "tokohu", "university", "'", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 8, true], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Tokohu University\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Find", "the", "number", "of", "papers", "published", "by", "authors", "from", "the", "institution", "``", "Tokohu", "University", "''", "."], "question_arg": [["find"], ["number"], ["of"], ["paper"], ["published"], ["by"], ["author"], ["from"], ["institution"], ["'"], ["tokohu"], ["university"], ["'"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["number", "NN"], ["of", "IN"], ["paper", "NN"], ["published", "VBN"], ["by", "IN"], ["author", "NN"], ["from", "IN"], ["institution", "NN"], ["'", "POS"], ["tokohu", "NN"], ["university", "NN"], ["'", "POS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(8) T(2) Filter(2) A(0) C(2) T(0)"}, {"db_id": "theme_gallery", "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "FROM", "artist", "WHERE", "country", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", "from", "artist", "where", "country", "=", "value"], "question": "What is the average and minimum age of all artists from United States.", "question_toks": ["what", "is", "average", "and", "minimum", "age", "of", "all", "artist", "from", "united", "state", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]], [2, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["What", "is", "the", "average", "and", "minimum", "age", "of", "all", "artists", "from", "United", "States", "."], "question_arg": [["what"], ["is"], ["average"], ["and"], ["minimum"], ["age"], ["of"], ["all"], ["artist"], ["from"], ["united"], ["state"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["and", "CC"], ["minimum", "JJ"], ["age", "NN"], ["of", "IN"], ["all", "DT"], ["artist", "NN"], ["from", "IN"], ["united", "JJ"], ["state", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(5) C(5) T(0) A(2) C(5) T(0) Filter(2) A(0) C(3) T(0)"}, {"db_id": "soccer_2", "query": "SELECT avg(enr) FROM College WHERE state  =  'FL'", "query_toks": ["SELECT", "avg", "(", "enr", ")", "FROM", "College", "WHERE", "state", "=", "'FL", "'"], "query_toks_no_value": ["select", "avg", "(", "enr", ")", "from", "college", "where", "state", "=", "value"], "question": "What is average number of students enrolled in Florida colleges?", "question_toks": ["what", "is", "average", "number", "of", "student", "enrolled", "in", "florida", "college", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"FL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "is", "average", "number", "of", "students", "enrolled", "in", "Florida", "colleges", "?"], "question_arg": [["what"], ["is"], ["average"], ["number"], ["of"], ["student"], ["enrolled"], ["in"], ["florida"], ["college"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["state"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["number", "NN"], ["of", "IN"], ["student", "NN"], ["enrolled", "VBN"], ["in", "IN"], ["florida", "NN"], ["college", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(5) C(3) T(0) Filter(2) A(0) C(2) T(0)"}, {"db_id": "soccer_2", "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"", "query_toks": ["SELECT", "cName", ",", "enr", "FROM", "College", "WHERE", "enr", ">", "10000", "AND", "state", "=", "``", "LA", "''"], "query_toks_no_value": ["select", "cname", ",", "enr", "from", "college", "where", "enr", ">", "value", "and", "state", "=", "value"], "question": "What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?", "question_toks": ["what", "are", "name", "and", "enrollment", "number", "for", "college", "that", "have", "more", "than", "10000", "enrolled", "and", "are", "located", "in", "louisiana", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 10000.0, null], "and", [false, 2, [0, [0, 2, false], null], "\"LA\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "names", "and", "enrollment", "numbers", "for", "colleges", "that", "have", "more", "than", "10000", "enrolled", "and", "are", "located", "in", "Louisiana", "?"], "question_arg": [["what"], ["are"], ["name"], ["and"], ["enrollment"], ["number"], ["for"], ["college"], ["that"], ["have"], ["more"], ["than"], ["10000"], ["enrolled"], ["and"], ["are"], ["located"], ["in"], ["louisiana"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["state"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "JJ"], ["and", "CC"], ["enrollment", "JJ"], ["number", "NN"], ["for", "IN"], ["college", "NN"], ["that", "WDT"], ["have", "VBP"], ["more", "JJR"], ["than", "IN"], ["10000", "CD"], ["enrolled", "JJ"], ["and", "CC"], ["are", "VBP"], ["located", "VBN"], ["in", "IN"], ["louisiana", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(1) T(0) A(0) C(3) T(0) Filter(0) Filter(5) A(0) C(3) T(0) Filter(2) A(0) C(2) T(0)"}, {"db_id": "storm_record", "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1", "query_toks": ["SELECT", "name", ",", "dates_active", ",", "number_deaths", "FROM", "storm", "WHERE", "number_deaths", ">", "=", "1"], "query_toks_no_value": ["select", "name", ",", "dates_active", ",", "number_deaths", "from", "storm", "where", "number_deaths", ">", "=", "value"], "question": "What are the names, dates active, and number of deaths for storms that had 1 or more death?", "question_toks": ["what", "are", "name", ",", "date", "active", ",", "and", "number", "of", "death", "for", "storm", "that", "had", "1", "or", "more", "death", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 5, [0, [0, 6, false], null], 1.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["What", "are", "the", "names", ",", "dates", "active", ",", "and", "number", "of", "deaths", "for", "storms", "that", "had", "1", "or", "more", "death", "?"], "question_arg": [["what"], ["are"], ["name"], [","], ["date", "active"], [","], ["and"], ["number", "death"], ["of"], ["number", "death"], ["for"], ["storm"], ["that"], ["had"], ["1"], ["or"], ["more"], ["number", "death"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["value"], ["NONE"], ["MORE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "JJ"], [",", ","], ["date", "NN"], ["active", "JJ"], [",", ","], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["death", "NN"], ["for", "IN"], ["storm", "NN"], ["that", "WDT"], ["had", "VBD"], ["1", "CD"], ["or", "CC"], ["more", "JJR"], ["death", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(2) A(0) C(2) T(0) A(0) C(3) T(0) A(0) C(6) T(0) Filter(7) A(0) C(6) T(0)"}, {"db_id": "geo", "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";", "query_toks": ["SELECT", "area", "FROM", "state", "WHERE", "state_name", "=", "``", "new", "mexico", "''", ";"], "query_toks_no_value": ["select", "area", "from", "state", "where", "state_name", "=", "value"], "question": "what is the area of the new mexico state", "question_toks": ["what", "is", "area", "of", "new", "mexico", "state"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"new mexico\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "area", "of", "the", "new", "mexico", "state"], "question_arg": [["what"], ["is"], ["area"], ["of"], ["new"], ["mexico"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["area", "NN"], ["of", "IN"], ["new", "JJ"], ["mexico", "NN"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(3) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good restaurants in alameda ?", "question_toks": ["what", "are", "some", "good", "restaurant", "in", "alameda", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"alameda\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["what", "are", "some", "good", "restaurants", "in", "alameda", "?"], "question_arg": [["what"], ["are"], ["some"], ["good"], ["restaurant"], ["in"], ["alameda"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["some", "DT"], ["good", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["alameda", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(5) A(0) C(7) T(1)"}, {"db_id": "soccer_2", "query": "SELECT avg(enr) FROM College", "query_toks": ["SELECT", "avg", "(", "enr", ")", "FROM", "College"], "query_toks_no_value": ["select", "avg", "(", "enr", ")", "from", "college"], "question": "How many students, on average, does each college have enrolled?", "question_toks": ["how", "many", "student", ",", "on", "average", ",", "doe", "each", "college", "have", "enrolled", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["How", "many", "students", ",", "on", "average", ",", "does", "each", "college", "have", "enrolled", "?"], "question_arg": [["how"], ["many"], ["student"], [","], ["on"], ["average"], [","], ["doe"], ["each"], ["college"], ["have"], ["enrolled"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["agg"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["student", "NN"], [",", ","], ["on", "IN"], ["average", "NN"], [",", ","], ["doe", "JJ"], ["each", "DT"], ["college", "NN"], ["have", "VBP"], ["enrolled", "VBN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(5) C(3) T(0)"}, {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "palo", "alto", "''", "AND", "t1.food_type", "=", "``", "french", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "how many places for french food are there in palo alto ?", "question_toks": ["how", "many", "place", "for", "french", "food", "are", "there", "in", "palo", "alto", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"palo alto\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["how", "many", "places", "for", "french", "food", "are", "there", "in", "palo", "alto", "?"], "question_arg": [["how"], ["many"], ["place"], ["for"], ["french"], ["food", "type"], ["are"], ["there"], ["in"], ["palo"], ["alto"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["place", "NN"], ["for", "IN"], ["french", "JJ"], ["food", "NN"], ["are", "VBP"], ["there", "RB"], ["in", "IN"], ["palo", "NN"], ["alto", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.name", "=", "``", "jamerican", "cuisine", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "name", "=", "value"], "question": "where is jamerican cuisine in san francisco ?", "question_toks": ["where", "is", "jamerican", "cuisine", "in", "san", "francisco", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"jamerican cuisine\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "is", "jamerican", "cuisine", "in", "san", "francisco", "?"], "question_arg": [["where"], ["is"], ["jamerican"], ["cuisine"], ["in"], ["san"], ["francisco"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["jamerican", "JJ"], ["cuisine", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(2) A(0) C(5) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE country_name != \"usa\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "country_name", "!", "=", "``", "usa", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "country_name", "!", "=", "value"], "question": "which rivers do not run through usa", "question_toks": ["which", "river", "do", "not", "run", "through", "usa"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 7, [0, [0, 28, false], null], "\"usa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "rivers", "do", "not", "run", "through", "usa"], "question_arg": [["which"], ["river"], ["do"], ["not"], ["run"], ["through"], ["usa"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["river", "NN"], ["do", "VBP"], ["not", "RB"], ["run", "VB"], ["through", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(3) A(0) C(4) T(6)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRPORTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRPORTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports"], "question": "How many airports do we have?", "question_toks": ["how", "many", "airport", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["How", "many", "airports", "do", "we", "have", "?"], "question_arg": [["how"], ["many"], ["airport"], ["do"], ["we"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["airport", "RB"], ["do", "VBP"], ["we", "PRP"], ["have", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(1)"}, {"db_id": "network_2", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'", "query_toks": ["SELECT", "T2.friend", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T2.name", "=", "'Alice", "'", "AND", "T1.gender", "=", "'female", "'"], "query_toks_no_value": ["select", "t2", ".", "friend", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t2", ".", "name", "=", "value", "and", "t1", ".", "gender", "=", "value"], "question": "Find the female friends of Alice.", "question_toks": ["find", "female", "friend", "of", "alice", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Find", "the", "female", "friends", "of", "Alice", "."], "question_arg": [["find"], ["female"], ["friend"], ["of"], ["alice"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["female", "JJ"], ["friend", "NN"], ["of", "IN"], ["alice", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(1) Filter(0) Filter(2) A(0) C(1) T(1) Filter(2) A(0) C(4) T(0)"}, {"db_id": "geo", "query": "SELECT capital FROM state WHERE state_name  =  \"texas\";", "query_toks": ["SELECT", "capital", "FROM", "state", "WHERE", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "capital", "from", "state", "where", "state_name", "=", "value"], "question": "what is capital of texas", "question_toks": ["what", "is", "capital", "of", "texas"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "capital", "of", "texas"], "question_arg": [["what"], ["is"], ["capital"], ["of"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["capital", "NN"], ["of", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "theme_gallery", "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "artist", "WHERE", "age", ">", "46", "AND", "year_join", ">", "1990"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "artist", "where", "age", ">", "value", "and", "year_join", ">", "value"], "question": "Count the number of artists who are older than 46 and joined after 1990.", "question_toks": ["count", "number", "of", "artist", "who", "are", "older", "than", "46", "and", "joined", "after", "year", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 5, false], null], 46.0, null], "and", [false, 3, [0, [0, 4, false], null], 1990.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Count", "the", "number", "of", "artists", "who", "are", "older", "than", "46", "and", "joined", "after", "1990", "."], "question_arg": [["count"], ["number"], ["of"], ["artist"], ["who"], ["are"], ["older"], ["than"], ["46"], ["and"], ["joined"], ["after"], ["year"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["count", "NN"], ["number", "NN"], ["of", "IN"], ["artist", "NN"], ["who", "WP"], ["are", "VBP"], ["older", "JJR"], ["than", "IN"], ["46", "CD"], ["and", "CC"], ["joined", "VBD"], ["after", "IN"], ["1990", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(0) Filter(5) A(0) C(5) T(0) Filter(5) A(0) C(4) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")"], "question": "what is the largest state in usa", "question_toks": ["what", "is", "largest", "state", "in", "usa"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "largest", "state", "in", "usa"], "question_arg": [["what"], ["is"], ["largest"], ["state"], ["in"], ["usa"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["largest", "JJS"], ["state", "NN"], ["in", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );", "query_toks": ["SELECT", "capital", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "capital", "from", "state", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "state", ")"], "question": "what is the capital of the state with the most inhabitants", "question_toks": ["what", "is", "capital", "of", "state", "with", "most", "inhabitant"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "capital", "of", "the", "state", "with", "the", "most", "inhabitants"], "question_arg": [["what"], ["is"], ["capital"], ["of"], ["state"], ["with"], ["most"], ["inhabitant"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["capital", "NN"], ["of", "IN"], ["state", "NN"], ["with", "IN"], ["most", "RBS"], ["inhabitant", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(1) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );", "query_toks": ["SELECT", "state_name", "FROM", "highlow", "WHERE", "lowest_elevation", "=", "(", "SELECT", "MIN", "(", "lowest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "highlow", "where", "lowest_elevation", "=", "(", "select", "min", "(", "lowest_elevation", ")", "from", "highlow", ")"], "question": "which state has the lowest elevation", "question_toks": ["which", "state", "ha", "lowest", "elevation"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "lowest", "elevation"], "question_arg": [["which"], ["state"], ["ha"], ["lowest", "elevation"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["col"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["lowest", "JJS"], ["elevation", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(11) A(0) C(12) T(3) Root(5) Sel(0) N(0) A(2) C(12) T(3)"}, {"db_id": "soccer_2", "query": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC", "query_toks": ["SELECT", "pName", "FROM", "Player", "WHERE", "yCard", "=", "'yes", "'", "ORDER", "BY", "HS", "DESC"], "query_toks_no_value": ["select", "pname", "from", "player", "where", "ycard", "=", "value", "order", "by", "hs", "desc"], "question": "What are the name of the players who received a card in descending order of the hours of training?", "question_toks": ["what", "are", "name", "of", "player", "who", "received", "a", "card", "in", "descending", "order", "of", "hour", "of", "training", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "name", "of", "the", "players", "who", "received", "a", "card", "in", "descending", "order", "of", "the", "hours", "of", "training", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["player"], ["who"], ["received"], ["a"], ["yes", "card"], ["in"], ["descending"], ["order"], ["of"], ["training", "hour"], ["of"], ["training", "hour"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["player", "NN"], ["who", "WP"], ["received", "VBD"], ["a", "DT"], ["card", "NN"], ["in", "IN"], ["descending", "VBG"], ["order", "NN"], ["of", "IN"], ["hour", "NN"], ["of", "IN"], ["training", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(1) Sel(0) N(0) A(0) C(5) T(1) Filter(2) A(0) C(6) T(1) Order(0) A(0) C(7) T(1)"}, {"db_id": "pilot_record", "query": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank", "query_toks": ["SELECT", "T3.Pilot_name", ",", "T2.Fleet_Series", "FROM", "pilot_record", "AS", "T1", "JOIN", "aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "pilot", "AS", "T3", "ON", "T1.Pilot_ID", "=", "T3.Pilot_ID", "ORDER", "BY", "T3.Rank"], "query_toks_no_value": ["select", "t3", ".", "pilot_name", ",", "t2", ".", "fleet_series", "from", "pilot_record", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "pilot", "as", "t3", "on", "t1", ".", "pilot_id", "=", "t3", ".", "pilot_id", "order", "by", "t3", ".", "rank"], "question": "Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot.", "question_toks": ["show", "name", "of", "pilot", "and", "fleet", "series", "of", "aircraft", "they", "have", "flied", "with", "in", "ascending", "order", "of", "rank", "of", "pilot", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "pilot id", "aircraft id", "date"], "table_names": ["aircraft", "pilot", "pilot record"], "col_set": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "date"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"18": 1, "1": 1, "17": 17, "8": 8}, "origin_question_toks": ["Show", "the", "names", "of", "pilots", "and", "fleet", "series", "of", "the", "aircrafts", "they", "have", "flied", "with", "in", "ascending", "order", "of", "the", "rank", "of", "the", "pilot", "."], "question_arg": [["show"], ["pilot", "name"], ["of"], ["pilot"], ["and"], ["fleet", "series"], ["of"], ["aircraft"], ["they"], ["have"], ["flied"], ["with"], ["in"], ["ascending"], ["order", "year"], ["of"], ["rank"], ["of"], ["pilot"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["of", "IN"], ["pilot", "NN"], ["and", "CC"], ["fleet", "JJ"], ["series", "NN"], ["of", "IN"], ["aircraft", "NN"], ["they", "PRP"], ["have", "VBP"], ["flied", "VBN"], ["with", "IN"], ["in", "IN"], ["ascending", "VBG"], ["order", "NN"], ["of", "IN"], ["rank", "NN"], ["of", "IN"], ["pilot", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(1) A(0) C(9) T(1) A(0) C(5) T(0) Order(1) A(0) C(10) T(1)"}, {"db_id": "geo", "query": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );", "query_toks": ["SELECT", "lowest_point", "FROM", "highlow", "WHERE", "lowest_elevation", "=", "(", "SELECT", "MIN", "(", "lowest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "lowest_point", "from", "highlow", "where", "lowest_elevation", "=", "(", "select", "min", "(", "lowest_elevation", ")", "from", "highlow", ")"], "question": "what is the lowest point in the united states", "question_toks": ["what", "is", "lowest", "point", "in", "united", "state"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "lowest", "point", "in", "the", "united", "states"], "question_arg": [["what"], ["is"], ["lowest", "point"], ["in"], ["united"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["lowest", "JJS"], ["point", "NN"], ["in", "IN"], ["united", "JJ"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(3) Filter(11) A(0) C(12) T(3) Root(5) Sel(0) N(0) A(2) C(12) T(3)"}, {"db_id": "theme_gallery", "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'", "query_toks": ["SELECT", "name", ",", "year_join", "FROM", "artist", "WHERE", "country", "!", "=", "'United", "States", "'"], "query_toks_no_value": ["select", "name", ",", "year_join", "from", "artist", "where", "country", "!", "=", "value"], "question": "Show all artist names and the year joined who are not from United States.", "question_toks": ["show", "all", "artist", "name", "and", "year", "joined", "who", "are", "not", "from", "united", "state", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 7, [0, [0, 3, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Show", "all", "artist", "names", "and", "the", "year", "joined", "who", "are", "not", "from", "United", "States", "."], "question_arg": [["show"], ["all"], ["artist"], ["name"], ["and"], ["year"], ["joined"], ["who"], ["are"], ["not"], ["from"], ["united"], ["state"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["all", "DT"], ["artist", "NN"], ["name", "NN"], ["and", "CC"], ["year", "NN"], ["joined", "VBN"], ["who", "WP"], ["are", "VBP"], ["not", "RB"], ["from", "IN"], ["united", "JJ"], ["state", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(2) T(0) A(0) C(4) T(0) Filter(3) A(0) C(3) T(0)"}, {"db_id": "flight_4", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "WHERE", "T1.country", "=", "'China", "'", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "where", "t1", ".", "country", "=", "value", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the airport that is the destination of the most number of routes that start in China?", "question_toks": ["what", "is", "name", "of", "airport", "that", "is", "destination", "of", "most", "number", "of", "route", "that", "start", "in", "china", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"China\"", null]], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "airport", "that", "is", "the", "destination", "of", "the", "most", "number", "of", "routes", "that", "start", "in", "China", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["airport"], ["that"], ["is"], ["destination", "airport"], ["of"], ["most"], ["number"], ["of"], ["route"], ["that"], ["start"], ["in"], ["china"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["name"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["airport", "NN"], ["that", "WDT"], ["is", "VBZ"], ["destination", "NN"], ["of", "IN"], ["most", "JJS"], ["number", "NN"], ["of", "IN"], ["route", "NN"], ["that", "WDT"], ["start", "VBP"], ["in", "IN"], ["china", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(0) Sel(0) N(0) A(0) C(10) T(1) Sup(0) A(3) C(0) T(0) Filter(2) A(0) C(12) T(1)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good place on buchanan in san francisco for arabic food ?", "question_toks": ["where", "is", "a", "good", "place", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"buchanan\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "is", "a", "good", "place", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "question_arg": [["where"], ["is"], ["a"], ["good"], ["place"], ["on"], ["buchanan"], ["in"], ["san"], ["francisco"], ["for"], ["arabic"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["a", "DT"], ["good", "JJ"], ["place", "NN"], ["on", "IN"], ["buchanan", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["for", "IN"], ["arabic", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(10) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "geo", "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";", "query_toks": ["SELECT", "highest_point", "FROM", "highlow", "WHERE", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "highest_point", "from", "highlow", "where", "state_name", "=", "value"], "question": "what is the high point of texas", "question_toks": ["what", "is", "high", "point", "of", "texas"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "high", "point", "of", "texas"], "question_arg": [["what"], ["is"], ["high"], ["point"], ["of"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["high", "JJ"], ["point", "NN"], ["of", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "network_2", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'", "query_toks": ["SELECT", "T2.friend", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T1.name", "=", "'Bob", "'"], "query_toks_no_value": ["select", "t2", ".", "friend", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t1", ".", "name", "=", "value"], "question": "Who are Bob's friends?", "question_toks": ["who", "are", "bob", "'s", "friend", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"Bob\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Who", "are", "Bob", "'s", "friends", "?"], "question_arg": [["who"], ["are"], ["bob"], ["'s"], ["friend"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["who", "WP"], ["are", "VBP"], ["bob", "VBN"], ["'s", "POS"], ["friend", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(1) Filter(2) A(0) C(1) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "Where is the best restaurant in san francisco for french food ?", "question_toks": ["where", "is", "best", "restaurant", "in", "san", "francisco", "for", "french", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["Where", "is", "the", "best", "restaurant", "in", "san", "francisco", "for", "french", "food", "?"], "question_arg": [["where"], ["is"], ["best"], ["restaurant"], ["in"], ["san"], ["francisco"], ["for"], ["french"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["best", "RBS"], ["restaurant", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["for", "IN"], ["french", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(1) C(7) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "soccer_2", "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500", "query_toks": ["SELECT", "pName", ",", "HS", "FROM", "Player", "WHERE", "HS", "<", "1500"], "query_toks_no_value": ["select", "pname", ",", "hs", "from", "player", "where", "hs", "<", "value"], "question": "What are the names and number of hours spent training for each player who trains for less than 1500 hours?", "question_toks": ["what", "are", "name", "and", "number", "of", "hour", "spent", "training", "for", "each", "player", "who", "train", "for", "le", "than", "1500", "hour", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 7, false], null]]]], "where": [[false, 4, [0, [0, 7, false], null], 1500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "names", "and", "number", "of", "hours", "spent", "training", "for", "each", "player", "who", "trains", "for", "less", "than", "1500", "hours", "?"], "question_arg": [["what"], ["are"], ["name"], ["and"], ["number"], ["of"], ["training", "hour"], ["spent"], ["training", "hour"], ["for"], ["each"], ["player"], ["who"], ["train"], ["for"], ["le"], ["than"], ["1500"], ["training", "hour"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "JJ"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["hour", "NN"], ["spent", "NN"], ["training", "NN"], ["for", "IN"], ["each", "DT"], ["player", "NN"], ["who", "WP"], ["train", "VBP"], ["for", "IN"], ["le", "JJR"], ["than", "IN"], ["1500", "CD"], ["hour", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(5) T(1) A(0) C(7) T(1) Filter(4) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "city_name", "=", "``", "boulder", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "city_name", "=", "value"], "question": "how many people lived in boulder", "question_toks": ["how", "many", "people", "lived", "in", "boulder"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"boulder\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "people", "lived", "in", "boulder"], "question_arg": [["how"], ["many"], ["people"], ["lived"], ["in"], ["boulder"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["people", "NNS"], ["lived", "VBD"], ["in", "IN"], ["boulder", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "kentucky", "''", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "=", "value"], "question": "what states neighbor kentucky", "question_toks": ["what", "state", "neighbor", "kentucky"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"kentucky\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "neighbor", "kentucky"], "question_arg": [["what"], ["state"], ["neighbor"], ["kentucky"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["neighbor", "NN"], ["kentucky", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good arabic restaurant in mountain view ?", "question_toks": ["give", "me", "a", "good", "arabic", "restaurant", "in", "mountain", "view", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mountain view\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "a", "good", "arabic", "restaurant", "in", "mountain", "view", "?"], "question_arg": [["give"], ["me"], ["a"], ["good"], ["arabic"], ["restaurant"], ["in"], ["mountain"], ["view"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["a", "DT"], ["good", "JJ"], ["arabic", "NN"], ["restaurant", "NN"], ["in", "IN"], ["mountain", "NN"], ["view", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );", "query_toks": ["SELECT", "t2.highest_point", "FROM", "state", "AS", "t1", "JOIN", "highlow", "AS", "t2", "ON", "t1.state_name", "=", "t2.state_name", "WHERE", "t1.state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MIN", "(", "population", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "highest_point", "from", "state", "as", "t1", "join", "highlow", "as", "t2", "on", "t1", ".", "state_name", "=", "t2", ".", "state_name", "where", "t1", ".", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "population", "=", "(", "select", "min", "(", "population", ")", "from", "state", ")", ")"], "question": "what is the highest point in the state with the smallest population", "question_toks": ["what", "is", "highest", "point", "in", "state", "with", "smallest", "population"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "highest", "point", "in", "the", "state", "with", "the", "smallest", "population"], "question_arg": [["what"], ["is"], ["highest", "point"], ["in"], ["state"], ["with"], ["smallest"], ["population"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["state", "NN"], ["with", "IN"], ["smallest", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(3) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(2) C(2) T(0)"}, {"db_id": "theme_gallery", "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)", "query_toks": ["SELECT", "name", "FROM", "artist", "WHERE", "artist_id", "NOT", "IN", "(", "SELECT", "artist_id", "FROM", "exhibition", ")"], "query_toks_no_value": ["select", "name", "from", "artist", "where", "artist_id", "not", "in", "(", "select", "artist_id", "from", "exhibition", ")"], "question": "Show names for artists without any exhibition.", "question_toks": ["show", "name", "for", "artist", "without", "any", "exhibition", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Show", "names", "for", "artists", "without", "any", "exhibition", "."], "question_arg": [["show"], ["name"], ["for"], ["artist"], ["without"], ["any"], ["exhibition"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["for", "IN"], ["artist", "NN"], ["without", "IN"], ["any", "DT"], ["exhibition", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(19) A(0) C(1) T(0) Root(5) Sel(0) N(0) A(0) C(1) T(1)"}, {"db_id": "network_2", "query": "SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "age", ">", "(", "SELECT", "min", "(", "age", ")", "FROM", "person", "WHERE", "job", "=", "'engineer", "'", ")", "ORDER", "BY", "age"], "query_toks_no_value": ["select", "name", "from", "person", "where", "age", ">", "(", "select", "min", "(", "age", ")", "from", "person", "where", "job", "=", "value", ")", "order", "by", "age"], "question": "What is the name of all the people who are older than at least one engineer? Order them by age.", "question_toks": ["what", "is", "name", "of", "all", "people", "who", "are", "older", "than", "at", "least", "one", "engineer", "?", "order", "them", "by", "age", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"engineer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["What", "is", "the", "name", "of", "all", "the", "people", "who", "are", "older", "than", "at", "least", "one", "engineer", "?", "Order", "them", "by", "age", "."], "question_arg": [["what"], ["is"], ["name"], ["of"], ["all"], ["people"], ["who"], ["are"], ["older"], ["than"], ["at"], ["least"], ["one"], ["engineer"], ["?"], ["order"], ["them"], ["by"], ["age"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["people", "NNS"], ["who", "WP"], ["are", "VBP"], ["older", "JJR"], ["than", "IN"], ["at", "IN"], ["least", "JJS"], ["one", "CD"], ["engineer", "NN"], ["?", "."], ["order", "NN"], ["them", "PRP"], ["by", "IN"], ["age", "NN"], [".", "."]], "rule_label": "Root1(3) Root(1) Sel(0) N(0) A(0) C(1) T(0) Filter(13) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(2) C(2) T(0) Filter(2) A(0) C(5) T(0) Order(1) A(0) C(2) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "bethel", "island", "''", "AND", "t2.street_name", "=", "``", "bethel", "island", "rd", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good restaurant on bethel island rd in bethel island ?", "question_toks": ["give", "me", "a", "good", "restaurant", "on", "bethel", "island", "rd", "in", "bethel", "island", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"bethel island\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"bethel island rd\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "a", "good", "restaurant", "on", "bethel", "island", "rd", "in", "bethel", "island", "?"], "question_arg": [["give"], ["me"], ["a"], ["good"], ["restaurant"], ["on"], ["bethel"], ["island"], ["rd"], ["in"], ["bethel"], ["island"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["a", "DT"], ["good", "JJ"], ["restaurant", "NN"], ["on", "IN"], ["bethel", "NN"], ["island", "NN"], ["rd", "NN"], ["in", "IN"], ["bethel", "NN"], ["island", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(10) T(2) Filter(5) A(0) C(7) T(1)"}, {"db_id": "concert_singer", "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "YEAR", "FROM", "concert", "GROUP", "BY", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the year that had the most concerts?", "question_toks": ["what", "is", "year", "that", "had", "most", "concert", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["What", "is", "the", "year", "that", "had", "the", "most", "concerts", "?"], "question_arg": [["what"], ["is", "male"], ["year"], ["that"], ["had"], ["most"], ["concert"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["col"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["year", "NN"], ["that", "WDT"], ["had", "VBD"], ["most", "RBS"], ["concert", "NNS"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(17) T(2) Sup(0) A(3) C(0) T(2)"}, {"db_id": "storm_record", "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.max_speed", "FROM", "storm", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.storm_id", "=", "T2.storm_id", "GROUP", "BY", "T1.storm_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "max_speed", "from", "storm", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "storm_id", "=", "t2", ".", "storm_id", "group", "by", "t1", ".", "storm_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the storm name and max speed which affected the greatest number of regions?", "question_toks": ["what", "is", "storm", "name", "and", "max", "speed", "which", "affected", "greatest", "number", "of", "region", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["What", "is", "the", "storm", "name", "and", "max", "speed", "which", "affected", "the", "greatest", "number", "of", "regions", "?"], "question_arg": [["what"], ["is"], ["storm"], ["name"], ["and"], ["max", "speed"], ["which"], ["affected"], ["greatest"], ["number", "death"], ["of"], ["region"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["MOST"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["storm", "JJ"], ["name", "NN"], ["and", "CC"], ["max", "NNS"], ["speed", "NN"], ["which", "WDT"], ["affected", "VBD"], ["greatest", "JJS"], ["number", "NN"], ["of", "IN"], ["region", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(2) T(0) A(0) C(4) T(0) Sup(0) A(3) C(0) T(2)"}, {"db_id": "concert_singer", "query": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "concert", "WHERE", "YEAR", "=", "2014", "OR", "YEAR", "=", "2015"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "concert", "where", "year", "=", "value", "or", "year", "=", "value"], "question": "How many concerts occurred in 2014 or 2015?", "question_toks": ["how", "many", "concert", "occurred", "in", "year", "or", "year", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null], "or", [false, 2, [0, [0, 19, false], null], 2015.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["How", "many", "concerts", "occurred", "in", "2014", "or", "2015", "?"], "question_arg": [["how"], ["many"], ["concert"], ["occurred"], ["in"], ["year"], ["or"], ["year"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["concert", "NN"], ["occurred", "VBD"], ["in", "IN"], ["2014", "CD"], ["or", "CC"], ["2015", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(1) Filter(2) A(0) C(17) T(2) Filter(2) A(0) C(17) T(2)"}, {"db_id": "storm_record", "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000", "query_toks": ["SELECT", "avg", "(", "damage_millions_USD", ")", ",", "max", "(", "damage_millions_USD", ")", "FROM", "storm", "WHERE", "max_speed", ">", "1000"], "query_toks_no_value": ["select", "avg", "(", "damage_millions_usd", ")", ",", "max", "(", "damage_millions_usd", ")", "from", "storm", "where", "max_speed", ">", "value"], "question": "What is the average and maximum damage in millions for storms that had a max speed over 1000?", "question_toks": ["what", "is", "average", "and", "maximum", "damage", "in", "million", "for", "storm", "that", "had", "a", "max", "speed", "over", "1000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 5, false], null]], [1, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 4, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["What", "is", "the", "average", "and", "maximum", "damage", "in", "millions", "for", "storms", "that", "had", "a", "max", "speed", "over", "1000", "?"], "question_arg": [["what"], ["is"], ["average"], ["and"], ["maximum"], ["damage"], ["in"], ["million"], ["for"], ["storm"], ["that"], ["had"], ["a"], ["max", "speed"], ["over"], ["1000"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["NONE"], ["agg"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["and", "CC"], ["maximum", "JJ"], ["damage", "NN"], ["in", "IN"], ["million", "CD"], ["for", "IN"], ["storm", "NN"], ["that", "WDT"], ["had", "VBD"], ["a", "DT"], ["max", "JJ"], ["speed", "NN"], ["over", "IN"], ["1000", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(5) C(5) T(0) A(1) C(5) T(0) Filter(5) A(0) C(4) T(0)"}, {"db_id": "geo", "query": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );", "query_toks": ["SELECT", "highest_point", "FROM", "highlow", "WHERE", "highest_elevation", "=", "(", "SELECT", "MAX", "(", "highest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "highest_point", "from", "highlow", "where", "highest_elevation", "=", "(", "select", "max", "(", "highest_elevation", ")", "from", "highlow", ")"], "question": "what is the highest point in the country", "question_toks": ["what", "is", "highest", "point", "in", "country"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "highest", "point", "in", "the", "country"], "question_arg": [["what"], ["is"], ["highest", "point"], ["in"], ["country"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["country", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(3) Filter(11) A(0) C(9) T(3) Root(5) Sel(0) N(0) A(1) C(9) T(3)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", ">", "150000", "AND", "state_name", "=", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", ">", "value", "and", "state_name", "=", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")", ")"], "question": "what are the major cities in the largest state", "question_toks": ["what", "are", "major", "city", "in", "largest", "state"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 150000.0, null], "and", [false, 2, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "major", "cities", "in", "the", "largest", "state"], "question_arg": [["what"], ["are"], ["major"], ["city"], ["in"], ["largest"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["major", "JJ"], ["city", "NN"], ["in", "IN"], ["largest", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(0) Filter(5) A(0) C(2) T(1) Filter(11) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}, {"db_id": "soccer_2", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'", "query_toks": ["SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'mid", "'", "EXCEPT", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'goalie", "'"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", "except", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value"], "question": "Find the names of states that have some college students playing in the mid position but not in the goalie position.", "question_toks": ["find", "name", "of", "state", "that", "have", "some", "college", "student", "playing", "in", "mid", "position", "but", "not", "in", "goalie", "position", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "names", "of", "states", "that", "have", "some", "college", "students", "playing", "in", "the", "mid", "position", "but", "not", "in", "the", "goalie", "position", "."], "question_arg": [["find"], ["name"], ["of"], ["state"], ["that"], ["have"], ["some"], ["college"], ["student"], ["playing"], ["in"], ["mid"], ["player", "position"], ["but"], ["not"], ["in"], ["goalie"], ["player", "position"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["state", "NN"], ["that", "WDT"], ["have", "VBP"], ["some", "DT"], ["college", "NN"], ["student", "NN"], ["playing", "VBG"], ["in", "IN"], ["mid", "JJ"], ["position", "NN"], ["but", "CC"], ["not", "RB"], ["in", "IN"], ["goalie", "JJ"], ["position", "NN"], [".", "."]], "rule_label": "Root1(2) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(8) T(2) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(8) T(2)"}, {"db_id": "soccer_2", "query": "SELECT count(*) FROM Player WHERE HS  >  1000", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Player", "WHERE", "HS", ">", "1000"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "player", "where", "hs", ">", "value"], "question": "How many players have more than 1000 hours of training?", "question_toks": ["how", "many", "player", "have", "more", "than", "1000", "hour", "of", "training", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 1000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["How", "many", "players", "have", "more", "than", "1000", "hours", "of", "training", "?"], "question_arg": [["how"], ["many"], ["player"], ["have"], ["more"], ["than"], ["1000"], ["training", "hour"], ["of"], ["training", "hour"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["col"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["player", "NN"], ["have", "VBP"], ["more", "JJR"], ["than", "IN"], ["1000", "CD"], ["hour", "NN"], ["of", "IN"], ["training", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "soccer_2", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'", "query_toks": ["SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'goalie", "'", "INTERSECT", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'mid", "'"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", "intersect", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value"], "question": "Find the names of states that have some college students playing in goalie and mid positions.", "question_toks": ["find", "name", "of", "state", "that", "have", "some", "college", "student", "playing", "in", "goalie", "and", "mid", "position", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "names", "of", "states", "that", "have", "some", "college", "students", "playing", "in", "goalie", "and", "mid", "positions", "."], "question_arg": [["find"], ["name"], ["of"], ["state"], ["that"], ["have"], ["some"], ["college"], ["student"], ["playing"], ["in"], ["goalie"], ["and"], ["mid"], ["player", "position"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["state", "NN"], ["that", "WDT"], ["have", "VBP"], ["some", "DT"], ["college", "NN"], ["student", "NN"], ["playing", "VBG"], ["in", "IN"], ["goalie", "NN"], ["and", "CC"], ["mid", "JJ"], ["position", "NN"], [".", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(8) T(2) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(8) T(2)"}, {"db_id": "geo", "query": "SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );", "query_toks": ["SELECT", "state_name", "FROM", "mountain", "WHERE", "mountain_altitude", "=", "(", "SELECT", "MAX", "(", "mountain_altitude", ")", "FROM", "mountain", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "mountain", "where", "mountain_altitude", "=", "(", "select", "max", "(", "mountain_altitude", ")", "from", "mountain", ")"], "question": "which state has the highest peak in the country", "question_toks": ["which", "state", "ha", "highest", "peak", "in", "country"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "highest", "peak", "in", "the", "country"], "question_arg": [["which"], ["state"], ["ha"], ["highest"], ["peak"], ["in"], ["country"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["highest", "JJS"], ["peak", "NN"], ["in", "IN"], ["country", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(5) Filter(11) A(0) C(15) T(5) Root(5) Sel(0) N(0) A(1) C(15) T(5)"}, {"db_id": "flight_1", "query": "SELECT name ,  distance FROM Aircraft", "query_toks": ["SELECT", "name", ",", "distance", "FROM", "Aircraft"], "query_toks_no_value": ["select", "name", ",", "distance", "from", "aircraft"], "question": "Show name and distance for all aircrafts.", "question_toks": ["show", "name", "and", "distance", "for", "all", "aircraft", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "name", "and", "distance", "for", "all", "aircrafts", "."], "question_arg": [["show"], ["name"], ["and"], ["distance"], ["for"], ["all"], ["aircraft"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["and", "CC"], ["distance", "NN"], ["for", "IN"], ["all", "DT"], ["aircraft", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(9) T(1) A(0) C(4) T(1)"}, {"db_id": "flight_1", "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"", "query_toks": ["SELECT", "name", "FROM", "Employee", "EXCEPT", "SELECT", "T1.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T3.name", "=", "``", "Boeing", "737-800", "''"], "query_toks_no_value": ["select", "name", "from", "employee", "except", "select", "t1", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t3", ".", "name", "=", "value"], "question": "Show names for all employees who do not have certificate of Boeing 737-800.", "question_toks": ["show", "name", "for", "all", "employee", "who", "do", "not", "have", "certificate", "of", "boeing", "737-800", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Boeing 737-800\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "names", "for", "all", "employees", "who", "do", "not", "have", "certificate", "of", "Boeing", "737-800", "."], "question_arg": [["show"], ["name"], ["for"], ["all"], ["employee"], ["who"], ["do"], ["not"], ["have"], ["certificate"], ["of"], ["boeing"], ["737-800"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["for", "IN"], ["all", "DT"], ["employee", "NN"], ["who", "WP"], ["do", "VBP"], ["not", "RB"], ["have", "VB"], ["certificate", "NN"], ["of", "IN"], ["boeing", "VBG"], ["737-800", "JJ"], [".", "."]], "rule_label": "Root1(2) Root(5) Sel(0) N(0) A(0) C(9) T(2) Root(3) Sel(0) N(0) A(0) C(9) T(2) Filter(2) A(0) C(9) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE state_name  =  \"california\";", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "state_name", "=", "``", "california", "''", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "state_name", "=", "value"], "question": "how much population does california have", "question_toks": ["how", "much", "population", "doe", "california", "have"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"california\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "much", "population", "does", "california", "have"], "question_arg": [["how"], ["much"], ["population"], ["doe"], ["california"], ["have"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["much", "JJ"], ["population", "NN"], ["doe", "NN"], ["california", "NN"], ["have", "VBP"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "IN", "(", "SELECT", "state_name", "FROM", "highlow", "WHERE", "lowest_elevation", "=", "(", "SELECT", "MIN", "(", "lowest_elevation", ")", "FROM", "highlow", ")", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "in", "(", "select", "state_name", "from", "highlow", "where", "lowest_elevation", "=", "(", "select", "min", "(", "lowest_elevation", ")", "from", "highlow", ")", ")"], "question": "which rivers run through the state with the lowest elevation in the usa", "question_toks": ["which", "river", "run", "through", "state", "with", "lowest", "elevation", "in", "usa"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "rivers", "run", "through", "the", "state", "with", "the", "lowest", "elevation", "in", "the", "usa"], "question_arg": [["which"], ["river"], ["run"], ["through"], ["state"], ["with"], ["lowest", "elevation"], ["in"], ["usa"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["river", "NN"], ["run", "VBP"], ["through", "IN"], ["state", "NN"], ["with", "IN"], ["lowest", "JJS"], ["elevation", "NN"], ["in", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(18) A(0) C(18) T(6) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(11) A(0) C(12) T(3) Root(5) Sel(0) N(0) A(2) C(12) T(3)"}, {"db_id": "network_2", "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "query_toks": ["SELECT", "T1.name", ",", "T1.age", ",", "T1.job", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Alice", "'", "AND", "T2.year", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "friend", "=", "'Alice", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", ",", "t1", ".", "job", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "and", "t2", ".", "year", "=", "(", "select", "max", "(", "year", ")", "from", "personfriend", "where", "friend", "=", "value", ")"], "question": "Find the name, age, and job title of persons who are friends with Alice for the longest years.", "question_toks": ["find", "name", ",", "age", ",", "and", "job", "title", "of", "person", "who", "are", "friend", "with", "alice", "for", "longest", "year", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Find", "the", "name", ",", "age", ",", "and", "job", "title", "of", "persons", "who", "are", "friends", "with", "Alice", "for", "the", "longest", "years", "."], "question_arg": [["find"], ["name"], [","], ["age"], [","], ["and"], ["job"], ["title"], ["of"], ["person"], ["who"], ["are"], ["friend"], ["with"], ["alice"], ["for"], ["longest"], ["year"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["find", "NN"], ["name", "NN"], [",", ","], ["age", "NN"], [",", ","], ["and", "CC"], ["job", "NN"], ["title", "NN"], ["of", "IN"], ["person", "NN"], ["who", "WP"], ["are", "VBP"], ["friend", "VBN"], ["with", "IN"], ["alice", "NN"], ["for", "IN"], ["longest", "JJ"], ["year", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(2) A(0) C(1) T(0) A(0) C(2) T(0) A(0) C(5) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(1) C(7) T(1) Filter(2) A(0) C(6) T(1)"}, {"db_id": "geo", "query": "SELECT SUM ( t2.population ) FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";", "query_toks": ["SELECT", "SUM", "(", "t2.population", ")", "FROM", "state", "AS", "t2", "JOIN", "border_info", "AS", "t1", "ON", "t2.state_name", "=", "t1.border", "WHERE", "t1.state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "sum", "(", "t2", ".", "population", ")", "from", "state", "as", "t2", "join", "border_info", "as", "t1", "on", "t2", ".", "state_name", "=", "t1", ".", "border", "where", "t1", ".", "state_name", "=", "value"], "question": "what is the total population of the states that border texas", "question_toks": ["what", "is", "total", "population", "of", "state", "that", "border", "texas"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [false, [[4, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "total", "population", "of", "the", "states", "that", "border", "texas"], "question_arg": [["what"], ["is"], ["total"], ["population"], ["of"], ["state"], ["that"], ["border"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["total", "JJ"], ["population", "NN"], ["of", "IN"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(4) C(2) T(0) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", ")"], "question": "what is the longest river in the us", "question_toks": ["what", "is", "longest", "river", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "longest", "river", "in", "the", "us"], "question_arg": [["what"], ["is"], ["longest"], ["river"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["longest", "JJS"], ["river", "NN"], ["in", "IN"], ["u", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(1) C(17) T(6)"}, {"db_id": "geo", "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";", "query_toks": ["SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "ohio", "''", ";"], "query_toks_no_value": ["select", "traverse", "from", "river", "where", "river_name", "=", "value"], "question": "what states border the ohio river", "question_toks": ["what", "state", "border", "ohio", "river"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"ohio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "border", "the", "ohio", "river"], "question_arg": [["what"], ["state"], ["border"], ["ohio"], ["river"]], "question_arg_type": [["NONE"], ["table"], ["col"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["border", "NN"], ["ohio", "NN"], ["river", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", ")"], "question": "what is the biggest city in the usa", "question_toks": ["what", "is", "biggest", "city", "in", "usa"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "biggest", "city", "in", "the", "usa"], "question_arg": [["what"], ["is"], ["biggest"], ["city"], ["in"], ["usa"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["biggest", "JJS"], ["city", "NN"], ["in", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "kentucky", "''", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "=", "value"], "question": "which states adjoin kentucky", "question_toks": ["which", "state", "adjoin", "kentucky"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"kentucky\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "states", "adjoin", "kentucky"], "question_arg": [["which"], ["state"], ["adjoin"], ["kentucky"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["adjoin", "NN"], ["kentucky", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"atlanta\" ) );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "capital", "=", "``", "atlanta", "''", ")", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "capital", "=", "value", ")", ")"], "question": "which rivers run through states that border the state with the capital atlanta", "question_toks": ["which", "river", "run", "through", "state", "that", "border", "state", "with", "capital", "atlanta"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"atlanta\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "rivers", "run", "through", "states", "that", "border", "the", "state", "with", "the", "capital", "atlanta"], "question_arg": [["which"], ["river"], ["run"], ["through"], ["state"], ["that"], ["border"], ["state"], ["with"], ["capital"], ["atlanta"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["river", "NN"], ["run", "VBP"], ["through", "IN"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["state", "NN"], ["with", "IN"], ["capital", "NN"], ["atlanta", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(18) A(0) C(18) T(6) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(18) A(0) C(1) T(2) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(5) T(0)"}, {"db_id": "soccer_2", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'", "query_toks": ["SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'goalie", "'", "INTERSECT", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'mid", "'"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", "intersect", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value"], "question": "What are the names of the states that have some college students playing in the positions of goalie and mid-field?", "question_toks": ["what", "are", "name", "of", "state", "that", "have", "some", "college", "student", "playing", "in", "position", "of", "goalie", "and", "mid-field", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "states", "that", "have", "some", "college", "students", "playing", "in", "the", "positions", "of", "goalie", "and", "mid-field", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["state"], ["that"], ["have"], ["some"], ["college"], ["student"], ["playing"], ["in"], ["player", "position"], ["of"], ["goalie"], ["and"], ["mid-field"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["state", "NN"], ["that", "WDT"], ["have", "VBP"], ["some", "DT"], ["college", "NN"], ["student", "NN"], ["playing", "VBG"], ["in", "IN"], ["position", "NN"], ["of", "IN"], ["goalie", "NN"], ["and", "CC"], ["mid-field", "NN"], ["?", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(8) T(2) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(8) T(2)"}, {"db_id": "storm_record", "query": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "storm", "WHERE", "Number_Deaths", ">", "0"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "storm", "where", "number_deaths", ">", "value"], "question": "How many storms had death records?", "question_toks": ["how", "many", "storm", "had", "death", "record", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 6, false], null], 0.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["How", "many", "storms", "had", "death", "records", "?"], "question_arg": [["how"], ["many"], ["storm"], ["had"], ["number", "death"], ["record"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["storm", "NN"], ["had", "VBD"], ["death", "NN"], ["record", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(5) A(0) C(6) T(0)"}, {"db_id": "concert_singer", "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1", "query_toks": ["SELECT", "song_name", ",", "song_release_year", "FROM", "singer", "ORDER", "BY", "age", "LIMIT", "1"], "query_toks_no_value": ["select", "song_name", ",", "song_release_year", "from", "singer", "order", "by", "age", "limit", "value"], "question": "Show the name and the release year of the song by the youngest singer.", "question_toks": ["show", "name", "and", "release", "year", "of", "song", "by", "youngest", "singer", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 13, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["Show", "the", "name", "and", "the", "release", "year", "of", "the", "song", "by", "the", "youngest", "singer", "."], "question_arg": [["show"], ["name"], ["and"], ["song", "release", "year"], ["of"], ["song", "name"], ["by"], ["youngest"], ["singer"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["and", "CC"], ["release", "NN"], ["year", "NN"], ["of", "IN"], ["song", "NN"], ["by", "IN"], ["youngest", "JJS"], ["singer", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(10) T(1) A(0) C(11) T(1) Sup(1) A(0) C(12) T(1)"}, {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"french\";", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "where can i eat french food in the bay area ?", "question_toks": ["where", "can", "i", "eat", "french", "food", "in", "bay", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "can", "i", "eat", "french", "food", "in", "the", "bay", "area", "?"], "question_arg": [["where"], ["can"], ["i"], ["eat"], ["french"], ["food", "type"], ["in"], ["bay"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["can", "MD"], ["i", "VB"], ["eat", "JJ"], ["french", "JJ"], ["food", "NN"], ["in", "IN"], ["bay", "NN"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(2) A(0) C(6) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "oklahoma", "''", ")", "ORDER", "BY", "population", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")", "order", "by", "population", "desc", "limit", "value"], "question": "what is the most populated state bordering oklahoma", "question_toks": ["what", "is", "most", "populated", "state", "bordering", "oklahoma"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"oklahoma\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 2, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "most", "populated", "state", "bordering", "oklahoma"], "question_arg": [["what"], ["is"], ["most"], ["populated"], ["state"], ["bordering"], ["oklahoma"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["most", "RBS"], ["populated", "JJ"], ["state", "NN"], ["bordering", "NN"], ["oklahoma", "NN"]], "rule_label": "Root1(3) Root(0) Sel(0) N(0) A(0) C(1) T(0) Sup(0) A(0) C(2) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"wyoming\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"wyoming\" );", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "wyoming", "''", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "wyoming", "''", ")", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "state", "where", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")", ")", "and", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")"], "question": "how many people live in the smallest state bordering wyoming", "question_toks": ["how", "many", "people", "live", "in", "smallest", "state", "bordering", "wyoming"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"wyoming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"wyoming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "people", "live", "in", "the", "smallest", "state", "bordering", "wyoming"], "question_arg": [["how"], ["many"], ["people"], ["live"], ["in"], ["smallest"], ["state"], ["bordering"], ["wyoming"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["people", "NNS"], ["live", "VBP"], ["in", "IN"], ["smallest", "JJS"], ["state", "NN"], ["bordering", "NN"], ["wyoming", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(0) Filter(11) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(1) C(2) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";", "query_toks": ["SELECT", "lowest_point", "FROM", "highlow", "WHERE", "state_name", "=", "``", "iowa", "''", ";"], "query_toks_no_value": ["select", "lowest_point", "from", "highlow", "where", "state_name", "=", "value"], "question": "what is the lowest point in the state of iowa", "question_toks": ["what", "is", "lowest", "point", "in", "state", "of", "iowa"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 15, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"iowa\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "lowest", "point", "in", "the", "state", "of", "iowa"], "question_arg": [["what"], ["is"], ["lowest", "point"], ["in"], ["state"], ["of"], ["iowa"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["lowest", "JJS"], ["point", "NN"], ["in", "IN"], ["state", "NN"], ["of", "IN"], ["iowa", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "flight_2", "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Country", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "airline", "=", "value"], "question": "Which country does Airline \"JetBlue Airways\" belong to?", "question_toks": ["which", "country", "doe", "airline", "'", "jetblue", "airway", "'", "belong", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 4, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Which", "country", "does", "Airline", "``", "JetBlue", "Airways", "''", "belong", "to", "?"], "question_arg": [["which"], ["country"], ["doe"], ["airline"], ["'"], ["jetblue"], ["airway"], ["'"], ["belong"], ["to"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["country", "NN"], ["doe", "VBZ"], ["airline", "NN"], ["'", "''"], ["jetblue", "JJ"], ["airway", "NN"], ["'", "''"], ["belong", "NN"], ["to", "TO"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(4) T(0) Filter(2) A(0) C(2) T(0)"}, {"db_id": "soccer_2", "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500", "query_toks": ["SELECT", "pName", "FROM", "Player", "WHERE", "HS", "BETWEEN", "500", "AND", "1500"], "query_toks_no_value": ["select", "pname", "from", "player", "where", "hs", "between", "value", "and", "value"], "question": "What are the names of players who train between 500 and 1500 hours?", "question_toks": ["what", "are", "name", "of", "player", "who", "train", "between", "500", "and", "1500", "hour", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 1, [0, [0, 7, false], null], 500.0, 1500.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "names", "of", "players", "who", "train", "between", "500", "and", "1500", "hours", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["player"], ["who"], ["train"], ["between"], ["500"], ["and"], ["1500"], ["training", "hour"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["agg"], ["value"], ["NONE"], ["value"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["player", "NN"], ["who", "WP"], ["train", "VBP"], ["between", "IN"], ["500", "CD"], ["and", "CC"], ["1500", "CD"], ["hour", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(1) Filter(8) A(0) C(7) T(1)"}, {"db_id": "network_2", "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')", "query_toks": ["SELECT", "T1.name", ",", "T1.age", ",", "T1.job", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Alice", "'", "AND", "T2.year", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "friend", "=", "'Alice", "'", ")"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "age", ",", "t1", ".", "job", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value", "and", "t2", ".", "year", "=", "(", "select", "max", "(", "year", ")", "from", "personfriend", "where", "friend", "=", "value", ")"], "question": "What are the names, ages, and jobs of all people who are friends with Alice for the longest amount of time?", "question_toks": ["what", "are", "name", ",", "age", ",", "and", "job", "of", "all", "people", "who", "are", "friend", "with", "alice", "for", "longest", "amount", "of", "time", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Alice\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["What", "are", "the", "names", ",", "ages", ",", "and", "jobs", "of", "all", "people", "who", "are", "friends", "with", "Alice", "for", "the", "longest", "amount", "of", "time", "?"], "question_arg": [["what"], ["are"], ["name"], [","], ["age"], [","], ["and"], ["job"], ["of"], ["all"], ["people"], ["who"], ["are"], ["friend"], ["with"], ["alice"], ["for"], ["longest"], ["amount"], ["of"], ["time"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "JJ"], [",", ","], ["age", "NN"], [",", ","], ["and", "CC"], ["job", "NN"], ["of", "IN"], ["all", "DT"], ["people", "NNS"], ["who", "WP"], ["are", "VBP"], ["friend", "VBN"], ["with", "IN"], ["alice", "NN"], ["for", "IN"], ["longest", "JJS"], ["amount", "NN"], ["of", "IN"], ["time", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(2) A(0) C(1) T(0) A(0) C(2) T(0) A(0) C(5) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(1) C(7) T(1) Filter(2) A(0) C(6) T(1)"}, {"db_id": "flight_2", "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"", "query_toks": ["SELECT", "Abbreviation", "FROM", "AIRLINES", "WHERE", "Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "abbreviation", "from", "airlines", "where", "airline", "=", "value"], "question": "Which abbreviation corresponds to Jetblue Airways?", "question_toks": ["which", "abbreviation", "corresponds", "to", "jetblue", "airway", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Which", "abbreviation", "corresponds", "to", "Jetblue", "Airways", "?"], "question_arg": [["which"], ["abbreviation"], ["corresponds"], ["to"], ["jetblue"], ["airway"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["abbreviation", "NN"], ["corresponds", "VBZ"], ["to", "TO"], ["jetblue", "VB"], ["airway", "RB"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(3) T(0) Filter(2) A(0) C(2) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good places in mountain view for arabic food ?", "question_toks": ["what", "are", "some", "good", "place", "in", "mountain", "view", "for", "arabic", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mountain view\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["what", "are", "some", "good", "places", "in", "mountain", "view", "for", "arabic", "food", "?"], "question_arg": [["what"], ["are"], ["some"], ["good"], ["place"], ["in"], ["mountain"], ["view"], ["for"], ["arabic"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["some", "DT"], ["good", "JJ"], ["place", "NN"], ["in", "IN"], ["mountain", "NN"], ["view", "NN"], ["for", "IN"], ["arabic", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "theme_gallery", "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004", "query_toks": ["SELECT", "T2.theme", ",", "T1.date", ",", "T1.attendance", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T2.year", "=", "2004"], "query_toks_no_value": ["select", "t2", ".", "theme", ",", "t1", ".", "date", ",", "t1", ".", "attendance", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t2", ".", "year", "=", "value"], "question": "Return the themes, dates, and attendance for exhibitions that happened in 2004.", "question_toks": ["return", "theme", ",", "date", ",", "and", "attendance", "for", "exhibition", "that", "happened", "in", "year", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], 2004.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Return", "the", "themes", ",", "dates", ",", "and", "attendance", "for", "exhibitions", "that", "happened", "in", "2004", "."], "question_arg": [["return"], ["theme"], [","], ["date"], [","], ["and"], ["attendance"], ["for"], ["exhibition"], ["that"], ["happened"], ["in"], ["year"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["return", "NN"], ["theme", "NN"], [",", ","], ["date", "NN"], [",", ","], ["and", "CC"], ["attendance", "NN"], ["for", "IN"], ["exhibition", "NN"], ["that", "WDT"], ["happened", "VBD"], ["in", "IN"], ["2004", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(2) A(0) C(8) T(1) A(0) C(10) T(2) A(0) C(11) T(2) Filter(2) A(0) C(7) T(1)"}, {"db_id": "icfp_1", "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)", "query_toks": ["SELECT", "t2.title", "FROM", "authorship", "AS", "t1", "JOIN", "papers", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "WHERE", "t1.authorder", "=", "(", "SELECT", "max", "(", "authorder", ")", "FROM", "authorship", ")"], "query_toks_no_value": ["select", "t2", ".", "title", "from", "authorship", "as", "t1", "join", "papers", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "where", "t1", ".", "authorder", "=", "(", "select", "max", "(", "authorder", ")", "from", "authorship", ")"], "question": "Retrieve the title of the paper that has the largest number of authors.", "question_toks": ["retrieve", "title", "of", "paper", "that", "ha", "largest", "number", "of", "author", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Retrieve", "the", "title", "of", "the", "paper", "that", "has", "the", "largest", "number", "of", "authors", "."], "question_arg": [["retrieve"], ["title"], ["of"], ["paper"], ["that"], ["ha"], ["largest"], ["number"], ["of"], ["author"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["retrieve", "JJ"], ["title", "NN"], ["of", "IN"], ["paper", "NN"], ["that", "IN"], ["ha", "VBZ"], ["largest", "JJS"], ["number", "NN"], ["of", "IN"], ["author", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(11) A(0) C(9) T(3) Root(5) Sel(0) N(0) A(1) C(9) T(3)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a restaurant on buchanan in san francisco that serves good arabic food ?", "question_toks": ["give", "me", "a", "restaurant", "on", "buchanan", "in", "san", "francisco", "that", "serf", "good", "arabic", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"buchanan\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "a", "restaurant", "on", "buchanan", "in", "san", "francisco", "that", "serves", "good", "arabic", "food", "?"], "question_arg": [["give"], ["me"], ["a"], ["restaurant"], ["on"], ["buchanan"], ["in"], ["san"], ["francisco"], ["that"], ["serf"], ["good"], ["arabic"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["a", "DT"], ["restaurant", "NN"], ["on", "IN"], ["buchanan", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["that", "IN"], ["serf", "VBD"], ["good", "JJ"], ["arabic", "NN"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(10) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "in", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")", ")"], "question": "what rivers flow through the largest state", "question_toks": ["what", "river", "flow", "through", "largest", "state"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "rivers", "flow", "through", "the", "largest", "state"], "question_arg": [["what"], ["river"], ["flow"], ["through"], ["largest"], ["state"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["what", "WP"], ["river", "NN"], ["flow", "NN"], ["through", "IN"], ["largest", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(18) A(0) C(18) T(6) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}, {"db_id": "icfp_1", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\"", "query_toks": ["SELECT", "DISTINCT", "t3.name", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t1.fname", "=", "``", "Katsuhiro", "''", "AND", "t1.lname", "=", "``", "Ueno", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "What is the name of the institution the author \"Katsuhiro Ueno\" belongs to?", "question_toks": ["what", "is", "name", "of", "institution", "author", "'", "katsuhiro", "ueno", "'", "belongs", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Katsuhiro\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Ueno\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "institution", "the", "author", "``", "Katsuhiro", "Ueno", "''", "belongs", "to", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["institution"], ["author"], ["'"], ["katsuhiro"], ["ueno"], ["'"], ["belongs"], ["to"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["institution", "NN"], ["author", "NN"], ["'", "''"], ["katsuhiro", "JJ"], ["ueno", "NN"], ["'", "''"], ["belongs", "NNS"], ["to", "TO"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(2) A(0) C(5) T(1)"}, {"db_id": "flight_1", "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\"", "query_toks": ["SELECT", "T1.flno", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "WHERE", "T2.name", "=", "``", "Airbus", "A340-300", "''"], "query_toks_no_value": ["select", "t1", ".", "flno", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "where", "t2", ".", "name", "=", "value"], "question": "Show all flight numbers with aircraft Airbus A340-300.", "question_toks": ["show", "all", "flight", "number", "with", "aircraft", "airbus", "a340-300", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"Airbus A340-300\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "all", "flight", "numbers", "with", "aircraft", "Airbus", "A340-300", "."], "question_arg": [["show"], ["all"], ["flight", "number"], ["with"], ["aircraft"], ["airbus"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "VB"], ["all", "DT"], ["flight", "NN"], ["number", "NN"], ["with", "IN"], ["aircraft", "NN"], ["airbus", "RB"], ["a340-300", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(9) T(1)"}, {"db_id": "network_2", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'", "query_toks": ["SELECT", "T2.friend", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T1.name", "=", "'Bob", "'"], "query_toks_no_value": ["select", "t2", ".", "friend", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t1", ".", "name", "=", "value"], "question": "Who are the friends of Bob?", "question_toks": ["who", "are", "friend", "of", "bob", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"Bob\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Who", "are", "the", "friends", "of", "Bob", "?"], "question_arg": [["who"], ["are"], ["friend"], ["of"], ["bob"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["who", "WP"], ["are", "VBP"], ["friend", "NN"], ["of", "IN"], ["bob", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(1) Filter(2) A(0) C(1) T(0)"}, {"db_id": "flight_4", "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "airlines", "WHERE", "active", "=", "'Y", "'", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "active", "=", "value", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which countries has the most number of airlines whose active status is 'Y'?", "question_toks": ["which", "country", "ha", "most", "number", "of", "airline", "whose", "active", "status", "is", "'y", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 24, false], null], "\"Y\"", null]], "groupBy": [[0, 23, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Which", "countries", "has", "the", "most", "number", "of", "airlines", "whose", "active", "status", "is", "'Y", "'", "?"], "question_arg": [["which"], ["country"], ["ha"], ["most"], ["number"], ["of"], ["airline"], ["whose"], ["active"], ["status"], ["is"], ["'y"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["country", "NN"], ["ha", "VBZ"], ["most", "RBS"], ["number", "NN"], ["of", "IN"], ["airline", "NN"], ["whose", "WP$"], ["active", "JJ"], ["status", "NN"], ["is", "VBZ"], ["'y", "VBN"], ["'", "''"], ["?", "."]], "rule_label": "Root1(3) Root(0) Sel(0) N(0) A(0) C(12) T(2) Sup(0) A(3) C(0) T(2) Filter(2) A(0) C(19) T(2)"}, {"db_id": "flight_2", "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.Airline", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airline", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which airline has most number of flights?", "question_toks": ["which", "airline", "ha", "most", "number", "of", "flight", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Which", "airline", "has", "most", "number", "of", "flights", "?"], "question_arg": [["which"], ["airline"], ["ha"], ["most"], ["flight", "number"], ["of"], ["flight"], ["?"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["airline", "NN"], ["ha", "VBZ"], ["most", "RBS"], ["number", "NN"], ["of", "IN"], ["flight", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(2) T(0) Sup(0) A(3) C(0) T(2)"}, {"db_id": "flight_4", "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.city", ",", "T2.dst_apid", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "GROUP", "BY", "T2.dst_apid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "city", ",", "t2", ".", "dst_apid", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "group", "by", "t2", ".", "dst_apid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the name and city of the airport which is the destination of the most number of routes.", "question_toks": ["find", "name", "and", "city", "of", "airport", "which", "is", "destination", "of", "most", "number", "of", "route", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "name", "and", "city", "of", "the", "airport", "which", "is", "the", "destination", "of", "the", "most", "number", "of", "routes", "."], "question_arg": [["find"], ["name"], ["and"], ["city"], ["of"], ["airport"], ["which"], ["is"], ["destination", "airport"], ["of"], ["most"], ["number"], ["of"], ["route"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["and", "CC"], ["city", "NN"], ["of", "IN"], ["airport", "NN"], ["which", "WDT"], ["is", "VBZ"], ["destination", "NN"], ["of", "IN"], ["most", "JJS"], ["number", "NN"], ["of", "IN"], ["route", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(2) A(0) C(10) T(1) A(0) C(11) T(1) A(0) C(2) T(0) Sup(0) A(3) C(0) T(0)"}, {"db_id": "icfp_1", "query": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\"", "query_toks": ["SELECT", "t1.fname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "LIKE", "``", "%", "Functional", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "like", "value"], "question": "Who has written a paper that has the word \"Functional\" in its title? Return the first names of the authors.", "question_toks": ["who", "ha", "written", "a", "paper", "that", "ha", "word", "'", "functional", "'", "in", "it", "title", "?", "return", "first", "name", "of", "author", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%Functional%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Who", "has", "written", "a", "paper", "that", "has", "the", "word", "``", "Functional", "''", "in", "its", "title", "?", "Return", "the", "first", "names", "of", "the", "authors", "."], "question_arg": [["who"], ["ha"], ["written"], ["a"], ["paper"], ["that"], ["ha"], ["word"], ["'"], ["functional"], ["'"], ["in"], ["it"], ["title"], ["?"], ["return"], ["first", "name"], ["of"], ["author"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["who", "WP"], ["ha", "VBP"], ["written", "VBN"], ["a", "DT"], ["paper", "NN"], ["that", "WDT"], ["ha", "VBD"], ["word", "NN"], ["'", "''"], ["functional", "JJ"], ["'", "''"], ["in", "IN"], ["it", "PRP"], ["title", "VB"], ["?", "."], ["return", "NN"], ["first", "RB"], ["name", "NN"], ["of", "IN"], ["author", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(1) Filter(9) A(0) C(8) T(2)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "mississippi", "''", ")", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "river_name", "=", "value", ")"], "question": "what states border states which the mississippi runs through", "question_toks": ["what", "state", "border", "state", "which", "mississippi", "run", "through"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 8, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"mississippi\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "border", "states", "which", "the", "mississippi", "runs", "through"], "question_arg": [["what"], ["state"], ["border"], ["state"], ["which"], ["mississippi"], ["run"], ["through"]], "question_arg_type": [["NONE"], ["table"], ["col"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["border", "NN"], ["state", "NN"], ["which", "WDT"], ["mississippi", "NN"], ["run", "VBP"], ["through", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(18) A(0) C(1) T(2) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "storm_record", "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'", "query_toks": ["SELECT", "T3.Name", "FROM", "affected_region", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "JOIN", "storm", "AS", "T3", "ON", "T1.storm_id", "=", "T3.storm_id", "WHERE", "T2.Region_name", "=", "'Afghanistan", "'", "INTERSECT", "SELECT", "T3.Name", "FROM", "affected_region", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "JOIN", "storm", "AS", "T3", "ON", "T1.storm_id", "=", "T3.storm_id", "WHERE", "T2.Region_name", "=", "'Albania", "'"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "affected_region", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "join", "storm", "as", "t3", "on", "t1", ".", "storm_id", "=", "t3", ".", "storm_id", "where", "t2", ".", "region_name", "=", "value", "intersect", "select", "t3", ".", "name", "from", "affected_region", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "join", "storm", "as", "t3", "on", "t1", ".", "storm_id", "=", "t3", ".", "storm_id", "where", "t2", ".", "region_name", "=", "value"], "question": "Find the name of the storm that affected both Afghanistan and Albania regions.", "question_toks": ["find", "name", "of", "storm", "that", "affected", "both", "afghanistan", "and", "albania", "region", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Afghanistan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 9, false], null], "\"Albania\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["Find", "the", "name", "of", "the", "storm", "that", "affected", "both", "Afghanistan", "and", "Albania", "regions", "."], "question_arg": [["find"], ["name"], ["of"], ["storm"], ["that"], ["affected"], ["both"], ["afghanistan"], ["and"], ["albania"], ["region"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["storm", "NN"], ["that", "WDT"], ["affected", "VBD"], ["both", "DT"], ["afghanistan", "NNS"], ["and", "CC"], ["albania", "JJ"], ["region", "NN"], [".", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(9) T(1) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(9) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", ")"], "question": "what is the longest river", "question_toks": ["what", "is", "longest", "river"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "longest", "river"], "question_arg": [["what"], ["is"], ["longest"], ["river"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["longest", "JJS"], ["river", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(1) C(17) T(6)"}, {"db_id": "flight_1", "query": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin", "query_toks": ["SELECT", "flno", ",", "origin", ",", "destination", "FROM", "Flight", "ORDER", "BY", "origin"], "query_toks_no_value": ["select", "flno", ",", "origin", ",", "destination", "from", "flight", "order", "by", "origin"], "question": "What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?", "question_toks": ["what", "is", "flight", "number", ",", "origin", ",", "and", "destination", "for", "all", "flight", "in", "alphabetical", "order", "by", "departure", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 2, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "flight", "number", ",", "origin", ",", "and", "destination", "for", "all", "flights", "in", "alphabetical", "order", "by", "departure", "cities", "?"], "question_arg": [["what"], ["is"], ["flight", "number"], [","], ["origin"], [","], ["and"], ["destination"], ["for"], ["all"], ["flight"], ["in"], ["alphabetical"], ["order"], ["by"], ["departure", "date"], ["city"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["flight", "NN"], ["number", "NN"], [",", ","], ["origin", "NN"], [",", ","], ["and", "CC"], ["destination", "NN"], ["for", "IN"], ["all", "DT"], ["flight", "NN"], ["in", "IN"], ["alphabetical", "JJ"], ["order", "NN"], ["by", "IN"], ["departure", "NN"], ["city", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(2) A(0) C(1) T(0) A(0) C(2) T(0) A(0) C(3) T(0) Order(1) A(0) C(2) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "region0", "''", ")", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good restaurant in the bay area ?", "question_toks": ["give", "me", "a", "good", "restaurant", "in", "bay", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"region0\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "a", "good", "restaurant", "in", "the", "bay", "area", "?"], "question_arg": [["give"], ["me"], ["a"], ["good"], ["restaurant"], ["in"], ["bay"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["a", "DT"], ["good", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["bay", "JJ"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(3) T(0) Filter(5) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MIN", "(", "population", ")", "FROM", "city", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "min", "(", "population", ")", "from", "city", ")"], "question": "what city has the least population", "question_toks": ["what", "city", "ha", "least", "population"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "city", "has", "the", "least", "population"], "question_arg": [["what"], ["city"], ["ha"], ["least"], ["population"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["city", "NN"], ["ha", "NN"], ["least", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(2) C(2) T(1)"}, {"db_id": "singer", "query": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955", "query_toks": ["SELECT", "Citizenship", "FROM", "singer", "WHERE", "Birth_Year", "<", "1945", "INTERSECT", "SELECT", "Citizenship", "FROM", "singer", "WHERE", "Birth_Year", ">", "1955"], "query_toks_no_value": ["select", "citizenship", "from", "singer", "where", "birth_year", "<", "value", "intersect", "select", "citizenship", "from", "singer", "where", "birth_year", ">", "value"], "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955.", "question_toks": ["show", "citizenship", "shared", "by", "singer", "with", "birth", "year", "before", "year", "and", "after", "year", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 4, [0, [0, 3, false], null], 1945.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 1955.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["Show", "the", "citizenship", "shared", "by", "singers", "with", "birth", "year", "before", "1945", "and", "after", "1955", "."], "question_arg": [["show"], ["citizenship"], ["shared"], ["by"], ["singer"], ["with"], ["birth", "year"], ["before"], ["year"], ["and"], ["after"], ["year"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["citizenship", "NN"], ["shared", "VBN"], ["by", "IN"], ["singer", "NN"], ["with", "IN"], ["birth", "JJ"], ["year", "NN"], ["before", "IN"], ["1945", "CD"], ["and", "CC"], ["after", "IN"], ["1955", "CD"], [".", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(4) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(5) A(0) C(3) T(0)"}, {"db_id": "flight_1", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99", "query_toks": ["SELECT", "T2.name", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "WHERE", "T1.flno", "=", "99"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "where", "t1", ".", "flno", "=", "value"], "question": "What is the name of the aircraft that was on flight number 99?", "question_toks": ["what", "is", "name", "of", "aircraft", "that", "wa", "on", "flight", "number", "99", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], 99.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "aircraft", "that", "was", "on", "flight", "number", "99", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["aircraft"], ["that"], ["wa"], ["on"], ["flight", "number"], ["99"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["value"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["aircraft", "NN"], ["that", "WDT"], ["wa", "VBZ"], ["on", "IN"], ["flight", "NN"], ["number", "NN"], ["99", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(2) A(0) C(1) T(0)"}, {"db_id": "soccer_2", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'", "query_toks": ["SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "JOIN", "player", "AS", "T3", "ON", "T2.pID", "=", "T3.pID", "WHERE", "T3.pName", "=", "'Charles", "'"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "join", "player", "as", "t3", "on", "t2", ".", "pid", "=", "t3", ".", "pid", "where", "t3", ".", "pname", "=", "value"], "question": "In which state is the college that Charles attends?", "question_toks": ["in", "which", "state", "is", "college", "that", "charles", "attends", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 8, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Charles\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["In", "which", "state", "is", "the", "college", "that", "Charles", "attends", "?"], "question_arg": [["in"], ["which"], ["state"], ["is"], ["college"], ["that"], ["charles"], ["attends"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["in", "IN"], ["which", "WDT"], ["state", "NN"], ["is", "VBZ"], ["college", "NN"], ["that", "IN"], ["charles", "VBZ"], ["attends", "NNS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(5) T(1)"}, {"db_id": "flight_4", "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10", "query_toks": ["SELECT", "T1.name", ",", "T2.alid", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "GROUP", "BY", "T2.alid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "10"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t2", ".", "alid", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "group", "by", "t2", ".", "alid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "For the airline ids with the top 10 most routes operated, what are their names?", "question_toks": ["for", "airline", "id", "with", "top", "10", "most", "route", "operated", ",", "what", "are", "their", "name", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 19, false], null]], [0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 10, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["For", "the", "airline", "ids", "with", "the", "top", "10", "most", "routes", "operated", ",", "what", "are", "their", "names", "?"], "question_arg": [["for"], ["airline", "id"], ["with"], ["top"], ["10"], ["most"], ["route"], ["operated"], [","], ["what"], ["are"], ["their"], ["name"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["value"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["for", "IN"], ["airline", "NN"], ["id", "NN"], ["with", "IN"], ["top", "JJ"], ["10", "CD"], ["most", "JJS"], ["route", "NN"], ["operated", "VBD"], [",", ","], ["what", "WP"], ["are", "VBP"], ["their", "PRP$"], ["name", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(10) T(2) A(0) C(6) T(0) Sup(0) A(3) C(0) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "Give me the best place in san francisco for french food ?", "question_toks": ["give", "me", "best", "place", "in", "san", "francisco", "for", "french", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["Give", "me", "the", "best", "place", "in", "san", "francisco", "for", "french", "food", "?"], "question_arg": [["give"], ["me"], ["best"], ["place"], ["in"], ["san"], ["francisco"], ["for"], ["french"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["best", "JJS"], ["place", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["for", "IN"], ["french", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(1) C(7) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "flight_4", "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "WHERE", "T1.name", "=", "'John", "F", "Kennedy", "International", "Airport", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "where", "t1", ".", "name", "=", "value"], "question": "What is the number of routes that end at John F Kennedy International Airport?", "question_toks": ["what", "is", "number", "of", "route", "that", "end", "at", "john", "f", "kennedy", "international", "airport", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"John F Kennedy International Airport\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "number", "of", "routes", "that", "end", "at", "John", "F", "Kennedy", "International", "Airport", "?"], "question_arg": [["what"], ["is"], ["number"], ["of"], ["route"], ["that"], ["end"], ["at"], ["john"], ["f"], ["kennedy"], ["international"], ["airport"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["number", "NN"], ["of", "IN"], ["route", "NN"], ["that", "WDT"], ["end", "VBP"], ["at", "IN"], ["john", "NN"], ["f", "NN"], ["kennedy", "VBD"], ["international", "JJ"], ["airport", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(2) A(0) C(10) T(1)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "region0", "''", ")", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good restaurants in the bay area ?", "question_toks": ["give", "me", "some", "good", "restaurant", "in", "bay", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"region0\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "some", "good", "restaurants", "in", "the", "bay", "area", "?"], "question_arg": [["give"], ["me"], ["some"], ["good"], ["restaurant"], ["in"], ["bay"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["some", "DT"], ["good", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["bay", "JJ"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(3) T(0) Filter(5) A(0) C(7) T(1)"}, {"db_id": "concert_singer", "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "YEAR", "FROM", "concert", "GROUP", "BY", "YEAR", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "year", "from", "concert", "group", "by", "year", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which year has most number of concerts?", "question_toks": ["which", "year", "ha", "most", "number", "of", "concert", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 19, false], null]]]], "where": [], "groupBy": [[0, 19, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["Which", "year", "has", "most", "number", "of", "concerts", "?"], "question_arg": [["which"], ["year"], ["ha"], ["most"], ["number"], ["of"], ["concert"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["year", "NN"], ["ha", "VBZ"], ["most", "JJS"], ["number", "NN"], ["of", "IN"], ["concert", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(17) T(2) Sup(0) A(3) C(0) T(2)"}, {"db_id": "concert_singer", "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "FROM", "singer", "WHERE", "country", "=", "'France", "'"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "min", "(", "age", ")", ",", "max", "(", "age", ")", "from", "singer", "where", "country", "=", "value"], "question": "What is the average, minimum, and maximum age of all singers from France?", "question_toks": ["what", "is", "average", ",", "minimum", ",", "and", "maximum", "age", "of", "all", "singer", "from", "france", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 13, false], null]], [2, [0, [0, 13, false], null]], [1, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["What", "is", "the", "average", ",", "minimum", ",", "and", "maximum", "age", "of", "all", "singers", "from", "France", "?"], "question_arg": [["what"], ["is", "male"], ["average"], [","], ["minimum"], [","], ["and"], ["maximum"], ["age"], ["of"], ["all"], ["singer"], ["from"], ["france"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["col"], ["NONE"], ["agg"], ["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["country"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], [",", ","], ["minimum", "JJ"], [",", ","], ["and", "CC"], ["maximum", "JJ"], ["age", "NN"], ["of", "IN"], ["all", "DT"], ["singer", "NN"], ["from", "IN"], ["france", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(2) A(5) C(12) T(1) A(2) C(12) T(1) A(1) C(12) T(1) Filter(2) A(0) C(9) T(1)"}, {"db_id": "geo", "query": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";", "query_toks": ["SELECT", "COUNT", "(", "border", ")", "FROM", "border_info", "WHERE", "state_name", "=", "``", "kentucky", "''", ";"], "query_toks_no_value": ["select", "count", "(", "border", ")", "from", "border_info", "where", "state_name", "=", "value"], "question": "how many states does kentucky border", "question_toks": ["how", "many", "state", "doe", "kentucky", "border"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"kentucky\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "does", "kentucky", "border"], "question_arg": [["how"], ["many"], ["state"], ["doe"], ["kentucky"], ["border"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["doe", "NNS"], ["kentucky", "VBD"], ["border", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "flight_4", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "WHERE", "T1.country", "=", "'China", "'", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "where", "t1", ".", "country", "=", "value", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the busiest source airport that runs most number of routes in China.", "question_toks": ["find", "busiest", "source", "airport", "that", "run", "most", "number", "of", "route", "in", "china", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"China\"", null]], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "busiest", "source", "airport", "that", "runs", "most", "number", "of", "routes", "in", "China", "."], "question_arg": [["find"], ["busiest"], ["source", "airport"], ["that"], ["run"], ["most"], ["number"], ["of"], ["route"], ["in"], ["china"], ["."]], "question_arg_type": [["NONE"], ["MOST"], ["col"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["name"], ["NONE"]], "nltk_pos": [["find", "VB"], ["busiest", "JJS"], ["source", "NN"], ["airport", "NN"], ["that", "WDT"], ["run", "VBZ"], ["most", "RBS"], ["number", "NN"], ["of", "IN"], ["route", "NN"], ["in", "IN"], ["china", "NN"], [".", "."]], "rule_label": "Root1(3) Root(0) Sel(0) N(0) A(0) C(10) T(1) Sup(0) A(3) C(0) T(0) Filter(2) A(0) C(12) T(1)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.DestAirport", "=", "``", "ASY", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "destairport", "=", "value"], "question": "Count the number of United Airlines flights arriving in ASY Airport.", "question_toks": ["count", "number", "of", "united", "airline", "flight", "arriving", "in", "asy", "airport", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 13, false], null], "\"ASY\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Count", "the", "number", "of", "United", "Airlines", "flights", "arriving", "in", "ASY", "Airport", "."], "question_arg": [["count"], ["flight", "number"], ["of"], ["united"], ["airline"], ["flight"], ["arriving"], ["in"], ["asy"], ["airport"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["count", "NN"], ["number", "NN"], ["of", "IN"], ["united", "JJ"], ["airline", "NN"], ["flight", "NN"], ["arriving", "VBG"], ["in", "IN"], ["asy", "JJ"], ["airport", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(0) Filter(2) A(0) C(2) T(0) Filter(2) A(0) C(12) T(2)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) AND area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) ) ORDER BY population DESC LIMIT 1;", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "mississippi", "''", ")", "AND", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "mississippi", "''", ")", ")", ")", "ORDER", "BY", "population", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "river_name", "=", "value", ")", "and", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", "where", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "river_name", "=", "value", ")", ")", ")", "order", "by", "population", "desc", "limit", "value"], "question": "what is the largest city in smallest state through which the mississippi runs", "question_toks": ["what", "is", "largest", "city", "in", "smallest", "state", "through", "which", "mississippi", "run"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"mississippi\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"mississippi\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 8, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "largest", "city", "in", "smallest", "state", "through", "which", "the", "mississippi", "runs"], "question_arg": [["what"], ["is"], ["largest"], ["city"], ["in"], ["smallest"], ["state"], ["through"], ["which"], ["mississippi"], ["run"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["largest", "JJS"], ["city", "NN"], ["in", "IN"], ["smallest", "JJ"], ["state", "NN"], ["through", "IN"], ["which", "WDT"], ["mississippi", "NN"], ["run", "NN"]], "rule_label": "Root1(3) Root(0) Sel(0) N(0) A(0) C(7) T(1) Sup(0) A(0) C(2) T(1) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6) Filter(11) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(2) C(3) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "geo", "query": "SELECT density FROM state WHERE state_name  =  \"wyoming\";", "query_toks": ["SELECT", "density", "FROM", "state", "WHERE", "state_name", "=", "``", "wyoming", "''", ";"], "query_toks_no_value": ["select", "density", "from", "state", "where", "state_name", "=", "value"], "question": "what is the population density of wyoming", "question_toks": ["what", "is", "population", "density", "of", "wyoming"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"wyoming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "population", "density", "of", "wyoming"], "question_arg": [["what"], ["is"], ["population"], ["density"], ["of"], ["wyoming"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["population", "JJ"], ["density", "NN"], ["of", "IN"], ["wyoming", "VBG"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "network_2", "query": "SELECT name ,  job FROM Person ORDER BY name", "query_toks": ["SELECT", "name", ",", "job", "FROM", "Person", "ORDER", "BY", "name"], "query_toks_no_value": ["select", "name", ",", "job", "from", "person", "order", "by", "name"], "question": "list the name, job title of all people ordered by their names.", "question_toks": ["list", "name", ",", "job", "title", "of", "all", "people", "ordered", "by", "their", "name", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 1, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["list", "the", "name", ",", "job", "title", "of", "all", "people", "ordered", "by", "their", "names", "."], "question_arg": [["list"], ["name"], [","], ["job"], ["title"], ["of"], ["all"], ["people"], ["ordered"], ["by"], ["their"], ["name"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["list", "NN"], ["name", "NN"], [",", ","], ["job", "NN"], ["title", "NN"], ["of", "IN"], ["all", "DT"], ["people", "NNS"], ["ordered", "VBN"], ["by", "IN"], ["their", "PRP$"], ["name", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(1) A(0) C(1) T(0) A(0) C(5) T(0) Order(1) A(0) C(1) T(0)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", "WHERE", "state_name", "=", "``", "alaska", "''", ")", "AND", "state_name", "=", "``", "alaska", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", "where", "state_name", "=", "value", ")", "and", "state_name", "=", "value"], "question": "how many people live in the biggest city in alaska state", "question_toks": ["how", "many", "people", "live", "in", "biggest", "city", "in", "alaska", "state"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"alaska\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 10, false], null], "\"alaska\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "people", "live", "in", "the", "biggest", "city", "in", "alaska", "state"], "question_arg": [["how"], ["many"], ["people"], ["live"], ["in"], ["biggest"], ["city"], ["in"], ["alaska"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["people", "NNS"], ["live", "VBP"], ["in", "IN"], ["biggest", "JJS"], ["city", "NN"], ["in", "IN"], ["alaska", "JJ"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(0) Filter(11) A(0) C(2) T(1) Root(3) Sel(0) N(0) A(1) C(2) T(1) Filter(2) A(0) C(1) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "pilot_record", "query": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID", "query_toks": ["SELECT", "T3.Pilot_name", ",", "T2.Model", "FROM", "pilot_record", "AS", "T1", "JOIN", "aircraft", "AS", "T2", "ON", "T1.Aircraft_ID", "=", "T2.Aircraft_ID", "JOIN", "pilot", "AS", "T3", "ON", "T1.Pilot_ID", "=", "T3.Pilot_ID"], "query_toks_no_value": ["select", "t3", ".", "pilot_name", ",", "t2", ".", "model", "from", "pilot_record", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aircraft_id", "=", "t2", ".", "aircraft_id", "join", "pilot", "as", "t3", "on", "t1", ".", "pilot_id", "=", "t3", ".", "pilot_id"], "question": "Show the names of pilots and models of aircrafts they have flied with.", "question_toks": ["show", "name", "of", "pilot", "and", "model", "of", "aircraft", "they", "have", "flied", "with", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 17, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "pilot id", "aircraft id", "date"], "table_names": ["aircraft", "pilot", "pilot record"], "col_set": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "date"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"18": 1, "1": 1, "17": 17, "8": 8}, "origin_question_toks": ["Show", "the", "names", "of", "pilots", "and", "models", "of", "aircrafts", "they", "have", "flied", "with", "."], "question_arg": [["show"], ["pilot", "name"], ["of"], ["pilot"], ["and"], ["model"], ["of"], ["aircraft"], ["they"], ["have"], ["flied"], ["with"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["of", "IN"], ["pilot", "NN"], ["and", "CC"], ["model", "NN"], ["of", "IN"], ["aircraft", "NN"], ["they", "PRP"], ["have", "VBP"], ["flied", "VBN"], ["with", "IN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(9) T(1) A(0) C(4) T(0)"}, {"db_id": "network_2", "query": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "gender", "=", "'male", "'", "AND", "age", "=", "(", "SELECT", "min", "(", "age", ")", "FROM", "person", "WHERE", "gender", "=", "'male", "'", ")"], "query_toks_no_value": ["select", "name", "from", "person", "where", "gender", "=", "value", "and", "age", "=", "(", "select", "min", "(", "age", ")", "from", "person", "where", "gender", "=", "value", ")"], "question": "Who is the youngest male?", "question_toks": ["who", "is", "youngest", "male", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"male\"", null], "and", [false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"male\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Who", "is", "the", "youngest", "male", "?"], "question_arg": [["who"], ["is"], ["youngest"], ["male"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"]], "nltk_pos": [["who", "WP"], ["is", "VBZ"], ["youngest", "JJS"], ["male", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(2) A(0) C(4) T(0) Filter(11) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(2) C(2) T(0) Filter(2) A(0) C(4) T(0)"}, {"db_id": "flight_4", "query": "SELECT count(*) FROM airlines", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airlines"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines"], "question": "What is the total number of airlines?", "question_toks": ["what", "is", "total", "number", "of", "airline", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "total", "number", "of", "airlines", "?"], "question_arg": [["what"], ["is"], ["total"], ["number"], ["of"], ["airline"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["total", "JJ"], ["number", "NN"], ["of", "IN"], ["airline", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(2)"}, {"db_id": "theme_gallery", "query": "SELECT count(*) FROM artist", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "artist"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "artist"], "question": "How many artists do we have?", "question_toks": ["how", "many", "artist", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["How", "many", "artists", "do", "we", "have", "?"], "question_arg": [["how"], ["many"], ["artist"], ["do"], ["we"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["artist", "NN"], ["do", "VBP"], ["we", "PRP"], ["have", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(0)"}, {"db_id": "icfp_1", "query": "SELECT count(*) FROM authors", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "authors"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "authors"], "question": "Count the number of authors.", "question_toks": ["count", "number", "of", "author", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Count", "the", "number", "of", "authors", "."], "question_arg": [["author", "count"], ["number"], ["of"], ["author"], ["."]], "question_arg_type": [["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["count", "NN"], ["number", "NN"], ["of", "IN"], ["author", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(1)"}, {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where can i eat some good french food in the yosemite and mono lake area ?", "question_toks": ["where", "can", "i", "eat", "some", "good", "french", "food", "in", "yosemite", "and", "mono", "lake", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"yosemite and mono lake area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "can", "i", "eat", "some", "good", "french", "food", "in", "the", "yosemite", "and", "mono", "lake", "area", "?"], "question_arg": [["where"], ["can"], ["i"], ["eat"], ["some"], ["good"], ["french"], ["food", "type"], ["in"], ["yosemite"], ["and"], ["mono"], ["lake"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["can", "MD"], ["i", "VB"], ["eat", "VB"], ["some", "DT"], ["good", "JJ"], ["french", "JJ"], ["food", "NN"], ["in", "IN"], ["yosemite", "NN"], ["and", "CC"], ["mono", "JJ"], ["lake", "NN"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "where is the best restaurant in bay area for american food ?", "question_toks": ["where", "is", "best", "restaurant", "in", "bay", "area", "for", "american", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"american\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"american\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "is", "the", "best", "restaurant", "in", "bay", "area", "for", "american", "food", "?"], "question_arg": [["where"], ["is"], ["best"], ["restaurant"], ["in"], ["bay"], ["area"], ["for"], ["american"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["best", "RBS"], ["restaurant", "NN"], ["in", "IN"], ["bay", "JJ"], ["area", "NN"], ["for", "IN"], ["american", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(1) C(7) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(2) A(0) C(6) T(1)"}, {"db_id": "geo", "query": "SELECT mountain_altitude FROM mountain WHERE mountain_name  =  \"mckinley\";", "query_toks": ["SELECT", "mountain_altitude", "FROM", "mountain", "WHERE", "mountain_name", "=", "``", "mckinley", "''", ";"], "query_toks_no_value": ["select", "mountain_altitude", "from", "mountain", "where", "mountain_name", "=", "value"], "question": "what is the height of mount mckinley", "question_toks": ["what", "is", "height", "of", "mount", "mckinley"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"mckinley\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "height", "of", "mount", "mckinley"], "question_arg": [["what"], ["is"], ["height"], ["of"], ["mount"], ["mckinley"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["height", "NN"], ["of", "IN"], ["mount", "NN"], ["mckinley", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(15) T(5) Filter(2) A(0) C(14) T(5)"}, {"db_id": "singer", "query": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1", "query_toks": ["SELECT", "T1.Name", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "GROUP", "BY", "T1.Name", "HAVING", "COUNT", "(", "*", ")", ">", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t1", ".", "name", "having", "count", "(", "*", ")", ">", "value"], "question": "What are the names of the singers that have more than one songs?", "question_toks": ["what", "are", "name", "of", "singer", "that", "have", "more", "than", "one", "song", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [[false, 3, [0, [3, 0, false], null], 1.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "singers", "that", "have", "more", "than", "one", "songs", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["singer"], ["that"], ["have"], ["more"], ["than"], ["one"], ["song"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["singer", "NN"], ["that", "WDT"], ["have", "VBP"], ["more", "JJR"], ["than", "IN"], ["one", "CD"], ["song", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(5) A(3) C(0) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"colorado\" );", "query_toks": ["SELECT", "state_name", "FROM", "highlow", "WHERE", "highest_elevation", ">", "(", "SELECT", "highest_elevation", "FROM", "highlow", "WHERE", "state_name", "=", "``", "colorado", "''", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "highlow", "where", "highest_elevation", ">", "(", "select", "highest_elevation", "from", "highlow", "where", "state_name", "=", "value", ")"], "question": "which states have points higher than the highest point in colorado", "question_toks": ["which", "state", "have", "point", "higher", "than", "highest", "point", "in", "colorado"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"colorado\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "states", "have", "points", "higher", "than", "the", "highest", "point", "in", "colorado"], "question_arg": [["which"], ["state"], ["have"], ["point"], ["higher"], ["than"], ["highest", "point"], ["in"], ["colorado"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["have", "VBP"], ["point", "NN"], ["higher", "JJR"], ["than", "IN"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["colorado", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(13) A(0) C(9) T(3) Root(3) Sel(0) N(0) A(0) C(9) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "network_2", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'", "query_toks": ["SELECT", "T1.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "=", "'Bob", "'"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "=", "value"], "question": "What are the names of all of Bob's friends?", "question_toks": ["what", "are", "name", "of", "all", "of", "bob", "'s", "friend", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"Bob\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["What", "are", "the", "names", "of", "all", "of", "Bob", "'s", "friends", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["all"], ["of"], ["bob"], ["'s"], ["friend"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["of", "IN"], ["bob", "NN"], ["'s", "POS"], ["friend", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(6) T(1)"}, {"db_id": "geo", "query": "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ;", "query_toks": ["SELECT", "t1.capital", "FROM", "highlow", "AS", "t2", "JOIN", "state", "AS", "t1", "ON", "t1.state_name", "=", "t2.state_name", "WHERE", "t2.lowest_elevation", "=", "(", "SELECT", "MIN", "(", "lowest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "t1", ".", "capital", "from", "highlow", "as", "t2", "join", "state", "as", "t1", "on", "t1", ".", "state_name", "=", "t2", ".", "state_name", "where", "t2", ".", "lowest_elevation", "=", "(", "select", "min", "(", "lowest_elevation", ")", "from", "highlow", ")"], "question": "what is capital of the state with the lowest point", "question_toks": ["what", "is", "capital", "of", "state", "with", "lowest", "point"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "capital", "of", "the", "state", "with", "the", "lowest", "point"], "question_arg": [["what"], ["is"], ["capital"], ["of"], ["state"], ["with"], ["lowest", "point"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["capital", "NN"], ["of", "IN"], ["state", "NN"], ["with", "IN"], ["lowest", "JJS"], ["point", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(11) A(0) C(12) T(3) Root(5) Sel(0) N(0) A(2) C(12) T(3)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "city_name", "=", "``", "boulder", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "city_name", "=", "value"], "question": "what is the population in boulder", "question_toks": ["what", "is", "population", "in", "boulder"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"boulder\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "population", "in", "boulder"], "question_arg": [["what"], ["is"], ["population"], ["in"], ["boulder"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["population", "NN"], ["in", "IN"], ["boulder", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "icfp_1", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\"", "query_toks": ["SELECT", "DISTINCT", "t3.name", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t1.fname", "=", "``", "Matthias", "''", "AND", "t1.lname", "=", "``", "Blume", "''"], "query_toks_no_value": ["select", "distinct", "t3", ".", "name", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t1", ".", "fname", "=", "value", "and", "t1", ".", "lname", "=", "value"], "question": "What is the name of the institution that \"Matthias Blume\" belongs to?", "question_toks": ["what", "is", "name", "of", "institution", "that", "'", "matthias", "blume", "'", "belongs", "to", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Matthias\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Blume\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "institution", "that", "``", "Matthias", "Blume", "''", "belongs", "to", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["institution"], ["that"], ["'"], ["matthias"], ["blume"], ["'"], ["belongs"], ["to"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["institution", "NN"], ["that", "IN"], ["'", "''"], ["matthias", "JJ"], ["blume", "NN"], ["'", "''"], ["belongs", "NNS"], ["to", "TO"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(2) A(0) C(5) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  >  150000;", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", ">", "150000", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", ">", "value"], "question": "what are the major cities in the usa", "question_toks": ["what", "are", "major", "city", "in", "usa"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 150000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "major", "cities", "in", "the", "usa"], "question_arg": [["what"], ["are"], ["major"], ["city"], ["in"], ["usa"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["major", "JJ"], ["city", "NN"], ["in", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(5) A(0) C(2) T(1)"}, {"db_id": "flight_1", "query": "SELECT eid FROM Employee WHERE salary  >  100000", "query_toks": ["SELECT", "eid", "FROM", "Employee", "WHERE", "salary", ">", "100000"], "query_toks_no_value": ["select", "eid", "from", "employee", "where", "salary", ">", "value"], "question": "What is the id of every employee who has at least a salary of  100000?", "question_toks": ["what", "is", "id", "of", "every", "employee", "who", "ha", "at", "least", "a", "salary", "of", "100000", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 3, [0, [0, 14, false], null], 100000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "id", "of", "every", "employee", "who", "has", "at", "least", "a", "salary", "of", "100000", "?"], "question_arg": [["what"], ["is"], ["id"], ["of"], ["every"], ["employee"], ["who"], ["ha"], ["at"], ["least"], ["a"], ["salary"], ["of"], ["100000"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["col"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["id", "NN"], ["of", "IN"], ["every", "DT"], ["employee", "NN"], ["who", "WP"], ["ha", "VBZ"], ["at", "IN"], ["least", "JJS"], ["a", "DT"], ["salary", "NN"], ["of", "IN"], ["100000", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(2) Filter(5) A(0) C(11) T(2)"}, {"db_id": "network_2", "query": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "avg", "(", "T1.age", ")", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "GROUP", "BY", "T2.name", "ORDER", "BY", "avg", "(", "T1.age", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "avg", "(", "t1", ".", "age", ")", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "group", "by", "t2", ".", "name", "order", "by", "avg", "(", "t1", ".", "age", ")", "desc", "limit", "value"], "question": "What is the name of the person who has the oldest average age for their friends, and what is that average age?", "question_toks": ["what", "is", "name", "of", "person", "who", "ha", "oldest", "average", "age", "for", "their", "friend", ",", "and", "what", "is", "that", "average", "age", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]], [5, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [5, 2, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "person", "who", "has", "the", "oldest", "average", "age", "for", "their", "friends", ",", "and", "what", "is", "that", "average", "age", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["person"], ["who"], ["ha"], ["oldest"], ["average"], ["age"], ["for"], ["their"], ["friend"], [","], ["and"], ["what"], ["is"], ["that"], ["average"], ["age"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["agg"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["person", "NN"], ["who", "WP"], ["ha", "VBZ"], ["oldest", "JJS"], ["average", "JJ"], ["age", "NN"], ["for", "IN"], ["their", "PRP$"], ["friend", "NN"], [",", ","], ["and", "CC"], ["what", "WP"], ["is", "VBZ"], ["that", "DT"], ["average", "JJ"], ["age", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(1) T(1) A(5) C(2) T(0) Sup(0) A(5) C(2) T(0)"}, {"db_id": "flight_4", "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "routes", "AS", "T1", "JOIN", "airports", "AS", "T2", "ON", "T1.dst_apid", "=", "T2.apid", "WHERE", "T2.country", "=", "'Italy", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "routes", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "dst_apid", "=", "t2", ".", "apid", "where", "t2", ".", "country", "=", "value"], "question": "Find the number of routes with destination airports in Italy.", "question_toks": ["find", "number", "of", "route", "with", "destination", "airport", "in", "italy", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Italy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "number", "of", "routes", "with", "destination", "airports", "in", "Italy", "."], "question_arg": [["find"], ["number"], ["of"], ["route"], ["with"], ["destination", "airport"], ["in"], ["italy"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["country"], ["NONE"]], "nltk_pos": [["find", "VB"], ["number", "NN"], ["of", "IN"], ["route", "NN"], ["with", "IN"], ["destination", "NN"], ["airport", "NN"], ["in", "IN"], ["italy", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(2) A(0) C(12) T(1)"}, {"db_id": "geo", "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";", "query_toks": ["SELECT", "highest_point", "FROM", "highlow", "WHERE", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "highest_point", "from", "highlow", "where", "state_name", "=", "value"], "question": "what is the highest mountain in texas", "question_toks": ["what", "is", "highest", "mountain", "in", "texas"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "highest", "mountain", "in", "texas"], "question_arg": [["what"], ["is"], ["highest"], ["mountain"], ["in"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["mountain", "NN"], ["in", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "geo", "query": "SELECT density FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );", "query_toks": ["SELECT", "density", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", ")", ")", ";"], "query_toks_no_value": ["select", "density", "from", "state", "where", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", ")", ")"], "question": "which is the density of the state that the largest river in the united states runs through", "question_toks": ["which", "is", "density", "of", "state", "that", "largest", "river", "in", "united", "state", "run", "through"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "is", "the", "density", "of", "the", "state", "that", "the", "largest", "river", "in", "the", "united", "states", "runs", "through"], "question_arg": [["which"], ["is"], ["density"], ["of"], ["state"], ["that"], ["largest"], ["river"], ["in"], ["united"], ["state"], ["run"], ["through"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["is", "VBZ"], ["density", "NN"], ["of", "IN"], ["state", "NN"], ["that", "IN"], ["largest", "JJS"], ["river", "NN"], ["in", "IN"], ["united", "JJ"], ["state", "NN"], ["run", "NN"], ["through", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(1) C(17) T(6)"}, {"db_id": "soccer_2", "query": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos", "query_toks": ["SELECT", "max", "(", "T1.HS", ")", ",", "pPos", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T1.HS", ">", "1000", "GROUP", "BY", "T2.pPos"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "hs", ")", ",", "ppos", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t1", ".", "hs", ">", "value", "group", "by", "t2", ".", "ppos"], "question": "For each position, what is the maximum number of  hours for students who spent more than 1000 hours training?", "question_toks": ["for", "each", "position", ",", "what", "is", "maximum", "number", "of", "hour", "for", "student", "who", "spent", "more", "than", "1000", "hour", "training", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[1, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 1000.0, null]], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["For", "each", "position", ",", "what", "is", "the", "maximum", "number", "of", "hours", "for", "students", "who", "spent", "more", "than", "1000", "hours", "training", "?"], "question_arg": [["for"], ["each"], ["player", "position"], [","], ["what"], ["is"], ["maximum"], ["number"], ["of"], ["training", "hour"], ["for"], ["student"], ["who"], ["spent"], ["more"], ["than"], ["1000"], ["training", "hour"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["agg"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["col"], ["NONE"]], "nltk_pos": [["for", "IN"], ["each", "DT"], ["position", "NN"], [",", ","], ["what", "WP"], ["is", "VBZ"], ["maximum", "JJ"], ["number", "NN"], ["of", "IN"], ["hour", "NN"], ["for", "IN"], ["student", "NN"], ["who", "WP"], ["spent", "VBD"], ["more", "JJR"], ["than", "IN"], ["1000", "CD"], ["hour", "NN"], ["training", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(1) C(7) T(1) A(0) C(8) T(2) Filter(5) A(0) C(7) T(1)"}, {"db_id": "flight_1", "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3", "query_toks": ["SELECT", "name", "FROM", "Employee", "ORDER", "BY", "salary", "ASC", "LIMIT", "3"], "query_toks_no_value": ["select", "name", "from", "employee", "order", "by", "salary", "asc", "limit", "value"], "question": "Show the name of employees with three lowest salaries.", "question_toks": ["show", "name", "of", "employee", "with", "three", "lowest", "salary", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "the", "name", "of", "employees", "with", "three", "lowest", "salaries", "."], "question_arg": [["show"], ["name"], ["of"], ["employee"], ["with"], ["three"], ["lowest"], ["salary"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["col"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["of", "IN"], ["employee", "NN"], ["with", "IN"], ["three", "CD"], ["lowest", "JJS"], ["salary", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(9) T(2) Sup(1) A(0) C(11) T(2)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "density", "=", "(", "SELECT", "MIN", "(", "density", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "density", "=", "(", "select", "min", "(", "density", ")", "from", "state", ")"], "question": "which state has the lowest population density", "question_toks": ["which", "state", "ha", "lowest", "population", "density"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "lowest", "population", "density"], "question_arg": [["which"], ["state"], ["ha"], ["lowest"], ["population"], ["density"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["col"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["lowest", "JJS"], ["population", "NN"], ["density", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(6) T(0) Root(5) Sel(0) N(0) A(2) C(6) T(0)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", ")", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", ")"], "question": "how many citizens does the biggest city have in the usa", "question_toks": ["how", "many", "citizen", "doe", "biggest", "city", "have", "in", "usa"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "citizens", "does", "the", "biggest", "city", "have", "in", "the", "usa"], "question_arg": [["how"], ["many"], ["citizen"], ["doe"], ["biggest"], ["city"], ["have"], ["in"], ["usa"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["citizen", "VBP"], ["doe", "JJ"], ["biggest", "JJS"], ["city", "NN"], ["have", "VBP"], ["in", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.name  =  \"denny\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.name", "=", "``", "denny", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "name", "=", "value"], "question": "how many denny are there in the bay area ?", "question_toks": ["how", "many", "denny", "are", "there", "in", "bay", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"denny\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["how", "many", "denny", "are", "there", "in", "the", "bay", "area", "?"], "question_arg": [["how"], ["many"], ["denny"], ["are"], ["there"], ["in"], ["bay"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["denny", "NN"], ["are", "VBP"], ["there", "RB"], ["in", "IN"], ["bay", "NN"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(2) A(0) C(5) T(1)"}, {"db_id": "network_2", "query": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Person", "WHERE", "age", ">", "(", "SELECT", "max", "(", "age", ")", "FROM", "person", "WHERE", "job", "=", "'engineer", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "person", "where", "age", ">", "(", "select", "max", "(", "age", ")", "from", "person", "where", "job", "=", "value", ")"], "question": "How many people are older than every engineer?", "question_toks": ["how", "many", "people", "are", "older", "than", "every", "engineer", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"engineer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["How", "many", "people", "are", "older", "than", "every", "engineer", "?"], "question_arg": [["how"], ["many"], ["people"], ["are"], ["older"], ["than"], ["every"], ["engineer"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["people", "NNS"], ["are", "VBP"], ["older", "JJR"], ["than", "IN"], ["every", "DT"], ["engineer", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(13) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(1) C(2) T(0) Filter(2) A(0) C(5) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some restaurants good for french food ?", "question_toks": ["give", "me", "some", "restaurant", "good", "for", "french", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "some", "restaurants", "good", "for", "french", "food", "?"], "question_arg": [["give"], ["me"], ["some"], ["restaurant"], ["good"], ["for"], ["french"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["some", "DT"], ["restaurant", "VBP"], ["good", "JJ"], ["for", "IN"], ["french", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "sourceairport", "=", "value"], "question": "Return the number of United Airlines flights leaving from AHD Airport.", "question_toks": ["return", "number", "of", "united", "airline", "flight", "leaving", "from", "ahd", "airport", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Return", "the", "number", "of", "United", "Airlines", "flights", "leaving", "from", "AHD", "Airport", "."], "question_arg": [["return"], ["flight", "number"], ["of"], ["united"], ["airline"], ["flight"], ["leaving"], ["from"], ["ahd"], ["airport"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["return", "NN"], ["number", "NN"], ["of", "IN"], ["united", "JJ"], ["airline", "NN"], ["flight", "NN"], ["leaving", "VBG"], ["from", "IN"], ["ahd", "JJ"], ["airport", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(0) Filter(2) A(0) C(2) T(0) Filter(2) A(0) C(11) T(2)"}, {"db_id": "geo", "query": "SELECT COUNT ( t1.river_name ) FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );", "query_toks": ["SELECT", "COUNT", "(", "t1.river_name", ")", "FROM", "highlow", "AS", "t2", "JOIN", "river", "AS", "t1", "ON", "t1.traverse", "=", "t2.state_name", "WHERE", "t2.highest_elevation", "=", "(", "SELECT", "MAX", "(", "highest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "count", "(", "t1", ".", "river_name", ")", "from", "highlow", "as", "t2", "join", "river", "as", "t1", "on", "t1", ".", "traverse", "=", "t2", ".", "state_name", "where", "t2", ".", "highest_elevation", "=", "(", "select", "max", "(", "highest_elevation", ")", "from", "highlow", ")"], "question": "how many rivers are in the state with the highest point.", "question_toks": ["how", "many", "river", "are", "in", "state", "with", "highest", "point", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 29, false], null], [0, 13, false], null]]}, "select": [false, [[3, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "rivers", "are", "in", "the", "state", "with", "the", "highest", "point", "."], "question_arg": [["how"], ["many"], ["river"], ["are"], ["in"], ["state"], ["with"], ["highest", "point"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["river", "NN"], ["are", "VBP"], ["in", "IN"], ["state", "NN"], ["with", "IN"], ["highest", "JJS"], ["point", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(16) T(6) Filter(11) A(0) C(9) T(3) Root(5) Sel(0) N(0) A(1) C(9) T(3)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", "WHERE", "state_name", "=", "``", "wyoming", "''", ")", "AND", "state_name", "=", "``", "wyoming", "''", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", "where", "state_name", "=", "value", ")", "and", "state_name", "=", "value"], "question": "what cities in wyoming have the highest populations", "question_toks": ["what", "city", "in", "wyoming", "have", "highest", "population"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"wyoming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 10, false], null], "\"wyoming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "cities", "in", "wyoming", "have", "the", "highest", "populations"], "question_arg": [["what"], ["city"], ["in"], ["wyoming"], ["have"], ["highest"], ["population"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["city", "NN"], ["in", "IN"], ["wyoming", "VBG"], ["have", "VBP"], ["highest", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(0) Filter(11) A(0) C(2) T(1) Root(3) Sel(0) N(0) A(1) C(2) T(1) Filter(2) A(0) C(1) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "theme_gallery", "query": "SELECT DISTINCT country FROM artist", "query_toks": ["SELECT", "DISTINCT", "country", "FROM", "artist"], "query_toks_no_value": ["select", "distinct", "country", "from", "artist"], "question": "Return the different countries for artists.", "question_toks": ["return", "different", "country", "for", "artist", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Return", "the", "different", "countries", "for", "artists", "."], "question_arg": [["return"], ["different"], ["country"], ["for"], ["artist"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["return", "VB"], ["different", "JJ"], ["country", "NN"], ["for", "IN"], ["artist", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(0) C(3) T(0)"}, {"db_id": "flight_1", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5", "query_toks": ["SELECT", "T2.name", "FROM", "Certificate", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T2.aid", "=", "T1.aid", "WHERE", "T2.distance", ">", "5000", "GROUP", "BY", "T1.aid", "ORDER", "BY", "count", "(", "*", ")", ">", "=", "5"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "certificate", "as", "t1", "join", "aircraft", "as", "t2", "on", "t2", ".", "aid", "=", "t1", ".", "aid", "where", "t2", ".", "distance", ">", "value", "group", "by", "t1", ".", "aid", "order", "by", "count", "(", "*", ")", ">", "=", "value"], "question": "What is the name and distance of every aircraft that can cover a distance of more than 5000 and which at least 5 people can fly?", "question_toks": ["what", "is", "name", "and", "distance", "of", "every", "aircraft", "that", "can", "cover", "a", "distance", "of", "more", "than", "5000", "and", "which", "at", "least", "5", "people", "can", "fly", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], 5000.0, null]], "groupBy": [[0, 16, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "name", "and", "distance", "of", "every", "aircraft", "that", "can", "cover", "a", "distance", "of", "more", "than", "5000", "and", "which", "at", "least", "5", "people", "can", "fly", "?"], "question_arg": [["what"], ["is"], ["name"], ["and"], ["distance"], ["of"], ["every"], ["aircraft"], ["that"], ["can"], ["cover"], ["a"], ["distance"], ["of"], ["more"], ["than"], ["5000"], ["and"], ["which"], ["at"], ["least"], ["5"], ["people"], ["can"], ["fly"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["value"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["and", "CC"], ["distance", "NN"], ["of", "IN"], ["every", "DT"], ["aircraft", "NN"], ["that", "WDT"], ["can", "MD"], ["cover", "VB"], ["a", "DT"], ["distance", "NN"], ["of", "IN"], ["more", "JJR"], ["than", "IN"], ["5000", "CD"], ["and", "CC"], ["which", "WDT"], ["at", "IN"], ["least", "JJS"], ["5", "CD"], ["people", "NNS"], ["can", "MD"], ["fly", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(1) Sel(0) N(0) A(0) C(9) T(1) Filter(5) A(0) C(4) T(1) Order(1) A(3) C(0) T(3)"}, {"db_id": "soccer_2", "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3", "query_toks": ["SELECT", "cName", "FROM", "college", "ORDER", "BY", "enr", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "cname", "from", "college", "order", "by", "enr", "desc", "limit", "value"], "question": "What are the names of schools with the top 3 largest size?", "question_toks": ["what", "are", "name", "of", "school", "with", "top", "3", "largest", "size", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "names", "of", "schools", "with", "the", "top", "3", "largest", "size", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["school"], ["with"], ["top"], ["3"], ["largest"], ["size"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["value"], ["MOST"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["school", "NN"], ["with", "IN"], ["top", "JJ"], ["3", "CD"], ["largest", "JJS"], ["size", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(1) T(0) Sup(0) A(0) C(3) T(0)"}, {"db_id": "storm_record", "query": "SELECT count(DISTINCT region_id) FROM affected_region", "query_toks": ["SELECT", "count", "(", "DISTINCT", "region_id", ")", "FROM", "affected_region"], "query_toks_no_value": ["select", "count", "(", "distinct", "region_id", ")", "from", "affected_region"], "question": "How many regions are affected?", "question_toks": ["how", "many", "region", "are", "affected", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["How", "many", "regions", "are", "affected", "?"], "question_arg": [["how"], ["many"], ["region"], ["are"], ["affected"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["region", "NN"], ["are", "VBP"], ["affected", "VBN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(7) T(2)"}, {"db_id": "soccer_2", "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName", "query_toks": ["SELECT", "T1.pName", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "ORDER", "BY", "T1.pName"], "query_toks_no_value": ["select", "t1", ".", "pname", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "order", "by", "t1", ".", "pname"], "question": "Find the name of all students who were in the tryout sorted in alphabetic order.", "question_toks": ["find", "name", "of", "all", "student", "who", "were", "in", "tryout", "sorted", "in", "alphabetic", "order", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 5, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "name", "of", "all", "students", "who", "were", "in", "the", "tryout", "sorted", "in", "alphabetic", "order", "."], "question_arg": [["find"], ["name"], ["of"], ["all"], ["student"], ["who"], ["were"], ["in"], ["tryout"], ["sorted"], ["in"], ["alphabetic"], ["order"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["student", "NN"], ["who", "WP"], ["were", "VBD"], ["in", "IN"], ["tryout", "NN"], ["sorted", "VBN"], ["in", "IN"], ["alphabetic", "JJ"], ["order", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(0) A(0) C(5) T(1) Order(1) A(0) C(5) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", ")"], "question": "what is the most populous city", "question_toks": ["what", "is", "most", "populous", "city"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "most", "populous", "city"], "question_arg": [["what"], ["is"], ["most"], ["populous"], ["city"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["most", "RBS"], ["populous", "JJ"], ["city", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", ">", "150000", "AND", "state_name", "=", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", ">", "value", "and", "state_name", "=", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")", ")"], "question": "what are the major cities in the smallest state in the us", "question_toks": ["what", "are", "major", "city", "in", "smallest", "state", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 150000.0, null], "and", [false, 2, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "major", "cities", "in", "the", "smallest", "state", "in", "the", "us"], "question_arg": [["what"], ["are"], ["major"], ["city"], ["in"], ["smallest"], ["state"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["major", "JJ"], ["city", "NN"], ["in", "IN"], ["smallest", "JJS"], ["state", "NN"], ["in", "IN"], ["u", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(0) Filter(5) A(0) C(2) T(1) Filter(11) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "soccer_2", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'", "query_toks": ["SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'striker", "'"], "query_toks_no_value": ["select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value"], "question": "Find the states of the colleges that have students in the tryout who played in striker position.", "question_toks": ["find", "state", "of", "college", "that", "have", "student", "in", "tryout", "who", "played", "in", "striker", "position", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"striker\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "states", "of", "the", "colleges", "that", "have", "students", "in", "the", "tryout", "who", "played", "in", "striker", "position", "."], "question_arg": [["find"], ["state"], ["of"], ["college"], ["that"], ["have"], ["student"], ["in"], ["tryout"], ["who"], ["played"], ["in"], ["striker"], ["player", "position"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["state", "NN"], ["of", "IN"], ["college", "NN"], ["that", "WDT"], ["have", "VBP"], ["student", "VBN"], ["in", "IN"], ["tryout", "NN"], ["who", "WP"], ["played", "VBD"], ["in", "IN"], ["striker", "NN"], ["position", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(8) T(2)"}, {"db_id": "flight_4", "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'", "query_toks": ["SELECT", "country", "FROM", "airlines", "WHERE", "name", "LIKE", "'Orbit", "%", "'"], "query_toks_no_value": ["select", "country", "from", "airlines", "where", "name", "like", "value"], "question": "What are the countries of all airlines whose names start with Orbit?", "question_toks": ["what", "are", "country", "of", "all", "airline", "whose", "name", "start", "with", "orbit", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [[false, 9, [0, [0, 19, false], null], "\"Orbit%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "are", "the", "countries", "of", "all", "airlines", "whose", "names", "start", "with", "Orbit", "?"], "question_arg": [["what"], ["are"], ["country"], ["of"], ["all"], ["airline"], ["whose"], ["name"], ["start"], ["with"], ["orbit"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["country", "NN"], ["of", "IN"], ["all", "DT"], ["airline", "NN"], ["whose", "WP$"], ["name", "JJ"], ["start", "NN"], ["with", "IN"], ["orbit", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(12) T(2) Filter(9) A(0) C(10) T(2)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "density", "=", "(", "SELECT", "MAX", "(", "density", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "density", "=", "(", "select", "max", "(", "density", ")", "from", "state", ")"], "question": "what state has the largest population density", "question_toks": ["what", "state", "ha", "largest", "population", "density"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "has", "the", "largest", "population", "density"], "question_arg": [["what"], ["state"], ["ha"], ["largest"], ["population"], ["density"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["col"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["ha", "NN"], ["largest", "JJS"], ["population", "NN"], ["density", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(6) T(0) Root(5) Sel(0) N(0) A(1) C(6) T(0)"}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "GROUP", "BY", "T2.singer_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t2", ".", "singer_id"], "question": "What are the names of the singers and number of concerts for each person?", "question_toks": ["what", "are", "name", "of", "singer", "and", "number", "of", "concert", "for", "each", "person", "?"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "singers", "and", "number", "of", "concerts", "for", "each", "person", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["singer"], ["and"], ["number"], ["of"], ["concert"], ["for"], ["each"], ["person"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["singer", "NN"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["concert", "NN"], ["for", "IN"], ["each", "DT"], ["person", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(3) T(1) A(3) C(0) T(3)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")"], "question": "what is the smallest state by area", "question_toks": ["what", "is", "smallest", "state", "by", "area"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "smallest", "state", "by", "area"], "question_arg": [["what"], ["is"], ["smallest"], ["state"], ["by"], ["area"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["smallest", "JJ"], ["state", "NN"], ["by", "IN"], ["area", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "flight_4", "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "airports", "ORDER", "BY", "elevation", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "airports", "order", "by", "elevation", "desc", "limit", "value"], "question": "What is the country of the airport with the highest elevation?", "question_toks": ["what", "is", "country", "of", "airport", "with", "highest", "elevation", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "country", "of", "the", "airport", "with", "the", "highest", "elevation", "?"], "question_arg": [["what"], ["is"], ["country"], ["of"], ["airport"], ["with"], ["highest"], ["elevation"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["country", "NN"], ["of", "IN"], ["airport", "NN"], ["with", "IN"], ["highest", "JJS"], ["elevation", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(12) T(1) Sup(0) A(0) C(15) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "density", "=", "(", "SELECT", "MAX", "(", "density", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "density", "=", "(", "select", "max", "(", "density", ")", "from", "state", ")"], "question": "how many people live in the state with the largest population density", "question_toks": ["how", "many", "people", "live", "in", "state", "with", "largest", "population", "density"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "people", "live", "in", "the", "state", "with", "the", "largest", "population", "density"], "question_arg": [["how"], ["many"], ["people"], ["live"], ["in"], ["state"], ["with"], ["largest"], ["population"], ["density"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["col"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["people", "NNS"], ["live", "VBP"], ["in", "IN"], ["state", "NN"], ["with", "IN"], ["largest", "JJS"], ["population", "NN"], ["density", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(11) A(0) C(6) T(0) Root(5) Sel(0) N(0) A(1) C(6) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some restaurants good for arabic food in mountain view ?", "question_toks": ["give", "me", "some", "restaurant", "good", "for", "arabic", "food", "in", "mountain", "view", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mountain view\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "some", "restaurants", "good", "for", "arabic", "food", "in", "mountain", "view", "?"], "question_arg": [["give"], ["me"], ["some"], ["restaurant"], ["good"], ["for"], ["arabic"], ["food", "type"], ["in"], ["mountain"], ["view"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["some", "DT"], ["restaurant", "VBP"], ["good", "JJ"], ["for", "IN"], ["arabic", "JJ"], ["food", "NN"], ["in", "IN"], ["mountain", "NN"], ["view", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "singer", "query": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name", "query_toks": ["SELECT", "T1.Name", ",", "sum", "(", "T2.Sales", ")", "FROM", "singer", "AS", "T1", "JOIN", "song", "AS", "T2", "ON", "T1.Singer_ID", "=", "T2.Singer_ID", "GROUP", "BY", "T1.Name"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "sum", "(", "t2", ".", "sales", ")", "from", "singer", "as", "t1", "join", "song", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t1", ".", "name"], "question": "For each singer name, what is the total sales for their songs?", "question_toks": ["for", "each", "singer", "name", ",", "what", "is", "total", "sale", "for", "their", "song", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [4, [0, [0, 9, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["For", "each", "singer", "name", ",", "what", "is", "the", "total", "sales", "for", "their", "songs", "?"], "question_arg": [["for"], ["each"], ["singer"], ["name"], [","], ["what"], ["is"], ["total"], ["sale"], ["for"], ["their"], ["song"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["for", "IN"], ["each", "DT"], ["singer", "NN"], ["name", "NN"], [",", ","], ["what", "WP"], ["is", "VBZ"], ["total", "JJ"], ["sale", "NN"], ["for", "IN"], ["their", "PRP$"], ["song", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(2) T(0) A(4) C(8) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";", "query_toks": ["SELECT", "state_name", "FROM", "mountain", "WHERE", "mountain_name", "=", "``", "whitney", "''", ";"], "query_toks_no_value": ["select", "state_name", "from", "mountain", "where", "mountain_name", "=", "value"], "question": "where is mount whitney located", "question_toks": ["where", "is", "mount", "whitney", "located"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"whitney\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["where", "is", "mount", "whitney", "located"], "question_arg": [["where"], ["is"], ["mount"], ["whitney"], ["located"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["mount", "JJ"], ["whitney", "NN"], ["located", "VBN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(5) Filter(2) A(0) C(14) T(5)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Flights", "AS", "T1", "JOIN", "Airports", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "WHERE", "T2.city", "=", "``", "Aberdeen", "''", "OR", "T2.city", "=", "``", "Abilene", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "or", "t2", ".", "city", "=", "value"], "question": "How many flights land in Aberdeen or Abilene?", "question_toks": ["how", "many", "flight", "land", "in", "aberdeen", "or", "abilene", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null], "or", [false, 2, [0, [0, 5, false], null], "\"Abilene\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["How", "many", "flights", "land", "in", "Aberdeen", "or", "Abilene", "?"], "question_arg": [["how"], ["many"], ["flight"], ["land"], ["in"], ["aberdeen"], ["or"], ["abilene"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["city"], ["NONE"], ["city"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["flight", "NN"], ["land", "NN"], ["in", "IN"], ["aberdeen", "JJ"], ["or", "CC"], ["abilene", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(1) Filter(2) A(0) C(5) T(1) Filter(2) A(0) C(5) T(1)"}, {"db_id": "geo", "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";", "query_toks": ["SELECT", "COUNT", "(", "river_name", ")", "FROM", "river", "WHERE", "traverse", "=", "``", "idaho", "''", ";"], "query_toks_no_value": ["select", "count", "(", "river_name", ")", "from", "river", "where", "traverse", "=", "value"], "question": "how many rivers are in idaho", "question_toks": ["how", "many", "river", "are", "in", "idaho"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"idaho\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "rivers", "are", "in", "idaho"], "question_arg": [["how"], ["many"], ["river"], ["are"], ["in"], ["idaho"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["river", "NN"], ["are", "VBP"], ["in", "IN"], ["idaho", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(16) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "flight_1", "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\"", "query_toks": ["SELECT", "T3.name", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "JOIN", "Aircraft", "AS", "T3", "ON", "T3.aid", "=", "T2.aid", "WHERE", "T1.name", "=", "``", "John", "Williams", "''"], "query_toks_no_value": ["select", "t3", ".", "name", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "join", "aircraft", "as", "t3", "on", "t3", ".", "aid", "=", "t2", ".", "aid", "where", "t1", ".", "name", "=", "value"], "question": "What are the names of all aircrafts that John Williams have certificates to be able to fly?", "question_toks": ["what", "are", "name", "of", "all", "aircraft", "that", "john", "williams", "have", "certificate", "to", "be", "able", "to", "fly", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null], "and", [false, 2, [0, [0, 9, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"John Williams\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "are", "the", "names", "of", "all", "aircrafts", "that", "John", "Williams", "have", "certificates", "to", "be", "able", "to", "fly", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["all"], ["aircraft"], ["that"], ["john"], ["williams"], ["have"], ["certificate"], ["to"], ["be"], ["able"], ["to"], ["fly"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["aircraft", "NN"], ["that", "IN"], ["john", "NN"], ["williams", "NNS"], ["have", "VBP"], ["certificate", "NN"], ["to", "TO"], ["be", "VB"], ["able", "JJ"], ["to", "TO"], ["fly", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(2) A(0) C(9) T(2)"}, {"db_id": "flight_1", "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)", "query_toks": ["SELECT", "name", "FROM", "Aircraft", "WHERE", "distance", ">", "(", "SELECT", "avg", "(", "distance", ")", "FROM", "Aircraft", ")"], "query_toks_no_value": ["select", "name", "from", "aircraft", "where", "distance", ">", "(", "select", "avg", "(", "distance", ")", "from", "aircraft", ")"], "question": "Show names for all aircrafts with distances more than the average.", "question_toks": ["show", "name", "for", "all", "aircraft", "with", "distance", "more", "than", "average", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "names", "for", "all", "aircrafts", "with", "distances", "more", "than", "the", "average", "."], "question_arg": [["show"], ["name"], ["for"], ["all"], ["aircraft"], ["with"], ["distance"], ["more"], ["than"], ["average"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["MORE"], ["NONE"], ["agg"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["for", "IN"], ["all", "DT"], ["aircraft", "NN"], ["with", "IN"], ["distance", "NN"], ["more", "JJR"], ["than", "IN"], ["average", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(13) A(0) C(4) T(1) Root(5) Sel(0) N(0) A(5) C(4) T(1)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights"], "question": "How many flights do we have?", "question_toks": ["how", "many", "flight", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["How", "many", "flights", "do", "we", "have", "?"], "question_arg": [["how"], ["many"], ["flight"], ["do"], ["we"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["flight", "NN"], ["do", "VBP"], ["we", "PRP"], ["have", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(2)"}, {"db_id": "geo", "query": "SELECT COUNT ( state_name ) FROM highlow WHERE lowest_elevation  <  ( SELECT lowest_elevation FROM highlow WHERE state_name  =  \"alabama\" );", "query_toks": ["SELECT", "COUNT", "(", "state_name", ")", "FROM", "highlow", "WHERE", "lowest_elevation", "<", "(", "SELECT", "lowest_elevation", "FROM", "highlow", "WHERE", "state_name", "=", "``", "alabama", "''", ")", ";"], "query_toks_no_value": ["select", "count", "(", "state_name", ")", "from", "highlow", "where", "lowest_elevation", "<", "(", "select", "lowest_elevation", "from", "highlow", "where", "state_name", "=", "value", ")"], "question": "count the states which have elevations lower than what alabama has", "question_toks": ["count", "state", "which", "have", "elevation", "lower", "than", "what", "alabama", "ha"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[3, [0, [0, 13, false], null]]]], "where": [[false, 4, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 17, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"alabama\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["count", "the", "states", "which", "have", "elevations", "lower", "than", "what", "alabama", "has"], "question_arg": [["count"], ["state"], ["which"], ["have"], ["elevation"], ["lower"], ["than"], ["what"], ["alabama"], ["ha"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["count", "NN"], ["state", "NN"], ["which", "WDT"], ["have", "VBP"], ["elevation", "NN"], ["lower", "JJR"], ["than", "IN"], ["what", "WP"], ["alabama", "NN"], ["ha", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(1) T(3) Filter(12) A(0) C(12) T(3) Root(3) Sel(0) N(0) A(0) C(12) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "geo", "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";", "query_toks": ["SELECT", "area", "FROM", "state", "WHERE", "state_name", "=", "``", "new", "mexico", "''", ";"], "query_toks_no_value": ["select", "area", "from", "state", "where", "state_name", "=", "value"], "question": "what is the area of new mexico in square kilometers", "question_toks": ["what", "is", "area", "of", "new", "mexico", "in", "square", "kilometer"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"new mexico\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "area", "of", "new", "mexico", "in", "square", "kilometers"], "question_arg": [["what"], ["is"], ["area"], ["of"], ["new"], ["mexico"], ["in"], ["square"], ["kilometer"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["area", "NN"], ["of", "IN"], ["new", "JJ"], ["mexico", "NN"], ["in", "IN"], ["square", "JJ"], ["kilometer", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(3) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "soccer_2", "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'", "query_toks": ["SELECT", "DISTINCT", "pName", "FROM", "Player", "WHERE", "pName", "LIKE", "'", "%", "a", "%", "'"], "query_toks_no_value": ["select", "distinct", "pname", "from", "player", "where", "pname", "like", "value"], "question": "Who are the players that have names containing the letter a?", "question_toks": ["who", "are", "player", "that", "have", "name", "containing", "letter", "a", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [true, [[0, [0, [0, 5, false], null]]]], "where": [[false, 9, [0, [0, 5, false], null], "\"%a%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Who", "are", "the", "players", "that", "have", "names", "containing", "the", "letter", "a", "?"], "question_arg": [["who"], ["are"], ["player"], ["that"], ["have"], ["name"], ["containing"], ["letter"], ["a"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["who", "WP"], ["are", "VBP"], ["player", "NN"], ["that", "WDT"], ["have", "VBP"], ["name", "VBN"], ["containing", "JJ"], ["letter", "NN"], ["a", "DT"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(1) Filter(9) A(0) C(5) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", ")"], "question": "what city in the united states has the highest population density", "question_toks": ["what", "city", "in", "united", "state", "ha", "highest", "population", "density"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "city", "in", "the", "united", "states", "has", "the", "highest", "population", "density"], "question_arg": [["what"], ["city"], ["in"], ["united"], ["state"], ["ha"], ["highest"], ["population"], ["density"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["col"]], "nltk_pos": [["what", "WP"], ["city", "NN"], ["in", "IN"], ["united", "JJ"], ["state", "NN"], ["ha", "NN"], ["highest", "JJS"], ["population", "NN"], ["density", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "limit", "value"], "question": "What is the name, city, and country of the airport with the lowest altitude?", "question_toks": ["what", "is", "name", ",", "city", ",", "and", "country", "of", "airport", "with", "lowest", "altitude", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "with", "the", "lowest", "altitude", "?"], "question_arg": [["what"], ["is"], ["name"], [","], ["city"], [","], ["and"], ["country"], ["of"], ["airport"], ["with"], ["lowest"], ["altitude"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "JJ"], [",", ","], ["city", "NN"], [",", ","], ["and", "CC"], ["country", "NN"], ["of", "IN"], ["airport", "NN"], ["with", "IN"], ["lowest", "JJS"], ["altitude", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(2) A(0) C(10) T(1) A(0) C(11) T(1) A(0) C(12) T(1) Sup(1) A(0) C(15) T(1)"}, {"db_id": "geo", "query": "SELECT MAX ( highest_elevation ) FROM highlow;", "query_toks": ["SELECT", "MAX", "(", "highest_elevation", ")", "FROM", "highlow", ";"], "query_toks_no_value": ["select", "max", "(", "highest_elevation", ")", "from", "highlow"], "question": "what is the highest elevation in the united states", "question_toks": ["what", "is", "highest", "elevation", "in", "united", "state"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "highest", "elevation", "in", "the", "united", "states"], "question_arg": [["what"], ["is"], ["highest", "elevation"], ["in"], ["united"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["elevation", "NN"], ["in", "IN"], ["united", "JJ"], ["state", "NN"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(1) C(9) T(3)"}, {"db_id": "geo", "query": "SELECT traverse FROM river;", "query_toks": ["SELECT", "traverse", "FROM", "river", ";"], "query_toks_no_value": ["select", "traverse", "from", "river"], "question": "which states have a river", "question_toks": ["which", "state", "have", "a", "river"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "states", "have", "a", "river"], "question_arg": [["which"], ["state"], ["have"], ["a"], ["river"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["have", "VBP"], ["a", "DT"], ["river", "NN"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(0) C(18) T(6)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "kentucky", "''", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "=", "value"], "question": "which states border kentucky", "question_toks": ["which", "state", "border", "kentucky"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"kentucky\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "states", "border", "kentucky"], "question_arg": [["which"], ["state"], ["border"], ["kentucky"]], "question_arg_type": [["NONE"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["border", "NN"], ["kentucky", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "network_2", "query": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'", "query_toks": ["SELECT", "name", "FROM", "person", "EXCEPT", "SELECT", "T2.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T1.job", "=", "'student", "'"], "query_toks_no_value": ["select", "name", "from", "person", "except", "select", "t2", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t1", ".", "job", "=", "value"], "question": "Find the name of the person who has no student friends.", "question_toks": ["find", "name", "of", "person", "who", "ha", "no", "student", "friend", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"student\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Find", "the", "name", "of", "the", "person", "who", "has", "no", "student", "friends", "."], "question_arg": [["find"], ["name"], ["of"], ["person"], ["who"], ["ha"], ["no"], ["student"], ["friend"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["person", "NN"], ["who", "WP"], ["ha", "VBZ"], ["no", "DT"], ["student", "NN"], ["friend", "NN"], [".", "."]], "rule_label": "Root1(2) Root(5) Sel(0) N(0) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(1) T(1) Filter(2) A(0) C(5) T(0)"}, {"db_id": "flight_2", "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)", "query_toks": ["SELECT", "AirportName", "FROM", "Airports", "WHERE", "AirportCode", "NOT", "IN", "(", "SELECT", "SourceAirport", "FROM", "Flights", "UNION", "SELECT", "DestAirport", "FROM", "Flights", ")"], "query_toks_no_value": ["select", "airportname", "from", "airports", "where", "airportcode", "not", "in", "(", "select", "sourceairport", "from", "flights", "union", "select", "destairport", "from", "flights", ")"], "question": "Which airports do not have departing or arriving flights?", "question_toks": ["which", "airport", "do", "not", "have", "departing", "or", "arriving", "flight", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[true, 8, [0, [0, 6, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Which", "airports", "do", "not", "have", "departing", "or", "arriving", "flights", "?"], "question_arg": [["which"], ["airport"], ["do"], ["not"], ["have"], ["departing"], ["or"], ["arriving"], ["flight"], ["?"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["airport", "NN"], ["do", "VBP"], ["not", "RB"], ["have", "VB"], ["departing", "VBG"], ["or", "CC"], ["arriving", "VBG"], ["flight", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(19) A(0) C(6) T(1) Root(5) Sel(0) N(0) A(0) C(11) T(2)"}, {"db_id": "flight_4", "query": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "airlines", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "airlines", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which countries has the most number of airlines?", "question_toks": ["which", "country", "ha", "most", "number", "of", "airline", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Which", "countries", "has", "the", "most", "number", "of", "airlines", "?"], "question_arg": [["which"], ["country"], ["ha"], ["most"], ["number"], ["of"], ["airline"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["country", "NN"], ["ha", "VBZ"], ["most", "RBS"], ["number", "NN"], ["of", "IN"], ["airline", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(12) T(2) Sup(0) A(3) C(0) T(2)"}, {"db_id": "geo", "query": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";", "query_toks": ["SELECT", "COUNT", "(", "river_name", ")", "FROM", "river", "WHERE", "traverse", "=", "``", "idaho", "''", ";"], "query_toks_no_value": ["select", "count", "(", "river_name", ")", "from", "river", "where", "traverse", "=", "value"], "question": "how many rivers in idaho", "question_toks": ["how", "many", "river", "in", "idaho"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"idaho\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "rivers", "in", "idaho"], "question_arg": [["how"], ["many"], ["river"], ["in"], ["idaho"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["river", "NN"], ["in", "IN"], ["idaho", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(16) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "geo", "query": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"mississippi\" );", "query_toks": ["SELECT", "highest_point", "FROM", "highlow", "WHERE", "state_name", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "mississippi", "''", ")", ";"], "query_toks_no_value": ["select", "highest_point", "from", "highlow", "where", "state_name", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")"], "question": "what are the highest points of states surrounding mississippi", "question_toks": ["what", "are", "highest", "point", "of", "state", "surrounding", "mississippi"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 8, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"mississippi\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "highest", "points", "of", "states", "surrounding", "mississippi"], "question_arg": [["what"], ["are"], ["highest", "point"], ["of"], ["state"], ["surrounding"], ["mississippi"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["highest", "JJS"], ["point", "NN"], ["of", "IN"], ["state", "NN"], ["surrounding", "NN"], ["mississippi", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(3) Filter(18) A(0) C(1) T(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "network_2", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)", "query_toks": ["SELECT", "T1.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "IN", "(", "SELECT", "name", "FROM", "Person", "WHERE", "age", ">", "40", ")", "INTERSECT", "SELECT", "T1.name", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T2.friend", "IN", "(", "SELECT", "name", "FROM", "Person", "WHERE", "age", "<", "30", ")"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "in", "(", "select", "name", "from", "person", "where", "age", ">", "value", ")", "intersect", "select", "t1", ".", "name", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t2", ".", "friend", "in", "(", "select", "name", "from", "person", "where", "age", "<", "value", ")"], "question": "Find the name of the person who has friends with age above 40 and under age 30?", "question_toks": ["find", "name", "of", "person", "who", "ha", "friend", "with", "age", "above", "40", "and", "under", "age", "30", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 2, false], null], 40.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 4, [0, [0, 2, false], null], 30.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Find", "the", "name", "of", "the", "person", "who", "has", "friends", "with", "age", "above", "40", "and", "under", "age", "30", "?"], "question_arg": [["find"], ["name"], ["of"], ["person"], ["who"], ["ha"], ["friend"], ["with"], ["age"], ["above"], ["40"], ["and"], ["under"], ["age"], ["30"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["col"], ["value"], ["NONE"]], "nltk_pos": [["find", "VB"], ["name", "NN"], ["of", "IN"], ["person", "NN"], ["who", "WP"], ["ha", "VBZ"], ["friend", "NN"], ["with", "IN"], ["age", "NN"], ["above", "IN"], ["40", "CD"], ["and", "CC"], ["under", "IN"], ["age", "NN"], ["30", "CD"], ["?", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(18) A(0) C(6) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(5) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(18) A(0) C(6) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(4) A(0) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";", "query_toks": ["SELECT", "highest_elevation", "FROM", "highlow", "WHERE", "state_name", "=", "``", "delaware", "''", ";"], "query_toks_no_value": ["select", "highest_elevation", "from", "highlow", "where", "state_name", "=", "value"], "question": "how high is the highest point of delaware", "question_toks": ["how", "high", "is", "highest", "point", "of", "delaware"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"delaware\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "high", "is", "the", "highest", "point", "of", "delaware"], "question_arg": [["how"], ["high"], ["is"], ["highest", "point"], ["of"], ["delaware"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["high", "JJ"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["of", "IN"], ["delaware", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "geo", "query": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );", "query_toks": ["SELECT", "mountain_name", "FROM", "mountain", "WHERE", "mountain_altitude", "=", "(", "SELECT", "MAX", "(", "mountain_altitude", ")", "FROM", "mountain", ")", ";"], "query_toks_no_value": ["select", "mountain_name", "from", "mountain", "where", "mountain_altitude", "=", "(", "select", "max", "(", "mountain_altitude", ")", "from", "mountain", ")"], "question": "what is the tallest mountain in america", "question_toks": ["what", "is", "tallest", "mountain", "in", "america"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 22, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "tallest", "mountain", "in", "america"], "question_arg": [["what"], ["is"], ["tallest"], ["mountain"], ["in"], ["america"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["tallest", "JJS"], ["mountain", "NN"], ["in", "IN"], ["america", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(14) T(5) Filter(11) A(0) C(15) T(5) Root(5) Sel(0) N(0) A(1) C(15) T(5)"}, {"db_id": "flight_1", "query": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "Flight", "AS", "T1", "JOIN", "Aircraft", "AS", "T2", "ON", "T1.aid", "=", "T2.aid", "GROUP", "BY", "T1.aid"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "flight", "as", "t1", "join", "aircraft", "as", "t2", "on", "t1", ".", "aid", "=", "t2", ".", "aid", "group", "by", "t1", ".", "aid"], "question": "What is the name of each aircraft and how many flights does each one complete?", "question_toks": ["what", "is", "name", "of", "each", "aircraft", "and", "how", "many", "flight", "doe", "each", "one", "complete", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 8, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "name", "of", "each", "aircraft", "and", "how", "many", "flights", "does", "each", "one", "complete", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["each"], ["aircraft"], ["and"], ["how"], ["many"], ["flight"], ["doe"], ["each"], ["one"], ["complete"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["each", "DT"], ["aircraft", "NN"], ["and", "CC"], ["how", "WRB"], ["many", "JJ"], ["flight", "NN"], ["doe", "NNS"], ["each", "DT"], ["one", "CD"], ["complete", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(9) T(1) A(3) C(0) T(0)"}, {"db_id": "soccer_2", "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500", "query_toks": ["SELECT", "pName", "FROM", "Player", "WHERE", "HS", "BETWEEN", "500", "AND", "1500"], "query_toks_no_value": ["select", "pname", "from", "player", "where", "hs", "between", "value", "and", "value"], "question": "What are the names of players whose training hours is between 500 and 1500?", "question_toks": ["what", "are", "name", "of", "player", "whose", "training", "hour", "is", "between", "500", "and", "1500", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 1, [0, [0, 7, false], null], 500.0, 1500.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "names", "of", "players", "whose", "training", "hours", "is", "between", "500", "and", "1500", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["player"], ["whose"], ["training", "hour"], ["is"], ["between"], ["500"], ["and"], ["1500"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["agg"], ["value"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["player", "NN"], ["whose", "WP$"], ["training", "NN"], ["hour", "NN"], ["is", "VBZ"], ["between", "IN"], ["500", "CD"], ["and", "CC"], ["1500", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(1) Filter(8) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "kentucky", "''", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "=", "value"], "question": "what are the neighboring states for kentucky", "question_toks": ["what", "are", "neighboring", "state", "for", "kentucky"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"kentucky\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "neighboring", "states", "for", "kentucky"], "question_arg": [["what"], ["are"], ["neighboring"], ["state"], ["for"], ["kentucky"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["neighboring", "VBG"], ["state", "NN"], ["for", "IN"], ["kentucky", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );", "query_toks": ["SELECT", "traverse", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", ")", ";"], "query_toks_no_value": ["select", "traverse", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", ")"], "question": "what are the states through which the longest river runs", "question_toks": ["what", "are", "state", "through", "which", "longest", "river", "run"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "states", "through", "which", "the", "longest", "river", "runs"], "question_arg": [["what"], ["are"], ["state"], ["through"], ["which"], ["longest"], ["river"], ["run"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["state", "NN"], ["through", "IN"], ["which", "WDT"], ["longest", "JJS"], ["river", "NN"], ["run", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(1) C(17) T(6)"}, {"db_id": "geo", "query": "SELECT traverse FROM river WHERE LENGTH  >  750;", "query_toks": ["SELECT", "traverse", "FROM", "river", "WHERE", "LENGTH", ">", "750", ";"], "query_toks_no_value": ["select", "traverse", "from", "river", "where", "length", ">", "value"], "question": "what states contain at least one major rivers", "question_toks": ["what", "state", "contain", "at", "least", "one", "major", "river"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 3, [0, [0, 27, false], null], 750.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "contain", "at", "least", "one", "major", "rivers"], "question_arg": [["what"], ["state"], ["contain"], ["at"], ["least"], ["one"], ["major"], ["river"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["contain", "NN"], ["at", "IN"], ["least", "JJS"], ["one", "CD"], ["major", "JJ"], ["river", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(5) A(0) C(17) T(6)"}, {"db_id": "storm_record", "query": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC", "query_toks": ["SELECT", "name", ",", "damage_millions_USD", "FROM", "storm", "ORDER", "BY", "max_speed", "DESC"], "query_toks_no_value": ["select", "name", ",", "damage_millions_usd", "from", "storm", "order", "by", "max_speed", "desc"], "question": "What are the names and damage in millions for storms, ordered by their max speeds descending?", "question_toks": ["what", "are", "name", "and", "damage", "in", "million", "for", "storm", ",", "ordered", "by", "their", "max", "speed", "descending", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["What", "are", "the", "names", "and", "damage", "in", "millions", "for", "storms", ",", "ordered", "by", "their", "max", "speeds", "descending", "?"], "question_arg": [["what"], ["are"], ["name"], ["and"], ["damage"], ["in"], ["million"], ["for"], ["storm"], [","], ["ordered"], ["by"], ["their"], ["max", "speed"], ["descending"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "JJ"], ["and", "CC"], ["damage", "NN"], ["in", "IN"], ["million", "CD"], ["for", "IN"], ["storm", "NN"], [",", ","], ["ordered", "VBN"], ["by", "IN"], ["their", "PRP$"], ["max", "NNS"], ["speed", "VB"], ["descending", "VBG"], ["?", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(1) A(0) C(2) T(0) A(0) C(5) T(0) Order(0) A(0) C(4) T(0)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "=", "``", "illinois", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "=", "value"], "question": "what are the rivers in illinois", "question_toks": ["what", "are", "river", "in", "illinois"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"illinois\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "rivers", "in", "illinois"], "question_arg": [["what"], ["are"], ["river"], ["in"], ["illinois"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["river", "VBN"], ["in", "IN"], ["illinois", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "american", "''", ")", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "where is the best restaurant in the bay area for american food ?", "question_toks": ["where", "is", "best", "restaurant", "in", "bay", "area", "for", "american", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"american\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"american\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "is", "the", "best", "restaurant", "in", "the", "bay", "area", "for", "american", "food", "?"], "question_arg": [["where"], ["is"], ["best"], ["restaurant"], ["in"], ["bay"], ["area"], ["for"], ["american"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["best", "RBS"], ["restaurant", "NN"], ["in", "IN"], ["bay", "JJ"], ["area", "NN"], ["for", "IN"], ["american", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(1) C(7) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(2) A(0) C(6) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", ">", "150000", "AND", "state_name", "=", "``", "kansas", "''", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", ">", "value", "and", "state_name", "=", "value"], "question": "what are the names of the major cities in kansas", "question_toks": ["what", "are", "name", "of", "major", "city", "in", "kansa"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 150000.0, null], "and", [false, 2, [0, [0, 10, false], null], "\"kansas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "names", "of", "the", "major", "cities", "in", "kansas"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["major"], ["city"], ["in"], ["kansa"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["major", "JJ"], ["city", "NN"], ["in", "IN"], ["kansa", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(0) Filter(5) A(0) C(2) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "flight_1", "query": "SELECT name ,  salary FROM Employee ORDER BY salary", "query_toks": ["SELECT", "name", ",", "salary", "FROM", "Employee", "ORDER", "BY", "salary"], "query_toks_no_value": ["select", "name", ",", "salary", "from", "employee", "order", "by", "salary"], "question": "What is the name and salary of all employees in order of salary?", "question_toks": ["what", "is", "name", "and", "salary", "of", "all", "employee", "in", "order", "of", "salary", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 14, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "name", "and", "salary", "of", "all", "employees", "in", "order", "of", "salary", "?"], "question_arg": [["what"], ["is"], ["name"], ["and"], ["salary"], ["of"], ["all"], ["employee"], ["in"], ["order"], ["of"], ["salary"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["and", "CC"], ["salary", "NN"], ["of", "IN"], ["all", "DT"], ["employee", "NN"], ["in", "IN"], ["order", "NN"], ["of", "IN"], ["salary", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(1) A(0) C(9) T(2) A(0) C(11) T(2) Order(1) A(0) C(11) T(2)"}, {"db_id": "flight_4", "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "query_toks": ["SELECT", "rid", "FROM", "routes", "WHERE", "dst_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")", "AND", "src_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")"], "query_toks_no_value": ["select", "rid", "from", "routes", "where", "dst_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")", "and", "src_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")"], "question": "Find the id of routes whose source and destination airports are in the United States.", "question_toks": ["find", "id", "of", "route", "whose", "source", "and", "destination", "airport", "are", "in", "united", "state", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 8, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "id", "of", "routes", "whose", "source", "and", "destination", "airports", "are", "in", "the", "United", "States", "."], "question_arg": [["find"], ["id"], ["of"], ["route"], ["whose"], ["source", "airport"], ["and"], ["destination", "airport"], ["are"], ["in"], ["united"], ["state"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["id", "NN"], ["of", "IN"], ["route", "NN"], ["whose", "WP$"], ["source", "NN"], ["and", "CC"], ["destination", "NN"], ["airport", "NN"], ["are", "VBP"], ["in", "IN"], ["united", "JJ"], ["state", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(18) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(2) A(0) C(12) T(1) Filter(18) A(0) C(4) T(0) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(2) A(0) C(12) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "city_name", "=", "``", "boulder", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "city_name", "=", "value"], "question": "how many inhabitants does boulder have", "question_toks": ["how", "many", "inhabitant", "doe", "boulder", "have"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"boulder\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "inhabitants", "does", "boulder", "have"], "question_arg": [["how"], ["many"], ["inhabitant"], ["doe"], ["boulder"], ["have"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["inhabitant", "JJ"], ["doe", "NN"], ["boulder", "NN"], ["have", "VBP"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );", "query_toks": ["SELECT", "state_name", "FROM", "highlow", "WHERE", "highest_elevation", "=", "(", "SELECT", "MAX", "(", "highest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "highlow", "where", "highest_elevation", "=", "(", "select", "max", "(", "highest_elevation", ")", "from", "highlow", ")"], "question": "which state has the highest point", "question_toks": ["which", "state", "ha", "highest", "point"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "highest", "point"], "question_arg": [["which"], ["state"], ["ha"], ["highest", "point"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["col"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["highest", "JJS"], ["point", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(11) A(0) C(9) T(3) Root(5) Sel(0) N(0) A(1) C(9) T(3)"}, {"db_id": "geo", "query": "SELECT LENGTH FROM river WHERE river_name  =  \"colorado\" AND traverse  =  \"texas\";", "query_toks": ["SELECT", "LENGTH", "FROM", "river", "WHERE", "river_name", "=", "``", "colorado", "''", "AND", "traverse", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "length", "from", "river", "where", "river_name", "=", "value", "and", "traverse", "=", "value"], "question": "what is the length of the colorado river in texas", "question_toks": ["what", "is", "length", "of", "colorado", "river", "in", "texas"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"colorado\"", null], "and", [false, 2, [0, [0, 29, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "length", "of", "the", "colorado", "river", "in", "texas"], "question_arg": [["what"], ["is"], ["length"], ["of"], ["colorado"], ["river"], ["in"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["length", "NN"], ["of", "IN"], ["colorado", "NN"], ["river", "NN"], ["in", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(17) T(6) Filter(0) Filter(2) A(0) C(16) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "icfp_1", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"", "query_toks": ["SELECT", "DISTINCT", "t1.title", "FROM", "papers", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "Google", "''"], "query_toks_no_value": ["select", "distinct", "t1", ".", "title", "from", "papers", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Which papers were written by authors from the institution \"Google\"?", "question_toks": ["which", "paper", "were", "written", "by", "author", "from", "institution", "'", "google", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [true, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Google\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Which", "papers", "were", "written", "by", "authors", "from", "the", "institution", "``", "Google", "''", "?"], "question_arg": [["which"], ["paper"], ["were"], ["written"], ["by"], ["author"], ["from"], ["institution"], ["'"], ["google"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["paper", "NN"], ["were", "VBD"], ["written", "VBN"], ["by", "IN"], ["author", "NN"], ["from", "IN"], ["institution", "NN"], ["'", "POS"], ["google", "NN"], ["'", "''"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "city_name", "=", "``", "boulder", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "city_name", "=", "value"], "question": "population of boulder", "question_toks": ["population", "of", "boulder"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"boulder\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["population", "of", "boulder"], "question_arg": [["population"], ["of"], ["boulder"]], "question_arg_type": [["col"], ["NONE"], ["NONE"]], "nltk_pos": [["population", "NN"], ["of", "IN"], ["boulder", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good places on buchanan in san francisco for arabic food ?", "question_toks": ["give", "me", "some", "good", "place", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"buchanan\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "some", "good", "places", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "question_arg": [["give"], ["me"], ["some"], ["good"], ["place"], ["on"], ["buchanan"], ["in"], ["san"], ["francisco"], ["for"], ["arabic"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["some", "DT"], ["good", "JJ"], ["place", "NN"], ["on", "IN"], ["buchanan", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["for", "IN"], ["arabic", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(10) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "icfp_1", "query": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\"", "query_toks": ["SELECT", "t1.fname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "WHERE", "t3.title", "LIKE", "``", "%", "Functional", "%", "''"], "query_toks_no_value": ["select", "t1", ".", "fname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "where", "t3", ".", "title", "like", "value"], "question": "Find the first names of all the authors who have written a paper with title containing the word \"Functional\".", "question_toks": ["find", "first", "name", "of", "all", "author", "who", "have", "written", "a", "paper", "with", "title", "containing", "word", "'", "functional", "'", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 9, [0, [0, 8, false], null], "\"%Functional%\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Find", "the", "first", "names", "of", "all", "the", "authors", "who", "have", "written", "a", "paper", "with", "title", "containing", "the", "word", "``", "Functional", "''", "."], "question_arg": [["find"], ["first", "name"], ["of"], ["all"], ["author"], ["who"], ["have"], ["written"], ["a"], ["paper"], ["with"], ["title"], ["containing"], ["word"], ["'"], ["functional"], ["'"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["first", "JJ"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["author", "NN"], ["who", "WP"], ["have", "VBP"], ["written", "VBN"], ["a", "DT"], ["paper", "NN"], ["with", "IN"], ["title", "NN"], ["containing", "VBG"], ["word", "NN"], ["'", "''"], ["functional", "JJ"], ["'", "POS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(1) Filter(9) A(0) C(8) T(2)"}, {"db_id": "flight_4", "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "WHERE", "T1.name", "=", "'John", "F", "Kennedy", "International", "Airport", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "where", "t1", ".", "name", "=", "value"], "question": "Find the number of routes that have destination John F Kennedy International Airport.", "question_toks": ["find", "number", "of", "route", "that", "have", "destination", "john", "f", "kennedy", "international", "airport", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"John F Kennedy International Airport\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "number", "of", "routes", "that", "have", "destination", "John", "F", "Kennedy", "International", "Airport", "."], "question_arg": [["find"], ["number"], ["of"], ["route"], ["that"], ["have"], ["destination", "airport"], ["john"], ["f"], ["kennedy"], ["international"], ["airport"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["number", "NN"], ["of", "IN"], ["route", "NN"], ["that", "WDT"], ["have", "VBP"], ["destination", "NN"], ["john", "NN"], ["f", "NN"], ["kennedy", "VBD"], ["international", "JJ"], ["airport", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(2) A(0) C(10) T(1)"}, {"db_id": "flight_4", "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "routes", "WHERE", "dst_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'Canada", "'", ")", "AND", "src_apid", "IN", "(", "SELECT", "apid", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "routes", "where", "dst_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")", "and", "src_apid", "in", "(", "select", "apid", "from", "airports", "where", "country", "=", "value", ")"], "question": "How many routes go from the United States to Canada?", "question_toks": ["how", "many", "route", "go", "from", "united", "state", "to", "canada", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 8, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Canada\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 4, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["How", "many", "routes", "go", "from", "the", "United", "States", "to", "Canada", "?"], "question_arg": [["how"], ["many"], ["route"], ["go"], ["from"], ["united"], ["state"], ["to"], ["canada"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["country"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["route", "NN"], ["go", "VBP"], ["from", "IN"], ["united", "JJ"], ["state", "NN"], ["to", "TO"], ["canada", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(0) Filter(18) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(2) A(0) C(12) T(1) Filter(18) A(0) C(4) T(0) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(2) A(0) C(12) T(1)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good place on buchanan in san francisco for arabic food ?", "question_toks": ["give", "me", "a", "good", "place", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"buchanan\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "a", "good", "place", "on", "buchanan", "in", "san", "francisco", "for", "arabic", "food", "?"], "question_arg": [["give"], ["me"], ["a"], ["good"], ["place"], ["on"], ["buchanan"], ["in"], ["san"], ["francisco"], ["for"], ["arabic"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["a", "DT"], ["good", "JJ"], ["place", "NN"], ["on", "IN"], ["buchanan", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["for", "IN"], ["arabic", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(10) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "storm_record", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10", "query_toks": ["SELECT", "T2.region_name", "FROM", "affected_region", "AS", "T1", "JOIN", "region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "JOIN", "storm", "AS", "T3", "ON", "T1.storm_id", "=", "T3.storm_id", "WHERE", "T3.number_deaths", ">", "=", "10"], "query_toks_no_value": ["select", "t2", ".", "region_name", "from", "affected_region", "as", "t1", "join", "region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "join", "storm", "as", "t3", "on", "t1", ".", "storm_id", "=", "t3", ".", "storm_id", "where", "t3", ".", "number_deaths", ">", "=", "value"], "question": "What are the region names affected by the storm with a number of deaths of least 10?", "question_toks": ["what", "are", "region", "name", "affected", "by", "storm", "with", "a", "number", "of", "death", "of", "least", "10", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 7, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 5, [0, [0, 6, false], null], 10.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["What", "are", "the", "region", "names", "affected", "by", "the", "storm", "with", "a", "number", "of", "deaths", "of", "least", "10", "?"], "question_arg": [["what"], ["are"], ["region", "name"], ["affected"], ["by"], ["storm"], ["with"], ["a"], ["number", "death"], ["of"], ["number", "death"], ["of"], ["least"], ["10"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["value"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["region", "NN"], ["name", "NN"], ["affected", "VBN"], ["by", "IN"], ["storm", "NN"], ["with", "IN"], ["a", "DT"], ["number", "NN"], ["of", "IN"], ["death", "NN"], ["of", "IN"], ["least", "JJS"], ["10", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(1) Filter(7) A(0) C(6) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "region0", "''", ")", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")", "and", "t1", ".", "rating", ">", "value"], "question": "what is a good restaurant in the bay area ?", "question_toks": ["what", "is", "a", "good", "restaurant", "in", "bay", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"region0\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["what", "is", "a", "good", "restaurant", "in", "the", "bay", "area", "?"], "question_arg": [["what"], ["is"], ["a"], ["good"], ["restaurant"], ["in"], ["bay"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["a", "DT"], ["good", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["bay", "JJ"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(3) T(0) Filter(5) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT COUNT ( border ) FROM border_info WHERE border IN ( SELECT border FROM border_info WHERE state_name  =  \"new mexico\" ) AND state_name  =  \"colorado\";", "query_toks": ["SELECT", "COUNT", "(", "border", ")", "FROM", "border_info", "WHERE", "border", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "new", "mexico", "''", ")", "AND", "state_name", "=", "``", "colorado", "''", ";"], "query_toks_no_value": ["select", "count", "(", "border", ")", "from", "border_info", "where", "border", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")", "and", "state_name", "=", "value"], "question": "how many states border colorado and border new mexico", "question_toks": ["how", "many", "state", "border", "colorado", "and", "border", "new", "mexico"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 12, false], null]]]], "where": [[false, 8, [0, [0, 12, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"new mexico\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 11, false], null], "\"colorado\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "border", "colorado", "and", "border", "new", "mexico"], "question_arg": [["how"], ["many"], ["state"], ["border"], ["colorado"], ["and"], ["border"], ["new"], ["mexico"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["border", "NN"], ["colorado", "NN"], ["and", "CC"], ["border", "VB"], ["new", "JJ"], ["mexico", "NNS"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(8) T(2) Filter(0) Filter(18) A(0) C(8) T(2) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "flight_4", "query": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'", "query_toks": ["SELECT", "name", "FROM", "airports", "WHERE", "country", "=", "'Cuba", "'", "OR", "country", "=", "'Argentina", "'"], "query_toks_no_value": ["select", "name", "from", "airports", "where", "country", "=", "value", "or", "country", "=", "value"], "question": "What are the names of all airports in Cuba or Argentina?", "question_toks": ["what", "are", "name", "of", "all", "airport", "in", "cuba", "or", "argentina", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Cuba\"", null], "or", [false, 2, [0, [0, 12, false], null], "\"Argentina\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "are", "the", "names", "of", "all", "airports", "in", "Cuba", "or", "Argentina", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["all"], ["airport"], ["in"], ["cuba"], ["or"], ["argentina"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["country"], ["NONE"], ["country"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["all", "DT"], ["airport", "NN"], ["in", "IN"], ["cuba", "NN"], ["or", "CC"], ["argentina", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(10) T(1) Filter(1) Filter(2) A(0) C(12) T(1) Filter(2) A(0) C(12) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "t1.population", ")", "FROM", "state", "AS", "t2", "JOIN", "city", "AS", "t1", "ON", "t2.capital", "=", "t1.city_name", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "t1", ".", "population", ")", "from", "state", "as", "t2", "join", "city", "as", "t1", "on", "t2", ".", "capital", "=", "t1", ".", "city_name", ")"], "question": "what capital is the largest in the us", "question_toks": ["what", "capital", "is", "largest", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 7, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "capital", "is", "the", "largest", "in", "the", "us"], "question_arg": [["what"], ["capital"], ["is"], ["largest"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["capital", "NN"], ["is", "VBZ"], ["largest", "JJS"], ["in", "IN"], ["u", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );", "query_toks": ["SELECT", "state_name", "FROM", "highlow", "WHERE", "lowest_elevation", "=", "(", "SELECT", "MIN", "(", "lowest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "highlow", "where", "lowest_elevation", "=", "(", "select", "min", "(", "lowest_elevation", ")", "from", "highlow", ")"], "question": "what is the name of the state with the lowest point", "question_toks": ["what", "is", "name", "of", "state", "with", "lowest", "point"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "name", "of", "the", "state", "with", "the", "lowest", "point"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["state"], ["with"], ["lowest", "point"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["state", "NN"], ["with", "IN"], ["lowest", "JJS"], ["point", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(11) A(0) C(12) T(3) Root(5) Sel(0) N(0) A(2) C(12) T(3)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "kentucky", "''", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "=", "value"], "question": "which state borders kentucky", "question_toks": ["which", "state", "border", "kentucky"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"kentucky\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "borders", "kentucky"], "question_arg": [["which"], ["state"], ["border"], ["kentucky"]], "question_arg_type": [["NONE"], ["table"], ["col"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["border", "NN"], ["kentucky", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT area FROM state WHERE state_name  =  \"new mexico\";", "query_toks": ["SELECT", "area", "FROM", "state", "WHERE", "state_name", "=", "``", "new", "mexico", "''", ";"], "query_toks_no_value": ["select", "area", "from", "state", "where", "state_name", "=", "value"], "question": "how big is new mexico", "question_toks": ["how", "big", "is", "new", "mexico"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"new mexico\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "big", "is", "new", "mexico"], "question_arg": [["how"], ["big"], ["is"], ["new"], ["mexico"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["big", "JJ"], ["is", "VBZ"], ["new", "JJ"], ["mexico", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(3) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "flight_4", "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC", "query_toks": ["SELECT", "count", "(", "*", ")", ",", "country", "FROM", "airports", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC"], "query_toks_no_value": ["select", "count", "(", "*", ")", ",", "country", "from", "airports", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc"], "question": "What is the number of airports per country, ordered from most to least?", "question_toks": ["what", "is", "number", "of", "airport", "per", "country", ",", "ordered", "from", "most", "to", "least", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "number", "of", "airports", "per", "country", ",", "ordered", "from", "most", "to", "least", "?"], "question_arg": [["what"], ["is"], ["number"], ["of"], ["airport"], ["per"], ["country"], [","], ["ordered"], ["from"], ["most"], ["to"], ["least"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["number", "NN"], ["of", "IN"], ["airport", "JJ"], ["per", "IN"], ["country", "NN"], [",", ","], ["ordered", "VBN"], ["from", "IN"], ["most", "JJS"], ["to", "TO"], ["least", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(1) A(3) C(0) T(1) A(0) C(12) T(1) Order(0) A(3) C(0) T(1)"}, {"db_id": "theme_gallery", "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500", "query_toks": ["SELECT", "T2.theme", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T1.attendance", "<", "100", "INTERSECT", "SELECT", "T2.theme", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T1.attendance", ">", "500"], "query_toks_no_value": ["select", "t2", ".", "theme", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t1", ".", "attendance", "<", "value", "intersect", "select", "t2", ".", "theme", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t1", ".", "attendance", ">", "value"], "question": "Show the theme for exhibitions with both records of an attendance below 100 and above 500.", "question_toks": ["show", "theme", "for", "exhibition", "with", "both", "record", "of", "an", "attendance", "below", "100", "and", "above", "500", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Show", "the", "theme", "for", "exhibitions", "with", "both", "records", "of", "an", "attendance", "below", "100", "and", "above", "500", "."], "question_arg": [["show"], ["theme"], ["for"], ["exhibition"], ["with"], ["both"], ["record"], ["of"], ["an"], ["attendance"], ["below"], ["100"], ["and"], ["above"], ["500"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["show", "NN"], ["theme", "NN"], ["for", "IN"], ["exhibition", "NN"], ["with", "IN"], ["both", "DT"], ["record", "NN"], ["of", "IN"], ["an", "DT"], ["attendance", "NN"], ["below", "IN"], ["100", "CD"], ["and", "CC"], ["above", "JJ"], ["500", "CD"], [".", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(8) T(1) Filter(4) A(0) C(11) T(2) Root(3) Sel(0) N(0) A(0) C(8) T(1) Filter(5) A(0) C(11) T(2)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", ")"], "question": "what city has the largest population", "question_toks": ["what", "city", "ha", "largest", "population"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "city", "has", "the", "largest", "population"], "question_arg": [["what"], ["city"], ["ha"], ["largest"], ["population"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["city", "NN"], ["ha", "RB"], ["largest", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "geo", "query": "SELECT population / area FROM state WHERE state_name  =  \"pennsylvania\";", "query_toks": ["SELECT", "population", "/", "area", "FROM", "state", "WHERE", "state_name", "=", "``", "pennsylvania", "''", ";"], "query_toks_no_value": ["select", "population", "/", "area", "from", "state", "where", "state_name", "=", "value"], "question": "what is the average population per square km in pennsylvania", "question_toks": ["what", "is", "average", "population", "per", "square", "km", "in", "pennsylvania"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [4, [0, 2, false], [0, 3, false]]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"pennsylvania\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "average", "population", "per", "square", "km", "in", "pennsylvania"], "question_arg": [["what"], ["is"], ["average"], ["population"], ["per"], ["square"], ["km"], ["in"], ["pennsylvania"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["population", "NN"], ["per", "IN"], ["square", "JJ"], ["km", "NN"], ["in", "IN"], ["pennsylvania", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "geo", "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";", "query_toks": ["SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "ohio", "''", ";"], "query_toks_no_value": ["select", "traverse", "from", "river", "where", "river_name", "=", "value"], "question": "what are the states that the ohio run through", "question_toks": ["what", "are", "state", "that", "ohio", "run", "through"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"ohio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "states", "that", "the", "ohio", "run", "through"], "question_arg": [["what"], ["are"], ["state"], ["that"], ["ohio"], ["run"], ["through"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["state", "NN"], ["that", "IN"], ["ohio", "NN"], ["run", "VBP"], ["through", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "storm_record", "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10", "query_toks": ["SELECT", "T1.name", "FROM", "storm", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.storm_id", "=", "T2.storm_id", "GROUP", "BY", "T1.storm_id", "HAVING", "count", "(", "*", ")", ">", "=", "2", "INTERSECT", "SELECT", "T1.name", "FROM", "storm", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.storm_id", "=", "T2.storm_id", "GROUP", "BY", "T1.storm_id", "HAVING", "sum", "(", "T2.number_city_affected", ")", ">", "=", "10"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "storm", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "storm_id", "=", "t2", ".", "storm_id", "group", "by", "t1", ".", "storm_id", "having", "count", "(", "*", ")", ">", "=", "value", "intersect", "select", "t1", ".", "name", "from", "storm", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "storm_id", "=", "t2", ".", "storm_id", "group", "by", "t1", ".", "storm_id", "having", "sum", "(", "t2", ".", "number_city_affected", ")", ">", "=", "value"], "question": "What are the names of storms that both affected two or more regions and affected a total of 10 or more cities?", "question_toks": ["what", "are", "name", "of", "storm", "that", "both", "affected", "two", "or", "more", "region", "and", "affected", "a", "total", "of", "10", "or", "more", "city", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [4, 12, false], null], 10.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["What", "are", "the", "names", "of", "storms", "that", "both", "affected", "two", "or", "more", "regions", "and", "affected", "a", "total", "of", "10", "or", "more", "cities", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["storm"], ["that"], ["both"], ["affected"], ["two"], ["or"], ["more"], ["region"], ["and"], ["affected"], ["a"], ["total"], ["of"], ["10"], ["or"], ["more"], ["city"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["value"], ["NONE"], ["MORE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["storm", "NN"], ["that", "IN"], ["both", "DT"], ["affected", "JJ"], ["two", "CD"], ["or", "CC"], ["more", "JJR"], ["region", "NN"], ["and", "CC"], ["affected", "VBD"], ["a", "DT"], ["total", "NN"], ["of", "IN"], ["10", "CD"], ["or", "CC"], ["more", "JJR"], ["city", "NN"], ["?", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(7) A(3) C(0) T(2) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(7) A(4) C(10) T(2)"}, {"db_id": "geo", "query": "SELECT SUM ( population ) FROM state;", "query_toks": ["SELECT", "SUM", "(", "population", ")", "FROM", "state", ";"], "query_toks_no_value": ["select", "sum", "(", "population", ")", "from", "state"], "question": "how many people live in the united states", "question_toks": ["how", "many", "people", "live", "in", "united", "state"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[4, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "people", "live", "in", "the", "united", "states"], "question_arg": [["how"], ["many"], ["people"], ["live"], ["in"], ["united"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["people", "NNS"], ["live", "VBP"], ["in", "IN"], ["united", "JJ"], ["state", "NN"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(4) C(2) T(0)"}, {"db_id": "network_2", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'", "query_toks": ["SELECT", "T2.friend", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.friend", "WHERE", "T2.name", "=", "'Alice", "'", "AND", "T1.gender", "=", "'male", "'", "AND", "T1.job", "=", "'doctor", "'"], "query_toks_no_value": ["select", "t2", ".", "friend", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "friend", "where", "t2", ".", "name", "=", "value", "and", "t1", ".", "gender", "=", "value", "and", "t1", ".", "job", "=", "value"], "question": "Who are the friends of Alice that are doctors?", "question_toks": ["who", "are", "friend", "of", "alice", "that", "are", "doctor", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Alice\"", null], "and", [false, 2, [0, [0, 4, false], null], "\"male\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"doctor\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Who", "are", "the", "friends", "of", "Alice", "that", "are", "doctors", "?"], "question_arg": [["who"], ["are"], ["friend"], ["of"], ["alice"], ["that"], ["are"], ["doctor"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["who", "WP"], ["are", "VBP"], ["friend", "NN"], ["of", "IN"], ["alice", "NN"], ["that", "WDT"], ["are", "VBP"], ["doctor", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(1) Filter(0) Filter(2) A(0) C(1) T(1) Filter(0) Filter(2) A(0) C(4) T(0) Filter(2) A(0) C(5) T(0)"}, {"db_id": "geo", "query": "SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );", "query_toks": ["SELECT", "density", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "density", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")"], "question": "what is the population density of the state with the smallest area", "question_toks": ["what", "is", "population", "density", "of", "state", "with", "smallest", "area"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "population", "density", "of", "the", "state", "with", "the", "smallest", "area"], "question_arg": [["what"], ["is"], ["population"], ["density"], ["of"], ["state"], ["with"], ["smallest"], ["area"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["population", "JJ"], ["density", "NN"], ["of", "IN"], ["state", "NN"], ["with", "IN"], ["smallest", "JJ"], ["area", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "icfp_1", "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.country", "FROM", "inst", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.instid", "=", "t2.instid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "GROUP", "BY", "t1.country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "country", "from", "inst", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "instid", "=", "t2", ".", "instid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "group", "by", "t1", ".", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Retrieve the country that has published the most papers.", "question_toks": ["retrieve", "country", "that", "ha", "published", "most", "paper", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Retrieve", "the", "country", "that", "has", "published", "the", "most", "papers", "."], "question_arg": [["retrieve"], ["country"], ["that"], ["ha"], ["published"], ["most"], ["paper"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"]], "nltk_pos": [["retrieve", "JJ"], ["country", "NN"], ["that", "WDT"], ["ha", "VBP"], ["published", "VBN"], ["most", "JJS"], ["paper", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(3) T(0) Sup(0) A(3) C(0) T(0)"}, {"db_id": "singer", "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Singer_ID", "NOT", "IN", "(", "SELECT", "Singer_ID", "FROM", "song", ")"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "singer_id", "not", "in", "(", "select", "singer_id", "from", "song", ")"], "question": "What is the sname of every sing that does not have any song?", "question_toks": ["what", "is", "sname", "of", "every", "sing", "that", "doe", "not", "have", "any", "song", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["What", "is", "the", "sname", "of", "every", "sing", "that", "does", "not", "have", "any", "song", "?"], "question_arg": [["what"], ["is"], ["sname"], ["of"], ["every"], ["sing"], ["that"], ["doe"], ["not"], ["have"], ["any"], ["song"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["sname", "NN"], ["of", "IN"], ["every", "DT"], ["sing", "NN"], ["that", "WDT"], ["doe", "VBZ"], ["not", "RB"], ["have", "VB"], ["any", "DT"], ["song", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(19) A(0) C(1) T(0) Root(5) Sel(0) N(0) A(0) C(1) T(1)"}, {"db_id": "geo", "query": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";", "query_toks": ["SELECT", "highest_elevation", "FROM", "highlow", "WHERE", "state_name", "=", "``", "delaware", "''", ";"], "query_toks_no_value": ["select", "highest_elevation", "from", "highlow", "where", "state_name", "=", "value"], "question": "what is the highest point in delaware in meters", "question_toks": ["what", "is", "highest", "point", "in", "delaware", "in", "meter"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 14, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"delaware\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "highest", "point", "in", "delaware", "in", "meters"], "question_arg": [["what"], ["is"], ["highest", "point"], ["in"], ["delaware"], ["in"], ["meter"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["delaware", "NN"], ["in", "IN"], ["meter", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(9) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "storm_record", "query": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2", "query_toks": ["SELECT", "name", "FROM", "storm", "EXCEPT", "SELECT", "T1.name", "FROM", "storm", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.storm_id", "=", "T2.storm_id", "GROUP", "BY", "T1.storm_id", "HAVING", "count", "(", "*", ")", ">", "=", "2"], "query_toks_no_value": ["select", "name", "from", "storm", "except", "select", "t1", ".", "name", "from", "storm", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "storm_id", "=", "t2", ".", "storm_id", "group", "by", "t1", ".", "storm_id", "having", "count", "(", "*", ")", ">", "=", "value"], "question": "What are the names of storms that did not affect two or more regions?", "question_toks": ["what", "are", "name", "of", "storm", "that", "did", "not", "affect", "two", "or", "more", "region", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [[false, 5, [0, [3, 0, false], null], 2.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["What", "are", "the", "names", "of", "storms", "that", "did", "not", "affect", "two", "or", "more", "regions", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["storm"], ["that"], ["did"], ["not"], ["affect"], ["two"], ["or"], ["more"], ["region"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["storm", "NN"], ["that", "WDT"], ["did", "VBD"], ["not", "RB"], ["affect", "VB"], ["two", "CD"], ["or", "CC"], ["more", "JJR"], ["region", "NN"], ["?", "."]], "rule_label": "Root1(2) Root(5) Sel(0) N(0) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(7) A(3) C(0) T(2)"}, {"db_id": "geo", "query": "SELECT t1.state_name FROM state AS t1 JOIN highlow AS t2 ON t1.capital  =  t2.highest_point;", "query_toks": ["SELECT", "t1.state_name", "FROM", "state", "AS", "t1", "JOIN", "highlow", "AS", "t2", "ON", "t1.capital", "=", "t2.highest_point", ";"], "query_toks_no_value": ["select", "t1", ".", "state_name", "from", "state", "as", "t1", "join", "highlow", "as", "t2", "on", "t1", ".", "capital", "=", "t2", ".", "highest_point"], "question": "what states have a capital that is the highest point in the state", "question_toks": ["what", "state", "have", "a", "capital", "that", "is", "highest", "point", "in", "state"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 5, false], null], [0, 16, false], null]]}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "have", "a", "capital", "that", "is", "the", "highest", "point", "in", "the", "state"], "question_arg": [["what"], ["state"], ["have"], ["a"], ["capital"], ["that"], ["is"], ["highest", "point"], ["in"], ["state"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["have", "VBP"], ["a", "DT"], ["capital", "NN"], ["that", "WDT"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["state", "NN"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(0) C(1) T(0)"}, {"db_id": "storm_record", "query": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id", "query_toks": ["SELECT", "T1.name", ",", "count", "(", "*", ")", "FROM", "storm", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.storm_id", "=", "T2.storm_id", "GROUP", "BY", "T1.storm_id"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "count", "(", "*", ")", "from", "storm", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "storm_id", "=", "t2", ".", "storm_id", "group", "by", "t1", ".", "storm_id"], "question": "List the name for storms and the number of affected regions for each storm.", "question_toks": ["list", "name", "for", "storm", "and", "number", "of", "affected", "region", "for", "each", "storm", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 11, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 1, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["List", "the", "name", "for", "storms", "and", "the", "number", "of", "affected", "regions", "for", "each", "storm", "."], "question_arg": [["list"], ["name"], ["for"], ["storm"], ["and"], ["number", "death"], ["of"], ["affected", "region"], ["for"], ["each"], ["storm"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["list", "NN"], ["name", "NN"], ["for", "IN"], ["storm", "NN"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["affected", "JJ"], ["region", "NN"], ["for", "IN"], ["each", "DT"], ["storm", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(2) T(0) A(3) C(0) T(2)"}, {"db_id": "theme_gallery", "query": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "exhibition", "WHERE", "YEAR", ">", "=", "2005"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "exhibition", "where", "year", ">", "=", "value"], "question": "How many exhibition are there in year 2005 or after?", "question_toks": ["how", "many", "exhibition", "are", "there", "in", "year", "year", "or", "after", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 5, [0, [0, 7, false], null], 2005.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["How", "many", "exhibition", "are", "there", "in", "year", "2005", "or", "after", "?"], "question_arg": [["how"], ["many"], ["exhibition"], ["are"], ["there"], ["in"], ["year"], ["year"], ["or"], ["after"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["exhibition", "NN"], ["are", "VBP"], ["there", "RB"], ["in", "IN"], ["year", "NN"], ["2005", "CD"], ["or", "CC"], ["after", "IN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(7) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );", "query_toks": ["SELECT", "state_name", "FROM", "highlow", "WHERE", "highest_elevation", "=", "(", "SELECT", "MAX", "(", "highest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "highlow", "where", "highest_elevation", "=", "(", "select", "max", "(", "highest_elevation", ")", "from", "highlow", ")"], "question": "what is the state that contains the highest point", "question_toks": ["what", "is", "state", "that", "contains", "highest", "point"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "state", "that", "contains", "the", "highest", "point"], "question_arg": [["what"], ["is"], ["state"], ["that"], ["contains"], ["highest", "point"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["state", "NN"], ["that", "WDT"], ["contains", "VBZ"], ["highest", "JJS"], ["point", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(11) A(0) C(9) T(3) Root(5) Sel(0) N(0) A(1) C(9) T(3)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE state_name  =  \"california\";", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "state_name", "=", "``", "california", "''", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "state_name", "=", "value"], "question": "how many residents live in california", "question_toks": ["how", "many", "resident", "live", "in", "california"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"california\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "residents", "live", "in", "california"], "question_arg": [["how"], ["many"], ["resident"], ["live"], ["in"], ["california"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["resident", "JJ"], ["live", "NN"], ["in", "IN"], ["california", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "flight_1", "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\"", "query_toks": ["SELECT", "origin", "FROM", "Flight", "WHERE", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "origin", "from", "flight", "where", "destination", "=", "value"], "question": "What are the origins of all flights that are headed to Honolulu?", "question_toks": ["what", "are", "origin", "of", "all", "flight", "that", "are", "headed", "to", "honolulu", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"Honolulu\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "are", "the", "origins", "of", "all", "flights", "that", "are", "headed", "to", "Honolulu", "?"], "question_arg": [["what"], ["are"], ["origin"], ["of"], ["all"], ["flight"], ["that"], ["are"], ["headed"], ["to"], ["honolulu"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["origin", "VBN"], ["of", "IN"], ["all", "DT"], ["flight", "NN"], ["that", "WDT"], ["are", "VBP"], ["headed", "VBN"], ["to", "TO"], ["honolulu", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );", "query_toks": ["SELECT", "capital", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "capital", "from", "state", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "state", ")"], "question": "what is the capital of the state with the largest population", "question_toks": ["what", "is", "capital", "of", "state", "with", "largest", "population"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "capital", "of", "the", "state", "with", "the", "largest", "population"], "question_arg": [["what"], ["is"], ["capital"], ["of"], ["state"], ["with"], ["largest"], ["population"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["capital", "NN"], ["of", "IN"], ["state", "NN"], ["with", "IN"], ["largest", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(1) C(2) T(0)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "state", ")"], "question": "what state has the largest population", "question_toks": ["what", "state", "ha", "largest", "population"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "state", "has", "the", "largest", "population"], "question_arg": [["what"], ["state"], ["ha"], ["largest"], ["population"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["col"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["ha", "NN"], ["largest", "JJS"], ["population", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(2) T(0) Root(5) Sel(0) N(0) A(1) C(2) T(0)"}, {"db_id": "flight_4", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.src_apid", "WHERE", "T1.country", "=", "'China", "'", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "src_apid", "where", "t1", ".", "country", "=", "value", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the airport with the most number of routes that start in China?", "question_toks": ["what", "is", "name", "of", "airport", "with", "most", "number", "of", "route", "that", "start", "in", "china", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 4, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"China\"", null]], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "airport", "with", "the", "most", "number", "of", "routes", "that", "start", "in", "China", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["airport"], ["with"], ["most"], ["number"], ["of"], ["route"], ["that"], ["start"], ["in"], ["china"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["name"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["airport", "NN"], ["with", "IN"], ["most", "JJS"], ["number", "NN"], ["of", "IN"], ["route", "NN"], ["that", "WDT"], ["start", "VBP"], ["in", "IN"], ["china", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(0) Sel(0) N(0) A(0) C(10) T(1) Sup(0) A(3) C(0) T(0) Filter(2) A(0) C(12) T(1)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "bay", "area", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")"], "question": "where can we find some restaurants in the bay area ?", "question_toks": ["where", "can", "we", "find", "some", "restaurant", "in", "bay", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "can", "we", "find", "some", "restaurants", "in", "the", "bay", "area", "?"], "question_arg": [["where"], ["can"], ["we"], ["find"], ["some"], ["restaurant"], ["in"], ["bay"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["can", "MD"], ["we", "PRP"], ["find", "VB"], ["some", "DT"], ["restaurant", "NN"], ["in", "IN"], ["bay", "JJ"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(3) T(0)"}, {"db_id": "network_2", "query": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Person", "WHERE", "age", ">", "30", "AND", "job", "=", "'engineer", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "person", "where", "age", ">", "value", "and", "job", "=", "value"], "question": "HOw many engineers are older than 30?", "question_toks": ["how", "many", "engineer", "are", "older", "than", "30", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 2, false], null], 30.0, null], "and", [false, 2, [0, [0, 5, false], null], "\"engineer\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["HOw", "many", "engineers", "are", "older", "than", "30", "?"], "question_arg": [["how"], ["many"], ["engineer"], ["are"], ["older"], ["than"], ["30"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["engineer", "NN"], ["are", "VBP"], ["older", "JJR"], ["than", "IN"], ["30", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(0) Filter(5) A(0) C(2) T(0) Filter(2) A(0) C(5) T(0)"}, {"db_id": "singer", "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Citizenship", "!", "=", "``", "France", "''"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "citizenship", "!", "=", "value"], "question": "List the name of singers whose citizenship is not \"France\".", "question_toks": ["list", "name", "of", "singer", "whose", "citizenship", "is", "not", "'", "france", "'", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["List", "the", "name", "of", "singers", "whose", "citizenship", "is", "not", "``", "France", "''", "."], "question_arg": [["list"], ["name"], ["of"], ["singer"], ["whose"], ["citizenship"], ["is"], ["not"], ["'"], ["france"], ["'"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["list", "NN"], ["name", "NN"], ["of", "IN"], ["singer", "NN"], ["whose", "WP$"], ["citizenship", "NN"], ["is", "VBZ"], ["not", "RB"], ["'", "''"], ["france", "NN"], ["'", "POS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(3) A(0) C(5) T(0)"}, {"db_id": "geo", "query": "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";", "query_toks": ["SELECT", "highest_point", "FROM", "highlow", "WHERE", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "highest_point", "from", "highlow", "where", "state_name", "=", "value"], "question": "could you tell me what is the highest point in the state of texas", "question_toks": ["could", "you", "tell", "me", "what", "is", "highest", "point", "in", "state", "of", "texas"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 2, [0, [0, 13, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["could", "you", "tell", "me", "what", "is", "the", "highest", "point", "in", "the", "state", "of", "texas"], "question_arg": [["could"], ["you"], ["tell"], ["me"], ["what"], ["is"], ["highest", "point"], ["in"], ["state"], ["of"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["could", "MD"], ["you", "PRP"], ["tell", "VB"], ["me", "PRP"], ["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["state", "NN"], ["of", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(3) Filter(2) A(0) C(1) T(3)"}, {"db_id": "icfp_1", "query": "SELECT count(*) FROM authors", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "authors"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "authors"], "question": "How many authors are there?", "question_toks": ["how", "many", "author", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["How", "many", "authors", "are", "there", "?"], "question_arg": [["how"], ["many"], ["author"], ["are"], ["there"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["author", "NN"], ["are", "VBP"], ["there", "RB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(1)"}, {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "desc", "limit", "value"], "question": "Find the name, city, and country of the airport that has the highest latitude.", "question_toks": ["find", "name", ",", "city", ",", "and", "country", "of", "airport", "that", "ha", "highest", "latitude", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "that", "has", "the", "highest", "latitude", "."], "question_arg": [["find"], ["name"], [","], ["city"], [","], ["and"], ["country"], ["of"], ["airport"], ["that"], ["ha"], ["highest"], ["latitude"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "NN"], ["name", "NN"], [",", ","], ["city", "NN"], [",", ","], ["and", "CC"], ["country", "NN"], ["of", "IN"], ["airport", "NN"], ["that", "IN"], ["ha", "NN"], ["highest", "JJS"], ["latitude", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(2) A(0) C(10) T(1) A(0) C(11) T(1) A(0) C(12) T(1) Sup(0) A(0) C(15) T(1)"}, {"db_id": "flight_1", "query": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Employee", "WHERE", "salary", "BETWEEN", "100000", "AND", "200000"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "employee", "where", "salary", "between", "value", "and", "value"], "question": "What is the number of employees that have a salary between 100000 and 200000?", "question_toks": ["what", "is", "number", "of", "employee", "that", "have", "a", "salary", "between", "100000", "and", "200000", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 1, [0, [0, 14, false], null], 100000.0, 200000.0]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "number", "of", "employees", "that", "have", "a", "salary", "between", "100000", "and", "200000", "?"], "question_arg": [["what"], ["is"], ["flight", "number"], ["of"], ["employee"], ["that"], ["have"], ["a"], ["salary"], ["between"], ["100000"], ["and"], ["200000"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["agg"], ["value"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["number", "NN"], ["of", "IN"], ["employee", "NN"], ["that", "WDT"], ["have", "VBP"], ["a", "DT"], ["salary", "NN"], ["between", "IN"], ["100000", "CD"], ["and", "CC"], ["200000", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(8) A(0) C(11) T(2)"}, {"db_id": "restaurants", "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "WHERE", "t2.region", "=", "``", "bay", "area", "''", "AND", "t1.food_type", "=", "``", "chinese", "''", ";"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value"], "question": "how many places for chinese are there in the bay area ?", "question_toks": ["how", "many", "place", "for", "chinese", "are", "there", "in", "bay", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"chinese\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["how", "many", "places", "for", "chinese", "are", "there", "in", "the", "bay", "area", "?"], "question_arg": [["how"], ["many"], ["place"], ["for"], ["chinese"], ["are"], ["there"], ["in"], ["bay"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["place", "NN"], ["for", "IN"], ["chinese", "JJ"], ["are", "VBP"], ["there", "RB"], ["in", "IN"], ["bay", "NN"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(2) A(0) C(6) T(1)"}, {"db_id": "soccer_2", "query": "SELECT avg(HS) FROM Player", "query_toks": ["SELECT", "avg", "(", "HS", ")", "FROM", "Player"], "query_toks_no_value": ["select", "avg", "(", "hs", ")", "from", "player"], "question": "How many hours do the players train on average?", "question_toks": ["how", "many", "hour", "do", "player", "train", "on", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[5, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["How", "many", "hours", "do", "the", "players", "train", "on", "average", "?"], "question_arg": [["how"], ["many"], ["training", "hour"], ["do"], ["player"], ["train"], ["on"], ["average"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["agg"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["hour", "NN"], ["do", "VBP"], ["player", "NN"], ["train", "NN"], ["on", "IN"], ["average", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(5) C(7) T(1)"}, {"db_id": "storm_record", "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)", "query_toks": ["SELECT", "name", "FROM", "storm", "WHERE", "storm_id", "NOT", "IN", "(", "SELECT", "storm_id", "FROM", "affected_region", ")"], "query_toks_no_value": ["select", "name", "from", "storm", "where", "storm_id", "not", "in", "(", "select", "storm_id", "from", "affected_region", ")"], "question": "Show the name of storms which don't have affected region in record.", "question_toks": ["show", "name", "of", "storm", "which", "do", "n't", "have", "affected", "region", "in", "record", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["Show", "the", "name", "of", "storms", "which", "do", "n't", "have", "affected", "region", "in", "record", "."], "question_arg": [["show"], ["name"], ["of"], ["storm"], ["which"], ["do"], ["n't"], ["have"], ["affected", "region"], ["in"], ["record"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["of", "IN"], ["storm", "NN"], ["which", "WDT"], ["do", "VBP"], ["n't", "RB"], ["have", "VB"], ["affected", "VBN"], ["region", "NN"], ["in", "IN"], ["record", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(19) A(0) C(1) T(0) Root(5) Sel(0) N(0) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );", "query_toks": ["SELECT", "state_name", "FROM", "mountain", "WHERE", "mountain_altitude", "=", "(", "SELECT", "MAX", "(", "mountain_altitude", ")", "FROM", "mountain", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "mountain", "where", "mountain_altitude", "=", "(", "select", "max", "(", "mountain_altitude", ")", "from", "mountain", ")"], "question": "where is the highest mountain of the united states", "question_toks": ["where", "is", "highest", "mountain", "of", "united", "state"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 23, false], null], {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[1, [0, [0, 23, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["where", "is", "the", "highest", "mountain", "of", "the", "united", "states"], "question_arg": [["where"], ["is"], ["highest"], ["mountain"], ["of"], ["united"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["highest", "JJS"], ["mountain", "NN"], ["of", "IN"], ["united", "JJ"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(5) Filter(11) A(0) C(15) T(5) Root(5) Sel(0) N(0) A(1) C(15) T(5)"}, {"db_id": "flight_1", "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", ",", "T1.salary", "FROM", "Employee", "AS", "T1", "JOIN", "Certificate", "AS", "T2", "ON", "T1.eid", "=", "T2.eid", "GROUP", "BY", "T1.eid", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", ",", "t1", ".", "salary", "from", "employee", "as", "t1", "join", "certificate", "as", "t2", "on", "t1", ".", "eid", "=", "t2", ".", "eid", "group", "by", "t1", ".", "eid", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the salaray and name of the employee that is certified to fly the most planes?", "question_toks": ["what", "is", "salaray", "and", "name", "of", "employee", "that", "is", "certified", "to", "fly", "most", "plane", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3]], "conds": [[false, 2, [0, [0, 12, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 13, false], null]], [0, [0, [0, 14, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "salaray", "and", "name", "of", "the", "employee", "that", "is", "certified", "to", "fly", "the", "most", "planes", "?"], "question_arg": [["what"], ["is"], ["salaray"], ["and"], ["name"], ["of"], ["employee"], ["that"], ["is"], ["certified"], ["to"], ["fly"], ["most"], ["plane"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["salaray", "JJ"], ["and", "CC"], ["name", "NN"], ["of", "IN"], ["employee", "NN"], ["that", "WDT"], ["is", "VBZ"], ["certified", "VBN"], ["to", "TO"], ["fly", "VB"], ["most", "JJS"], ["plane", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(9) T(2) A(0) C(11) T(2) Sup(0) A(3) C(0) T(3)"}, {"db_id": "storm_record", "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)", "query_toks": ["SELECT", "name", "FROM", "storm", "WHERE", "storm_id", "NOT", "IN", "(", "SELECT", "storm_id", "FROM", "affected_region", ")"], "query_toks_no_value": ["select", "name", "from", "storm", "where", "storm_id", "not", "in", "(", "select", "storm_id", "from", "affected_region", ")"], "question": "What are the names of storms that did not affect any regions?", "question_toks": ["what", "are", "name", "of", "storm", "that", "did", "not", "affect", "any", "region", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[true, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["What", "are", "the", "names", "of", "storms", "that", "did", "not", "affect", "any", "regions", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["storm"], ["that"], ["did"], ["not"], ["affect"], ["any"], ["region"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["storm", "NN"], ["that", "WDT"], ["did", "VBD"], ["not", "RB"], ["affect", "VB"], ["any", "DT"], ["region", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(19) A(0) C(1) T(0) Root(5) Sel(0) N(0) A(0) C(1) T(2)"}, {"db_id": "pilot_record", "query": "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality", "query_toks": ["SELECT", "Nationality", ",", "COUNT", "(", "*", ")", "FROM", "pilot", "GROUP", "BY", "Nationality"], "query_toks_no_value": ["select", "nationality", ",", "count", "(", "*", ")", "from", "pilot", "group", "by", "nationality"], "question": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.", "question_toks": ["what", "are", "different", "nationality", "of", "pilot", "?", "show", "each", "nationality", "and", "number", "of", "pilot", "of", "each", "nationality", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 12, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "pilot id", "aircraft id", "date"], "table_names": ["aircraft", "pilot", "pilot record"], "col_set": ["*", "aircraft id", "order year", "manufacturer", "model", "fleet series", "powertrain", "fuel propulsion", "pilot id", "pilot name", "rank", "age", "nationality", "position", "join year", "team", "record id", "date"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"18": 1, "1": 1, "17": 17, "8": 8}, "origin_question_toks": ["What", "are", "the", "different", "nationalities", "of", "pilots", "?", "Show", "each", "nationality", "and", "the", "number", "of", "pilots", "of", "each", "nationality", "."], "question_arg": [["what"], ["are"], ["different"], ["nationality"], ["of"], ["pilot"], ["?"], ["show"], ["each"], ["nationality"], ["and"], ["number"], ["of"], ["pilot"], ["of"], ["each"], ["nationality"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["different", "JJ"], ["nationality", "NN"], ["of", "IN"], ["pilot", "NN"], ["?", "."], ["show", "VB"], ["each", "DT"], ["nationality", "NN"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["pilot", "NN"], ["of", "IN"], ["each", "DT"], ["nationality", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(12) T(1) A(3) C(0) T(1)"}, {"db_id": "soccer_2", "query": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no'", "query_toks": ["SELECT", "avg", "(", "T1.HS", ")", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T2.decision", "=", "'no", "'"], "query_toks_no_value": ["select", "avg", "(", "t1", ".", "hs", ")", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t2", ".", "decision", "=", "value"], "question": "Find the average hours for the students whose tryout decision is no.", "question_toks": ["find", "average", "hour", "for", "student", "whose", "tryout", "decision", "is", "no", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[5, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"no\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "average", "hours", "for", "the", "students", "whose", "tryout", "decision", "is", "no", "."], "question_arg": [["find"], ["average"], ["training", "hour"], ["for"], ["student"], ["whose"], ["tryout"], ["decision"], ["is"], ["no"], ["."]], "question_arg_type": [["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "JJ"], ["average", "JJ"], ["hour", "NN"], ["for", "IN"], ["student", "NN"], ["whose", "WP$"], ["tryout", "NN"], ["decision", "NN"], ["is", "VBZ"], ["no", "DT"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(5) C(7) T(1) Filter(2) A(0) C(9) T(2)"}, {"db_id": "network_2", "query": "SELECT avg(age) ,  job FROM Person GROUP BY job", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "job", "FROM", "Person", "GROUP", "BY", "job"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "job", "from", "person", "group", "by", "job"], "question": "What is average age for different job title?", "question_toks": ["what", "is", "average", "age", "for", "different", "job", "title", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["What", "is", "average", "age", "for", "different", "job", "title", "?"], "question_arg": [["what"], ["is"], ["average"], ["age"], ["for"], ["different"], ["job"], ["title"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["age", "NN"], ["for", "IN"], ["different", "JJ"], ["job", "NN"], ["title", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(5) C(2) T(0) A(0) C(5) T(0)"}, {"db_id": "soccer_2", "query": "SELECT count(*) FROM College", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "College"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "college"], "question": "How many colleges in total?", "question_toks": ["how", "many", "college", "in", "total", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["How", "many", "colleges", "in", "total", "?"], "question_arg": [["how"], ["many"], ["college"], ["in"], ["total"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["college", "NN"], ["in", "IN"], ["total", "JJ"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(0)"}, {"db_id": "soccer_2", "query": "SELECT avg(enr) FROM College", "query_toks": ["SELECT", "avg", "(", "enr", ")", "FROM", "College"], "query_toks_no_value": ["select", "avg", "(", "enr", ")", "from", "college"], "question": "What is the average enrollment number?", "question_toks": ["what", "is", "average", "enrollment", "number", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "is", "the", "average", "enrollment", "number", "?"], "question_arg": [["what"], ["is"], ["average"], ["enrollment"], ["number"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["average", "JJ"], ["enrollment", "JJ"], ["number", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(5) C(3) T(0)"}, {"db_id": "soccer_2", "query": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "'goalie", "'", "INTERSECT", "SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "'mid", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "cname", "from", "tryout", "where", "ppos", "=", "value", "intersect", "select", "cname", "from", "tryout", "where", "ppos", "=", "value", ")"], "question": "How many schools have some students playing in goalie and mid positions.", "question_toks": ["how", "many", "school", "have", "some", "student", "playing", "in", "goalie", "and", "mid", "position", "."], "sql": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["How", "many", "schools", "have", "some", "students", "playing", "in", "goalie", "and", "mid", "positions", "."], "question_arg": [["how"], ["many"], ["school"], ["have"], ["some"], ["student"], ["playing"], ["in"], ["goalie"], ["and"], ["mid"], ["player", "position"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["school", "NN"], ["have", "VBP"], ["some", "DT"], ["student", "NN"], ["playing", "VBG"], ["in", "IN"], ["goalie", "NN"], ["and", "CC"], ["mid", "JJ"], ["position", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T({'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"goalie\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"mid\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None})"}, {"db_id": "geo", "query": "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "traverse", ")", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MIN", "(", "DISTINCT", "LENGTH", ")", "FROM", "river", ")", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "traverse", ")", "from", "river", "where", "length", "=", "(", "select", "min", "(", "distinct", "length", ")", "from", "river", ")"], "question": "how many states in the us does the shortest river run through", "question_toks": ["how", "many", "state", "in", "u", "doe", "shortest", "river", "run", "through"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 29, true], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[2, [0, [0, 27, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "in", "the", "us", "does", "the", "shortest", "river", "run", "through"], "question_arg": [["how"], ["many"], ["state"], ["in"], ["u"], ["doe"], ["shortest"], ["river"], ["run"], ["through"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["in", "IN"], ["u", "JJ"], ["doe", "NN"], ["shortest", "JJS"], ["river", "NN"], ["run", "VBP"], ["through", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(18) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(2) C(17) T(6)"}, {"db_id": "flight_4", "query": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'", "query_toks": ["SELECT", "count", "(", "DISTINCT", "dst_apid", ")", "FROM", "airlines", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.alid", "=", "T2.alid", "WHERE", "T1.name", "=", "'American", "Airlines", "'"], "query_toks_no_value": ["select", "count", "(", "distinct", "dst_apid", ")", "from", "airlines", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "alid", "=", "t2", ".", "alid", "where", "t1", ".", "name", "=", "value"], "question": "Find the number of different airports which are the destinations of the American Airlines.", "question_toks": ["find", "number", "of", "different", "airport", "which", "are", "destination", "of", "american", "airline", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 2, true], null]]]], "where": [[false, 2, [0, [0, 19, false], null], "\"American Airlines\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "number", "of", "different", "airports", "which", "are", "the", "destinations", "of", "the", "American", "Airlines", "."], "question_arg": [["find"], ["number"], ["of"], ["different"], ["airport"], ["which"], ["are"], ["destination", "airport"], ["of"], ["american"], ["airline"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["number", "NN"], ["of", "IN"], ["different", "JJ"], ["airport", "NN"], ["which", "WDT"], ["are", "VBP"], ["destination", "NN"], ["of", "IN"], ["american", "JJ"], ["airline", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(2) T(0) Filter(2) A(0) C(10) T(2)"}, {"db_id": "geo", "query": "SELECT traverse FROM river WHERE river_name  =  \"ohio\";", "query_toks": ["SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "ohio", "''", ";"], "query_toks_no_value": ["select", "traverse", "from", "river", "where", "river_name", "=", "value"], "question": "which states do ohio river flow through", "question_toks": ["which", "state", "do", "ohio", "river", "flow", "through"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"ohio\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "states", "do", "ohio", "river", "flow", "through"], "question_arg": [["which"], ["state"], ["do"], ["ohio"], ["river"], ["flow"], ["through"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["do", "VBP"], ["ohio", "RB"], ["river", "VB"], ["flow", "NN"], ["through", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "=", "``", "illinois", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "=", "value"], "question": "what river flows through illinois", "question_toks": ["what", "river", "flow", "through", "illinois"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"illinois\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "river", "flows", "through", "illinois"], "question_arg": [["what"], ["river"], ["flow"], ["through"], ["illinois"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["river", "NN"], ["flow", "NN"], ["through", "IN"], ["illinois", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "flight_2", "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.AirportCode", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "OR", "T1.AirportCode", "=", "T2.SourceAirport", "GROUP", "BY", "T1.AirportCode", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "airportcode", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "or", "t1", ".", "airportcode", "=", "t2", ".", "sourceairport", "group", "by", "t1", ".", "airportcode", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the code of airport that has the highest number of flights?", "question_toks": ["what", "is", "code", "of", "airport", "that", "ha", "highest", "number", "of", "flight", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [[0, 6, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["What", "is", "the", "code", "of", "airport", "that", "has", "the", "highest", "number", "of", "flights", "?"], "question_arg": [["what"], ["is"], ["airport", "code"], ["of"], ["airport"], ["that"], ["ha"], ["highest"], ["flight", "number"], ["of"], ["flight"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["code", "NN"], ["of", "IN"], ["airport", "NN"], ["that", "IN"], ["ha", "NN"], ["highest", "JJS"], ["number", "NN"], ["of", "IN"], ["flight", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(6) T(1) Sup(0) A(3) C(0) T(2)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where are some good arabics on buchanan in san francisco ?", "question_toks": ["where", "are", "some", "good", "arabic", "on", "buchanan", "in", "san", "francisco", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"buchanan\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "are", "some", "good", "arabics", "on", "buchanan", "in", "san", "francisco", "?"], "question_arg": [["where"], ["are"], ["some"], ["good"], ["arabic"], ["on"], ["buchanan"], ["in"], ["san"], ["francisco"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["are", "VBP"], ["some", "DT"], ["good", "JJ"], ["arabic", "NN"], ["on", "IN"], ["buchanan", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(10) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "storm_record", "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id", "query_toks": ["SELECT", "T1.region_name", ",", "count", "(", "*", ")", "FROM", "region", "AS", "T1", "JOIN", "affected_region", "AS", "T2", "ON", "T1.region_id", "=", "T2.region_id", "GROUP", "BY", "T1.region_id"], "query_toks_no_value": ["select", "t1", ".", "region_name", ",", "count", "(", "*", ")", "from", "region", "as", "t1", "join", "affected_region", "as", "t2", "on", "t1", ".", "region_id", "=", "t2", ".", "region_id", "group", "by", "t1", ".", "region_id"], "question": "How many storms occured in each region?", "question_toks": ["how", "many", "storm", "occured", "in", "each", "region", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 7, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "region id", "storm id", "number city affected"], "table_names": ["storm", "region", "affected region"], "col_set": ["*", "storm id", "name", "dates active", "max speed", "damage millions usd", "number deaths", "region id", "region code", "region name", "number city affected"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2], "keys": {"11": 1, "1": 1, "10": 10, "7": 7}, "origin_question_toks": ["How", "many", "storms", "occured", "in", "each", "region", "?"], "question_arg": [["how"], ["many"], ["storm"], ["occured"], ["in"], ["each"], ["region"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["storm", "NN"], ["occured", "VBN"], ["in", "IN"], ["each", "DT"], ["region", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(9) T(1) A(3) C(0) T(2)"}, {"db_id": "soccer_2", "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "DISTINCT", "T1.state", ",", "T1.enr", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "state", ",", "t1", ".", "enr", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "decision", "=", "value"], "question": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?", "question_toks": ["how", "many", "student", "are", "enrolled", "in", "college", "that", "have", "student", "accepted", "during", "tryout", ",", "and", "in", "which", "state", "are", "those", "college", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["How", "many", "students", "are", "enrolled", "in", "colleges", "that", "have", "student", "accepted", "during", "tryouts", ",", "and", "in", "which", "states", "are", "those", "colleges", "?"], "question_arg": [["how"], ["many"], ["student"], ["are"], ["enrolled"], ["in"], ["college"], ["that"], ["have"], ["student"], ["accepted"], ["during"], ["tryout"], [","], ["and"], ["in"], ["which"], ["state"], ["are"], ["those"], ["college"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["student", "NN"], ["are", "VBP"], ["enrolled", "VBN"], ["in", "IN"], ["college", "NN"], ["that", "WDT"], ["have", "VBP"], ["student", "NN"], ["accepted", "VBN"], ["during", "IN"], ["tryout", "NN"], [",", ","], ["and", "CC"], ["in", "IN"], ["which", "WDT"], ["state", "NN"], ["are", "VBP"], ["those", "DT"], ["college", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(2) T(0) A(0) C(3) T(0) Filter(2) A(0) C(9) T(2)"}, {"db_id": "flight_1", "query": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1", "query_toks": ["SELECT", "eid", ",", "name", "FROM", "Employee", "ORDER", "BY", "salary", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "eid", ",", "name", "from", "employee", "order", "by", "salary", "desc", "limit", "value"], "question": "Show the id and name of the employee with maximum salary.", "question_toks": ["show", "id", "and", "name", "of", "employee", "with", "maximum", "salary", "."], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "the", "id", "and", "name", "of", "the", "employee", "with", "maximum", "salary", "."], "question_arg": [["show"], ["id"], ["and"], ["name"], ["of"], ["employee"], ["with"], ["maximum"], ["salary"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["agg"], ["col"], ["NONE"]], "nltk_pos": [["show", "NN"], ["id", "NN"], ["and", "CC"], ["name", "NN"], ["of", "IN"], ["employee", "NN"], ["with", "IN"], ["maximum", "JJ"], ["salary", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(10) T(2) A(0) C(9) T(2) Sup(0) A(0) C(11) T(2)"}, {"db_id": "soccer_2", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)", "query_toks": ["SELECT", "count", "(", "DISTINCT", "state", ")", "FROM", "college", "WHERE", "enr", "<", "(", "SELECT", "avg", "(", "enr", ")", "FROM", "college", ")"], "query_toks_no_value": ["select", "count", "(", "distinct", "state", ")", "from", "college", "where", "enr", "<", "(", "select", "avg", "(", "enr", ")", "from", "college", ")"], "question": "How many states have smaller colleges than average?", "question_toks": ["how", "many", "state", "have", "smaller", "college", "than", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]]]], "where": [[false, 4, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["How", "many", "states", "have", "smaller", "colleges", "than", "average", "?"], "question_arg": [["how"], ["many"], ["state"], ["have"], ["smaller"], ["college"], ["than"], ["average"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["MORE"], ["table"], ["NONE"], ["agg"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["have", "VBP"], ["smaller", "JJR"], ["college", "NN"], ["than", "IN"], ["average", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(2) T(0) Filter(12) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(5) C(3) T(0)"}, {"db_id": "flight_4", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)", "query_toks": ["SELECT", "city", "FROM", "airports", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "2", "ORDER", "BY", "count", "(", "*", ")"], "query_toks_no_value": ["select", "city", "from", "airports", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value", "order", "by", "count", "(", "*", ")"], "question": "List the cities which have more than 2 airports sorted by the number of airports.", "question_toks": ["list", "city", "which", "have", "more", "than", "2", "airport", "sorted", "by", "number", "of", "airport", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [], "groupBy": [[0, 11, false]], "having": [[false, 3, [0, [3, 0, false], null], 2.0, null]], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["List", "the", "cities", "which", "have", "more", "than", "2", "airports", "sorted", "by", "the", "number", "of", "airports", "."], "question_arg": [["list"], ["city"], ["which"], ["have"], ["more"], ["than"], ["2"], ["airport"], ["sorted"], ["by"], ["number"], ["of"], ["airport"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["list", "NN"], ["city", "NN"], ["which", "WDT"], ["have", "VBP"], ["more", "JJR"], ["than", "IN"], ["2", "CD"], ["airport", "NN"], ["sorted", "VBN"], ["by", "IN"], ["number", "NN"], ["of", "IN"], ["airport", "NN"], [".", "."]], "rule_label": "Root1(3) Root(1) Sel(0) N(0) A(0) C(11) T(1) Filter(5) A(3) C(0) T(1) Order(1) A(3) C(0) T(1)"}, {"db_id": "singer", "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC", "query_toks": ["SELECT", "Name", "FROM", "singer", "ORDER", "BY", "Net_Worth_Millions", "ASC"], "query_toks_no_value": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "asc"], "question": "List the name of singers in ascending order of net worth.", "question_toks": ["list", "name", "of", "singer", "in", "ascending", "order", "of", "net", "worth", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 4, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["List", "the", "name", "of", "singers", "in", "ascending", "order", "of", "net", "worth", "."], "question_arg": [["list"], ["name"], ["of"], ["singer"], ["in"], ["ascending"], ["order"], ["of"], ["net", "worth", "million"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["list", "NN"], ["name", "NN"], ["of", "IN"], ["singer", "NN"], ["in", "IN"], ["ascending", "VBG"], ["order", "NN"], ["of", "IN"], ["net", "JJ"], ["worth", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(0) A(0) C(2) T(0) Order(1) A(0) C(4) T(0)"}, {"db_id": "soccer_2", "query": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos", "query_toks": ["SELECT", "max", "(", "T1.HS", ")", ",", "pPos", "FROM", "player", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.pID", "=", "T2.pID", "WHERE", "T1.HS", ">", "1000", "GROUP", "BY", "T2.pPos"], "query_toks_no_value": ["select", "max", "(", "t1", ".", "hs", ")", ",", "ppos", "from", "player", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "pid", "=", "t2", ".", "pid", "where", "t1", ".", "hs", ">", "value", "group", "by", "t2", ".", "ppos"], "question": "What is the maximum training hours for the students whose training hours is greater than 1000 in different positions?", "question_toks": ["what", "is", "maximum", "training", "hour", "for", "student", "whose", "training", "hour", "is", "greater", "than", "1000", "in", "different", "position", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 8, false], null]]}, "select": [false, [[1, [0, [0, 7, false], null]], [0, [0, [0, 10, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 1000.0, null]], "groupBy": [[0, 10, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "is", "the", "maximum", "training", "hours", "for", "the", "students", "whose", "training", "hours", "is", "greater", "than", "1000", "in", "different", "positions", "?"], "question_arg": [["what"], ["is"], ["maximum"], ["training", "hour"], ["for"], ["student"], ["whose"], ["training", "hour"], ["is"], ["greater"], ["than"], ["1000"], ["in"], ["different"], ["player", "position"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["maximum", "JJ"], ["training", "VBG"], ["hour", "NN"], ["for", "IN"], ["student", "NN"], ["whose", "WP$"], ["training", "VBG"], ["hour", "NN"], ["is", "VBZ"], ["greater", "JJR"], ["than", "IN"], ["1000", "CD"], ["in", "IN"], ["different", "JJ"], ["position", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(1) C(7) T(1) A(0) C(8) T(2) Filter(5) A(0) C(7) T(1)"}, {"db_id": "network_2", "query": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )", "query_toks": ["SELECT", "name", "FROM", "Person", "WHERE", "job", "=", "'student", "'", "AND", "age", "=", "(", "SELECT", "max", "(", "age", ")", "FROM", "person", "WHERE", "job", "=", "'student", "'", ")"], "query_toks_no_value": ["select", "name", "from", "person", "where", "job", "=", "value", "and", "age", "=", "(", "select", "max", "(", "age", ")", "from", "person", "where", "job", "=", "value", ")"], "question": "What is the name of the oldest student?", "question_toks": ["what", "is", "name", "of", "oldest", "student", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"student\"", null], "and", [false, 2, [0, [0, 2, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"student\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "oldest", "student", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["oldest"], ["student"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["oldest", "JJS"], ["student", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(2) A(0) C(5) T(0) Filter(11) A(0) C(2) T(0) Root(3) Sel(0) N(0) A(1) C(2) T(0) Filter(2) A(0) C(5) T(0)"}, {"db_id": "geo", "query": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"texas\";", "query_toks": ["SELECT", "COUNT", "(", "city_name", ")", "FROM", "city", "WHERE", "population", ">", "150000", "AND", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "count", "(", "city_name", ")", "from", "city", "where", "population", ">", "value", "and", "state_name", "=", "value"], "question": "how many big cities are in texas", "question_toks": ["how", "many", "big", "city", "are", "in", "texas"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 150000.0, null], "and", [false, 2, [0, [0, 10, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "big", "cities", "are", "in", "texas"], "question_arg": [["how"], ["many"], ["big"], ["city"], ["are"], ["in"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["big", "JJ"], ["city", "NN"], ["are", "VBP"], ["in", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(7) T(1) Filter(0) Filter(5) A(0) C(2) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "soccer_2", "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3", "query_toks": ["SELECT", "cName", "FROM", "college", "ORDER", "BY", "enr", "DESC", "LIMIT", "3"], "query_toks_no_value": ["select", "cname", "from", "college", "order", "by", "enr", "desc", "limit", "value"], "question": "What are the names of the schools with the top 3 largest class sizes?", "question_toks": ["what", "are", "name", "of", "school", "with", "top", "3", "largest", "class", "size", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": 3, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "schools", "with", "the", "top", "3", "largest", "class", "sizes", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["school"], ["with"], ["top"], ["3"], ["largest"], ["class"], ["size"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["value"], ["MOST"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["school", "NN"], ["with", "IN"], ["top", "JJ"], ["3", "CD"], ["largest", "JJS"], ["class", "NN"], ["size", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(1) T(0) Sup(0) A(0) C(3) T(0)"}, {"db_id": "network_2", "query": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')", "query_toks": ["SELECT", "friend", "FROM", "PersonFriend", "WHERE", "name", "=", "'Zach", "'", "AND", "YEAR", "=", "(", "SELECT", "max", "(", "YEAR", ")", "FROM", "PersonFriend", "WHERE", "name", "=", "'Zach", "'", ")"], "query_toks_no_value": ["select", "friend", "from", "personfriend", "where", "name", "=", "value", "and", "year", "=", "(", "select", "max", "(", "year", ")", "from", "personfriend", "where", "name", "=", "value", ")"], "question": "Who is the friend of Zach with longest year relationship?", "question_toks": ["who", "is", "friend", "of", "zach", "with", "longest", "year", "relationship", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zach\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 6, false], null], "\"Zach\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["Who", "is", "the", "friend", "of", "Zach", "with", "longest", "year", "relationship", "?"], "question_arg": [["who"], ["is"], ["friend"], ["of"], ["zach"], ["with"], ["longest"], ["year"], ["relationship"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["who", "WP"], ["is", "VBZ"], ["friend", "NN"], ["of", "IN"], ["zach", "NN"], ["with", "IN"], ["longest", "JJ"], ["year", "NN"], ["relationship", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(1) Filter(0) Filter(2) A(0) C(1) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(1) C(7) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "flight_1", "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"", "query_toks": ["SELECT", "departure_date", ",", "arrival_date", "FROM", "Flight", "WHERE", "origin", "=", "``", "Los", "Angeles", "''", "AND", "destination", "=", "``", "Honolulu", "''"], "query_toks_no_value": ["select", "departure_date", ",", "arrival_date", "from", "flight", "where", "origin", "=", "value", "and", "destination", "=", "value"], "question": "Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.", "question_toks": ["show", "me", "departure", "date", "and", "arrival", "date", "for", "all", "flight", "from", "los", "angeles", "to", "honolulu", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]], [0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"Los Angeles\"", null], "and", [false, 2, [0, [0, 3, false], null], "\"Honolulu\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "me", "the", "departure", "date", "and", "arrival", "date", "for", "all", "flights", "from", "Los", "Angeles", "to", "Honolulu", "."], "question_arg": [["show"], ["me"], ["departure", "date"], ["and"], ["arrival", "date"], ["for"], ["all"], ["flight"], ["from"], ["los"], ["angeles"], ["to"], ["honolulu"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "VB"], ["me", "PRP"], ["departure", "JJ"], ["date", "NN"], ["and", "CC"], ["arrival", "NN"], ["date", "NN"], ["for", "IN"], ["all", "DT"], ["flight", "NN"], ["from", "IN"], ["los", "NN"], ["angeles", "NNS"], ["to", "TO"], ["honolulu", "VB"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(5) T(0) A(0) C(6) T(0) Filter(0) Filter(2) A(0) C(2) T(0) Filter(2) A(0) C(3) T(0)"}, {"db_id": "soccer_2", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)", "query_toks": ["SELECT", "count", "(", "DISTINCT", "state", ")", "FROM", "college", "WHERE", "enr", ">", "(", "SELECT", "avg", "(", "enr", ")", "FROM", "college", ")"], "query_toks_no_value": ["select", "count", "(", "distinct", "state", ")", "from", "college", "where", "enr", ">", "(", "select", "avg", "(", "enr", ")", "from", "college", ")"], "question": "How many states have a college with more students than average?", "question_toks": ["how", "many", "state", "have", "a", "college", "with", "more", "student", "than", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["How", "many", "states", "have", "a", "college", "with", "more", "students", "than", "average", "?"], "question_arg": [["how"], ["many"], ["state"], ["have"], ["a"], ["college"], ["with"], ["more"], ["student"], ["than"], ["average"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["MORE"], ["NONE"], ["NONE"], ["agg"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["have", "VBP"], ["a", "DT"], ["college", "NN"], ["with", "IN"], ["more", "RBR"], ["student", "NN"], ["than", "IN"], ["average", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(2) T(0) Filter(13) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(5) C(3) T(0)"}, {"db_id": "theme_gallery", "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500", "query_toks": ["SELECT", "T2.theme", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T1.attendance", "<", "100", "INTERSECT", "SELECT", "T2.theme", "FROM", "exhibition_record", "AS", "T1", "JOIN", "exhibition", "AS", "T2", "ON", "T1.exhibition_id", "=", "T2.exhibition_id", "WHERE", "T1.attendance", ">", "500"], "query_toks_no_value": ["select", "t2", ".", "theme", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t1", ".", "attendance", "<", "value", "intersect", "select", "t2", ".", "theme", "from", "exhibition_record", "as", "t1", "join", "exhibition", "as", "t2", "on", "t1", ".", "exhibition_id", "=", "t2", ".", "exhibition_id", "where", "t1", ".", "attendance", ">", "value"], "question": "Which themes have had corresponding exhibitions that have had attendance both below 100 and above 500?", "question_toks": ["which", "theme", "have", "had", "corresponding", "exhibition", "that", "have", "had", "attendance", "both", "below", "100", "and", "above", "500", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 4, [0, [0, 13, false], null], 100.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 11, false], null], [0, 6, false], null]]}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 3, [0, [0, 13, false], null], 500.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Which", "themes", "have", "had", "corresponding", "exhibitions", "that", "have", "had", "attendance", "both", "below", "100", "and", "above", "500", "?"], "question_arg": [["which"], ["theme"], ["have"], ["had"], ["corresponding"], ["exhibition"], ["that"], ["have"], ["had"], ["attendance"], ["both"], ["below"], ["100"], ["and"], ["above"], ["500"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["value"], ["NONE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["theme", "NN"], ["have", "VBP"], ["had", "VBN"], ["corresponding", "JJ"], ["exhibition", "NN"], ["that", "WDT"], ["have", "VBP"], ["had", "VBN"], ["attendance", "NN"], ["both", "DT"], ["below", "IN"], ["100", "CD"], ["and", "CC"], ["above", "IN"], ["500", "CD"], ["?", "."]], "rule_label": "Root1(0) Root(3) Sel(0) N(0) A(0) C(8) T(1) Filter(4) A(0) C(11) T(2) Root(3) Sel(0) N(0) A(0) C(8) T(1) Filter(5) A(0) C(11) T(2)"}, {"db_id": "flight_1", "query": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1", "query_toks": ["SELECT", "flno", ",", "distance", "FROM", "Flight", "ORDER", "BY", "price", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "flno", ",", "distance", "from", "flight", "order", "by", "price", "desc", "limit", "value"], "question": "What is the flight number and its distance for the one with the maximum price?", "question_toks": ["what", "is", "flight", "number", "and", "it", "distance", "for", "one", "with", "maximum", "price", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 7, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "flight", "number", "and", "its", "distance", "for", "the", "one", "with", "the", "maximum", "price", "?"], "question_arg": [["what"], ["is"], ["flight", "number"], ["and"], ["it"], ["distance"], ["for"], ["one"], ["with"], ["maximum"], ["price"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["agg"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["flight", "NN"], ["number", "NN"], ["and", "CC"], ["it", "PRP"], ["distance", "NN"], ["for", "IN"], ["one", "CD"], ["with", "IN"], ["maximum", "JJ"], ["price", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(1) T(0) A(0) C(4) T(0) Sup(0) A(0) C(7) T(0)"}, {"db_id": "flight_4", "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3", "query_toks": ["SELECT", "city", "FROM", "airports", "WHERE", "country", "=", "'United", "States", "'", "GROUP", "BY", "city", "HAVING", "count", "(", "*", ")", ">", "3"], "query_toks_no_value": ["select", "city", "from", "airports", "where", "country", "=", "value", "group", "by", "city", "having", "count", "(", "*", ")", ">", "value"], "question": "Return the cities with more than 3 airports in the United States.", "question_toks": ["return", "city", "with", "more", "than", "3", "airport", "in", "united", "state", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"United States\"", null]], "groupBy": [[0, 11, false]], "having": [[false, 3, [0, [3, 0, false], null], 3.0, null]], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Return", "the", "cities", "with", "more", "than", "3", "airports", "in", "the", "United", "States", "."], "question_arg": [["return"], ["city"], ["with"], ["more"], ["than"], ["3"], ["airport"], ["in"], ["united"], ["state"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["return", "NN"], ["city", "NN"], ["with", "IN"], ["more", "JJR"], ["than", "IN"], ["3", "CD"], ["airport", "NN"], ["in", "IN"], ["united", "JJ"], ["state", "NN"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(1) Filter(0) Filter(2) A(0) C(12) T(1) Filter(5) A(3) C(0) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );", "query_toks": ["SELECT", "state_name", "FROM", "highlow", "WHERE", "highest_elevation", "=", "(", "SELECT", "MAX", "(", "highest_elevation", ")", "FROM", "highlow", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "highlow", "where", "highest_elevation", "=", "(", "select", "max", "(", "highest_elevation", ")", "from", "highlow", ")"], "question": "which state has the highest elevation", "question_toks": ["which", "state", "ha", "highest", "elevation"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 13, false], null]]]], "where": [[false, 2, [0, [0, 14, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[1, [0, [0, 14, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "has", "the", "highest", "elevation"], "question_arg": [["which"], ["state"], ["ha"], ["highest", "elevation"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["col"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["ha", "NN"], ["highest", "JJS"], ["elevation", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(3) Filter(11) A(0) C(9) T(3) Root(5) Sel(0) N(0) A(1) C(9) T(3)"}, {"db_id": "flight_1", "query": "SELECT count(*) FROM Aircraft", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Aircraft"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "aircraft"], "question": "How many aircrafts exist in the database?", "question_toks": ["how", "many", "aircraft", "exist", "in", "database", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["How", "many", "aircrafts", "exist", "in", "the", "database", "?"], "question_arg": [["how"], ["many"], ["aircraft"], ["exist"], ["in"], ["database"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["aircraft", "NNS"], ["exist", "VBP"], ["in", "IN"], ["database", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(1)"}, {"db_id": "geo", "query": "SELECT t2.population FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";", "query_toks": ["SELECT", "t2.population", "FROM", "state", "AS", "t2", "JOIN", "border_info", "AS", "t1", "ON", "t2.state_name", "=", "t1.border", "WHERE", "t1.state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "population", "from", "state", "as", "t2", "join", "border_info", "as", "t1", "on", "t2", ".", "state_name", "=", "t1", ".", "border", "where", "t1", ".", "state_name", "=", "value"], "question": "what are the populations of states which border texas", "question_toks": ["what", "are", "population", "of", "state", "which", "border", "texas"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "populations", "of", "states", "which", "border", "texas"], "question_arg": [["what"], ["are"], ["population"], ["of"], ["state"], ["which"], ["border"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["population", "NN"], ["of", "IN"], ["state", "NN"], ["which", "WDT"], ["border", "NN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", ")"], "question": "what is the longest river in america", "question_toks": ["what", "is", "longest", "river", "in", "america"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "longest", "river", "in", "america"], "question_arg": [["what"], ["is"], ["longest"], ["river"], ["in"], ["america"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["longest", "JJS"], ["river", "NN"], ["in", "IN"], ["america", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(1) C(17) T(6)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")"], "question": "which is the smallest state", "question_toks": ["which", "is", "smallest", "state"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "is", "the", "smallest", "state"], "question_arg": [["which"], ["is"], ["smallest"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["which", "WDT"], ["is", "VBZ"], ["smallest", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where is a good restaurant in mountain view for arabic food ?", "question_toks": ["where", "is", "a", "good", "restaurant", "in", "mountain", "view", "for", "arabic", "food", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mountain view\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "is", "a", "good", "restaurant", "in", "mountain", "view", "for", "arabic", "food", "?"], "question_arg": [["where"], ["is"], ["a"], ["good"], ["restaurant"], ["in"], ["mountain"], ["view"], ["for"], ["arabic"], ["food", "type"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["a", "DT"], ["good", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["mountain", "NN"], ["view", "NN"], ["for", "IN"], ["arabic", "JJ"], ["food", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "concert_singer", "query": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id", "query_toks": ["SELECT", "T2.concert_name", ",", "T2.theme", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "concert", "AS", "T2", "ON", "T1.concert_id", "=", "T2.concert_id", "GROUP", "BY", "T2.concert_id"], "query_toks_no_value": ["select", "t2", ".", "concert_name", ",", "t2", ".", "theme", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "concert", "as", "t2", "on", "t1", ".", "concert_id", "=", "t2", ".", "concert_id", "group", "by", "t2", ".", "concert_id"], "question": "Show the name and theme for all concerts and the number of singers in each concert.", "question_toks": ["show", "name", "and", "theme", "for", "all", "concert", "and", "number", "of", "singer", "in", "each", "concert", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 16, false], null]], [0, [0, [0, 17, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 15, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["Show", "the", "name", "and", "theme", "for", "all", "concerts", "and", "the", "number", "of", "singers", "in", "each", "concert", "."], "question_arg": [["show"], ["name"], ["and"], ["theme"], ["for"], ["all"], ["concert"], ["and"], ["number"], ["of"], ["singer"], ["in"], ["each"], ["concert"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["show", "NN"], ["name", "NN"], ["and", "CC"], ["theme", "NN"], ["for", "IN"], ["all", "DT"], ["concert", "NN"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["singer", "NN"], ["in", "IN"], ["each", "DT"], ["concert", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(2) A(0) C(15) T(2) A(0) C(16) T(2) A(3) C(0) T(3)"}, {"db_id": "geo", "query": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"montana\" ) AND state_name  =  \"montana\";", "query_toks": ["SELECT", "state_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", "WHERE", "state_name", "=", "``", "montana", "''", ")", "AND", "state_name", "=", "``", "montana", "''", ";"], "query_toks_no_value": ["select", "state_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", "where", "state_name", "=", "value", ")", "and", "state_name", "=", "value"], "question": "which state is the largest city in montana in", "question_toks": ["which", "state", "is", "largest", "city", "in", "montana", "in"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"montana\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 10, false], null], "\"montana\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "state", "is", "the", "largest", "city", "in", "montana", "in"], "question_arg": [["which"], ["state"], ["is"], ["largest"], ["city"], ["in"], ["montana"], ["in"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["state", "NN"], ["is", "VBZ"], ["largest", "JJS"], ["city", "NN"], ["in", "IN"], ["montana", "NN"], ["in", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(1) Filter(0) Filter(11) A(0) C(2) T(1) Root(3) Sel(0) N(0) A(1) C(2) T(1) Filter(2) A(0) C(1) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "bethel", "island", "''", "AND", "t2.street_name", "=", "``", "bethel", "island", "rd", "''", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value"], "question": "where can we find a restaurant on bethel island rd in bethel island ?", "question_toks": ["where", "can", "we", "find", "a", "restaurant", "on", "bethel", "island", "rd", "in", "bethel", "island", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"bethel island\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"bethel island rd\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "can", "we", "find", "a", "restaurant", "on", "bethel", "island", "rd", "in", "bethel", "island", "?"], "question_arg": [["where"], ["can"], ["we"], ["find"], ["a"], ["restaurant"], ["on"], ["bethel"], ["island"], ["rd"], ["in"], ["bethel"], ["island"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["can", "MD"], ["we", "PRP"], ["find", "VB"], ["a", "DT"], ["restaurant", "NN"], ["on", "IN"], ["bethel", "NN"], ["island", "NN"], ["rd", "NN"], ["in", "IN"], ["bethel", "NN"], ["island", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(2) A(0) C(10) T(2)"}, {"db_id": "geo", "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";", "query_toks": ["SELECT", "LENGTH", "FROM", "river", "WHERE", "river_name", "=", "``", "rio", "grande", "''", ";"], "query_toks_no_value": ["select", "length", "from", "river", "where", "river_name", "=", "value"], "question": "how long is the rio grande", "question_toks": ["how", "long", "is", "rio", "grande"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"rio grande\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "long", "is", "the", "rio", "grande"], "question_arg": [["how"], ["long"], ["is"], ["rio"], ["grande"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["long", "JJ"], ["is", "VBZ"], ["rio", "JJ"], ["grande", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(17) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T2.name", ",", "T2.capacity", "FROM", "concert", "AS", "T1", "JOIN", "stadium", "AS", "T2", "ON", "T1.stadium_id", "=", "T2.stadium_id", "WHERE", "T1.year", ">", "=", "2014", "GROUP", "BY", "T2.stadium_id", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "t2", ".", "capacity", "from", "concert", "as", "t1", "join", "stadium", "as", "t2", "on", "t1", ".", "stadium_id", "=", "t2", ".", "stadium_id", "where", "t1", ".", "year", ">", "=", "value", "group", "by", "t2", ".", "stadium_id", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "question_toks": ["show", "stadium", "name", "and", "capacity", "with", "most", "number", "of", "concert", "in", "year", "year", "or", "after", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 18, false], null], [0, 1, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [[false, 5, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [[0, 1, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["Show", "the", "stadium", "name", "and", "capacity", "with", "most", "number", "of", "concerts", "in", "year", "2014", "or", "after", "."], "question_arg": [["show"], ["stadium"], ["name"], ["and"], ["capacity"], ["with"], ["most"], ["number"], ["of"], ["concert"], ["in"], ["year"], ["year"], ["or"], ["after"], ["."]], "question_arg_type": [["NONE"], ["table"], ["col"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["show", "NN"], ["stadium", "NN"], ["name", "NN"], ["and", "CC"], ["capacity", "NN"], ["with", "IN"], ["most", "JJS"], ["number", "NN"], ["of", "IN"], ["concert", "NN"], ["in", "IN"], ["year", "NN"], ["2014", "CD"], ["or", "CC"], ["after", "IN"], [".", "."]], "rule_label": "Root1(3) Root(0) Sel(0) N(1) A(0) C(3) T(0) A(0) C(4) T(0) Sup(0) A(3) C(0) T(0) Filter(7) A(0) C(17) T(2)"}, {"db_id": "network_2", "query": "SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan'", "query_toks": ["SELECT", "count", "(", "T2.friend", ")", "FROM", "Person", "AS", "T1", "JOIN", "PersonFriend", "AS", "T2", "ON", "T1.name", "=", "T2.name", "WHERE", "T1.name", "=", "'Dan", "'"], "query_toks_no_value": ["select", "count", "(", "t2", ".", "friend", ")", "from", "person", "as", "t1", "join", "personfriend", "as", "t2", "on", "t1", ".", "name", "=", "t2", ".", "name", "where", "t1", ".", "name", "=", "value"], "question": "How many friends does Dan have?", "question_toks": ["how", "many", "friend", "doe", "dan", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"Dan\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["How", "many", "friends", "does", "Dan", "have", "?"], "question_arg": [["how"], ["many"], ["friend"], ["doe"], ["dan"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["friend", "VBP"], ["doe", "JJ"], ["dan", "NNS"], ["have", "VBP"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(6) T(1) Filter(2) A(0) C(1) T(0)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "WHERE", "SourceAirport", "=", "``", "APG", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "where", "sourceairport", "=", "value"], "question": "How many flights depart from 'APG'?", "question_toks": ["how", "many", "flight", "depart", "from", "'", "apg", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"APG\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["How", "many", "flights", "depart", "from", "'APG", "'", "?"], "question_arg": [["how"], ["many"], ["flight"], ["depart"], ["from"], ["'"], ["apg"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["flight", "NN"], ["depart", "NN"], ["from", "IN"], ["'", "''"], ["apg", "NN"], ["'", "POS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(2) A(0) C(11) T(2)"}, {"db_id": "flight_2", "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.City", "FROM", "AIRPORTS", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.AirportCode", "=", "T2.DestAirport", "GROUP", "BY", "T1.City", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "city", "from", "airports", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "airportcode", "=", "t2", ".", "destairport", "group", "by", "t1", ".", "city", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which city has most number of arriving flights?", "question_toks": ["which", "city", "ha", "most", "number", "of", "arriving", "flight", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 6, false], null], [0, 13, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["Which", "city", "has", "most", "number", "of", "arriving", "flights", "?"], "question_arg": [["which"], ["city"], ["ha"], ["most"], ["flight", "number"], ["of"], ["arriving"], ["flight"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["MOST"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["city", "NN"], ["ha", "VBZ"], ["most", "RBS"], ["number", "NN"], ["of", "IN"], ["arriving", "VBG"], ["flight", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(5) T(1) Sup(0) A(3) C(0) T(2)"}, {"db_id": "geo", "query": "SELECT SUM ( area ) FROM state;", "query_toks": ["SELECT", "SUM", "(", "area", ")", "FROM", "state", ";"], "query_toks_no_value": ["select", "sum", "(", "area", ")", "from", "state"], "question": "what is the area of all the states combined", "question_toks": ["what", "is", "area", "of", "all", "state", "combined"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[4, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "area", "of", "all", "the", "states", "combined"], "question_arg": [["what"], ["is"], ["area"], ["of"], ["all"], ["state"], ["combined"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["area", "NN"], ["of", "IN"], ["all", "DT"], ["state", "NN"], ["combined", "VBD"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(4) C(3) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "LOCATION", "AS", "t2", "JOIN", "restaurant", "AS", "t1", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t1.city_name", "IN", "(", "SELECT", "city_name", "FROM", "geographic", "WHERE", "region", "=", "``", "bay", "area", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "location", "as", "t2", "join", "restaurant", "as", "t1", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t1", ".", "city_name", "in", "(", "select", "city_name", "from", "geographic", "where", "region", "=", "value", ")"], "question": "where can i find a restaurant in the bay area ?", "question_toks": ["where", "can", "i", "find", "a", "restaurant", "in", "bay", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 8, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"bay area\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "can", "i", "find", "a", "restaurant", "in", "the", "bay", "area", "?"], "question_arg": [["where"], ["can"], ["i"], ["find"], ["a"], ["restaurant"], ["in"], ["bay"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["can", "MD"], ["i", "VB"], ["find", "VB"], ["a", "DT"], ["restaurant", "NN"], ["in", "IN"], ["bay", "JJ"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT population FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );", "query_toks": ["SELECT", "population", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "population", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")"], "question": "what is the population of the smallest state", "question_toks": ["what", "is", "population", "of", "smallest", "state"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "population", "of", "the", "smallest", "state"], "question_arg": [["what"], ["is"], ["population"], ["of"], ["smallest"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["population", "NN"], ["of", "IN"], ["smallest", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"alabama\" );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "IN", "(", "SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "alabama", "''", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "in", "(", "select", "border", "from", "border_info", "where", "state_name", "=", "value", ")"], "question": "which rivers run through states bordering alabama", "question_toks": ["which", "river", "run", "through", "state", "bordering", "alabama"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 8, [0, [0, 29, false], null], {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"alabama\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "rivers", "run", "through", "states", "bordering", "alabama"], "question_arg": [["which"], ["river"], ["run"], ["through"], ["state"], ["bordering"], ["alabama"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["river", "NN"], ["run", "VBP"], ["through", "IN"], ["state", "NN"], ["bordering", "NN"], ["alabama", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(18) A(0) C(18) T(6) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";", "query_toks": ["SELECT", "state_name", "FROM", "city", "WHERE", "city_name", "=", "``", "springfield", "''", ";"], "query_toks_no_value": ["select", "state_name", "from", "city", "where", "city_name", "=", "value"], "question": "what states have towns named springfield", "question_toks": ["what", "state", "have", "town", "named", "springfield"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"springfield\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "have", "towns", "named", "springfield"], "question_arg": [["what"], ["state"], ["have"], ["town"], ["named"], ["springfield"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["have", "VBP"], ["town", "NN"], ["named", "VBN"], ["springfield", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "city_name", "=", "``", "boulder", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "city_name", "=", "value"], "question": "people in boulder", "question_toks": ["people", "in", "boulder"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"boulder\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["people", "in", "boulder"], "question_arg": [["people"], ["in"], ["boulder"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["people", "NNS"], ["in", "IN"], ["boulder", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", ">", "750", "AND", "traverse", "=", "``", "illinois", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", ">", "value", "and", "traverse", "=", "value"], "question": "what are the major rivers in illinois", "question_toks": ["what", "are", "major", "river", "in", "illinois"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 3, [0, [0, 27, false], null], 750.0, null], "and", [false, 2, [0, [0, 29, false], null], "\"illinois\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "major", "rivers", "in", "illinois"], "question_arg": [["what"], ["are"], ["major"], ["river"], ["in"], ["illinois"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["major", "JJ"], ["river", "NN"], ["in", "IN"], ["illinois", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(0) Filter(5) A(0) C(17) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE city_name  =  \"seattle\" AND state_name  =  \"washington\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "city_name", "=", "``", "seattle", "''", "AND", "state_name", "=", "``", "washington", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "city_name", "=", "value", "and", "state_name", "=", "value"], "question": "how many people live in seattle washington", "question_toks": ["how", "many", "people", "live", "in", "seattle", "washington"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"seattle\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"washington\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "people", "live", "in", "seattle", "washington"], "question_arg": [["how"], ["many"], ["people"], ["live"], ["in"], ["seattle"], ["washington"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["people", "NNS"], ["live", "VBP"], ["in", "IN"], ["seattle", "JJ"], ["washington", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(0) Filter(2) A(0) C(7) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "concert_singer", "query": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id", "query_toks": ["SELECT", "T2.name", ",", "count", "(", "*", ")", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "GROUP", "BY", "T2.singer_id"], "query_toks_no_value": ["select", "t2", ".", "name", ",", "count", "(", "*", ")", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "group", "by", "t2", ".", "singer_id"], "question": "List singer names and number of concerts for each singer.", "question_toks": ["list", "singer", "name", "and", "number", "of", "concert", "for", "each", "singer", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]], [3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [[0, 8, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["List", "singer", "names", "and", "number", "of", "concerts", "for", "each", "singer", "."], "question_arg": [["list"], ["singer"], ["name"], ["and"], ["number"], ["of"], ["concert"], ["for"], ["each"], ["singer"], ["."]], "question_arg_type": [["NONE"], ["table"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["list", "NN"], ["singer", "NN"], ["name", "NN"], ["and", "CC"], ["number", "NN"], ["of", "IN"], ["concert", "NN"], ["for", "IN"], ["each", "DT"], ["singer", "NN"], [".", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(3) T(1) A(3) C(0) T(3)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "alameda", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me some good restaurants in alameda ?", "question_toks": ["give", "me", "some", "good", "restaurant", "in", "alameda", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"alameda\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "some", "good", "restaurants", "in", "alameda", "?"], "question_arg": [["give"], ["me"], ["some"], ["good"], ["restaurant"], ["in"], ["alameda"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["some", "DT"], ["good", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["alameda", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(5) A(0) C(7) T(1)"}, {"db_id": "soccer_2", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)", "query_toks": ["SELECT", "count", "(", "DISTINCT", "state", ")", "FROM", "college", "WHERE", "enr", "<", "(", "SELECT", "avg", "(", "enr", ")", "FROM", "college", ")"], "query_toks_no_value": ["select", "count", "(", "distinct", "state", ")", "from", "college", "where", "enr", "<", "(", "select", "avg", "(", "enr", ")", "from", "college", ")"], "question": "What is the number of states that has some colleges whose enrollment is smaller than the average enrollment?", "question_toks": ["what", "is", "number", "of", "state", "that", "ha", "some", "college", "whose", "enrollment", "is", "smaller", "than", "average", "enrollment", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 2, true], null]]]], "where": [[false, 4, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "is", "the", "number", "of", "states", "that", "has", "some", "colleges", "whose", "enrollment", "is", "smaller", "than", "the", "average", "enrollment", "?"], "question_arg": [["what"], ["is"], ["number"], ["of"], ["state"], ["that"], ["ha"], ["some"], ["college"], ["whose"], ["enrollment"], ["is"], ["smaller"], ["than"], ["average"], ["enrollment"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["MORE"], ["NONE"], ["agg"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["number", "NN"], ["of", "IN"], ["state", "NN"], ["that", "WDT"], ["ha", "VBD"], ["some", "DT"], ["college", "NN"], ["whose", "WP$"], ["enrollment", "NN"], ["is", "VBZ"], ["smaller", "JJR"], ["than", "IN"], ["average", "JJ"], ["enrollment", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(2) T(0) Filter(12) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(5) C(3) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", "=", "(", "SELECT", "MAX", "(", "t1.rating", ")", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t1.food_type", "=", "``", "french", "''", ")", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", "=", "(", "select", "max", "(", "t1", ".", "rating", ")", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", ")"], "question": "Where is the best french in san francisco ?", "question_toks": ["where", "is", "best", "french", "in", "san", "francisco", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["Where", "is", "the", "best", "french", "in", "san", "francisco", "?"], "question_arg": [["where"], ["is"], ["best"], ["french"], ["in"], ["san"], ["francisco"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["best", "JJS"], ["french", "JJ"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(1) C(7) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE city_name  =  \"boulder\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "city_name", "=", "``", "boulder", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "city_name", "=", "value"], "question": "number of people in boulder", "question_toks": ["number", "of", "people", "in", "boulder"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"boulder\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["number", "of", "people", "in", "boulder"], "question_arg": [["number"], ["of"], ["people"], ["in"], ["boulder"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["number", "NN"], ["of", "IN"], ["people", "NNS"], ["in", "IN"], ["boulder", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(2) A(0) C(7) T(1)"}, {"db_id": "singer", "query": "SELECT Name FROM singer WHERE Citizenship != \"France\"", "query_toks": ["SELECT", "Name", "FROM", "singer", "WHERE", "Citizenship", "!", "=", "``", "France", "''"], "query_toks_no_value": ["select", "name", "from", "singer", "where", "citizenship", "!", "=", "value"], "question": "What are the names of the singers who are not French citizens?", "question_toks": ["what", "are", "name", "of", "singer", "who", "are", "not", "french", "citizen", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 7, [0, [0, 5, false], null], "\"France\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "singers", "who", "are", "not", "French", "citizens", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["singer"], ["who"], ["are"], ["not"], ["french"], ["citizen"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["singer", "NN"], ["who", "WP"], ["are", "VBP"], ["not", "RB"], ["french", "JJ"], ["citizen", "NNS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(3) A(0) C(5) T(0)"}, {"db_id": "geo", "query": "SELECT density FROM state WHERE state_name  =  \"wyoming\";", "query_toks": ["SELECT", "density", "FROM", "state", "WHERE", "state_name", "=", "``", "wyoming", "''", ";"], "query_toks_no_value": ["select", "density", "from", "state", "where", "state_name", "=", "value"], "question": "what is the density of wyoming", "question_toks": ["what", "is", "density", "of", "wyoming"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [[false, 2, [0, [0, 1, false], null], "\"wyoming\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "density", "of", "wyoming"], "question_arg": [["what"], ["is"], ["density"], ["of"], ["wyoming"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["density", "NN"], ["of", "IN"], ["wyoming", "VBG"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(6) T(0) Filter(2) A(0) C(1) T(0)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "kentucky", "''", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "=", "value"], "question": "states bordering kentucky", "question_toks": ["state", "bordering", "kentucky"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"kentucky\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["states", "bordering", "kentucky"], "question_arg": [["state"], ["bordering"], ["kentucky"]], "question_arg_type": [["table"], ["NONE"], ["NONE"]], "nltk_pos": [["state", "NN"], ["bordering", "NN"], ["kentucky", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "geo", "query": "SELECT COUNT ( state_name ) FROM state;", "query_toks": ["SELECT", "COUNT", "(", "state_name", ")", "FROM", "state", ";"], "query_toks_no_value": ["select", "count", "(", "state_name", ")", "from", "state"], "question": "how many states are there in united states", "question_toks": ["how", "many", "state", "are", "there", "in", "united", "state"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 1, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "are", "there", "in", "united", "states"], "question_arg": [["how"], ["many"], ["state"], ["are"], ["there"], ["in"], ["united"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["are", "VBP"], ["there", "RB"], ["in", "IN"], ["united", "JJ"], ["state", "NN"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(1) T(0)"}, {"db_id": "icfp_1", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "t1.lname", "FROM", "authors", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.authid", "=", "t2.authid", "JOIN", "papers", "AS", "t3", "ON", "t2.paperid", "=", "t3.paperid", "GROUP", "BY", "t1.fname", ",", "t1.lname", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "lname", "from", "authors", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "authid", "=", "t2", ".", "authid", "join", "papers", "as", "t3", "on", "t2", ".", "paperid", "=", "t3", ".", "paperid", "group", "by", "t1", ".", "fname", ",", "t1", ".", "lname", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Which author has written the most papers? Find his or her last name.", "question_toks": ["which", "author", "ha", "written", "most", "paper", "?", "find", "his", "or", "her", "last", "name", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 3], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null], "and", [false, 2, [0, [0, 11, false], null], [0, 7, false], null]]}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [[0, 6, false], [0, 5, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Which", "author", "has", "written", "the", "most", "papers", "?", "Find", "his", "or", "her", "last", "name", "."], "question_arg": [["which"], ["author"], ["ha"], ["written"], ["most"], ["paper"], ["?"], ["find"], ["his"], ["or"], ["her"], ["last", "name"], ["."]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["which", "WDT"], ["author", "NN"], ["ha", "NN"], ["written", "VBN"], ["most", "JJS"], ["paper", "NN"], ["?", "."], ["find", "VB"], ["his", "PRP$"], ["or", "CC"], ["her", "PRP$"], ["last", "JJ"], ["name", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(5) T(1) Sup(0) A(3) C(0) T(1)"}, {"db_id": "soccer_2", "query": "SELECT sum(enr) FROM College", "query_toks": ["SELECT", "sum", "(", "enr", ")", "FROM", "College"], "query_toks_no_value": ["select", "sum", "(", "enr", ")", "from", "college"], "question": "What is the total enrollment number of all colleges?", "question_toks": ["what", "is", "total", "enrollment", "number", "of", "all", "college", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[4, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "is", "the", "total", "enrollment", "number", "of", "all", "colleges", "?"], "question_arg": [["what"], ["is"], ["total"], ["enrollment"], ["number"], ["of"], ["all"], ["college"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["total", "JJ"], ["enrollment", "JJ"], ["number", "NN"], ["of", "IN"], ["all", "DT"], ["college", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(4) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"texas\";", "query_toks": ["SELECT", "COUNT", "(", "city_name", ")", "FROM", "city", "WHERE", "population", ">", "150000", "AND", "state_name", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "count", "(", "city_name", ")", "from", "city", "where", "population", ">", "value", "and", "state_name", "=", "value"], "question": "how many major cities are there in texas", "question_toks": ["how", "many", "major", "city", "are", "there", "in", "texas"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 7, false], null]]]], "where": [[false, 3, [0, [0, 8, false], null], 150000.0, null], "and", [false, 2, [0, [0, 10, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "major", "cities", "are", "there", "in", "texas"], "question_arg": [["how"], ["many"], ["major"], ["city"], ["are"], ["there"], ["in"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["major", "JJ"], ["city", "NN"], ["are", "VBP"], ["there", "RB"], ["in", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(7) T(1) Filter(0) Filter(5) A(0) C(2) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "network_2", "query": "SELECT count(*) FROM Person WHERE gender  =  'female'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Person", "WHERE", "gender", "=", "'female", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "person", "where", "gender", "=", "value"], "question": "How many females are in the network?", "question_toks": ["how", "many", "female", "are", "in", "network", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 4, false], null], "\"female\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["How", "many", "females", "are", "in", "the", "network", "?"], "question_arg": [["how"], ["many"], ["female"], ["are"], ["in"], ["network"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["female", "NN"], ["are", "VBP"], ["in", "IN"], ["network", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(2) A(0) C(4) T(0)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MAX", "(", "population", ")", "FROM", "city", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "max", "(", "population", ")", "from", "city", ")"], "question": "what is the biggest city in the us", "question_toks": ["what", "is", "biggest", "city", "in", "u"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "biggest", "city", "in", "the", "us"], "question_arg": [["what"], ["is"], ["biggest"], ["city"], ["in"], ["u"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["biggest", "JJS"], ["city", "NN"], ["in", "IN"], ["u", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "singer", "query": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1", "query_toks": ["SELECT", "Name", "FROM", "singer", "ORDER", "BY", "Net_Worth_Millions", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "name", "from", "singer", "order", "by", "net_worth_millions", "desc", "limit", "value"], "question": "What is the name of the singer who is worth the most?", "question_toks": ["what", "is", "name", "of", "singer", "who", "is", "worth", "most", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 4, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "singer", "who", "is", "worth", "the", "most", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["singer"], ["who"], ["is"], ["worth"], ["most"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["singer", "NN"], ["who", "WP"], ["is", "VBZ"], ["worth", "IN"], ["most", "JJS"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(2) T(0) Sup(0) A(0) C(4) T(0)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", "WHERE", "traverse", "=", "``", "texas", "''", ")", "AND", "traverse", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", "where", "traverse", "=", "value", ")", "and", "traverse", "=", "value"], "question": "what is the biggest river in texas", "question_toks": ["what", "is", "biggest", "river", "in", "texas"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 29, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "biggest", "river", "in", "texas"], "question_arg": [["what"], ["is"], ["biggest"], ["river"], ["in"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["biggest", "JJS"], ["river", "NN"], ["in", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(0) Filter(11) A(0) C(17) T(6) Root(3) Sel(0) N(0) A(1) C(17) T(6) Filter(2) A(0) C(18) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "geo", "query": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;", "query_toks": ["SELECT", "river_name", "FROM", "river", "GROUP", "BY", "(", "river_name", ")", "ORDER", "BY", "COUNT", "(", "DISTINCT", "traverse", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "group", "by", "(", "river_name", ")", "order", "by", "count", "(", "distinct", "traverse", ")", "desc", "limit", "value"], "question": "which river traverses most states", "question_toks": ["which", "river", "traverse", "most", "state"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": ["desc", [[0, [3, 29, true], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "river", "traverses", "most", "states"], "question_arg": [["which"], ["river"], ["traverse"], ["most"], ["state"]], "question_arg_type": [["NONE"], ["table"], ["col"], ["MOST"], ["table"]], "nltk_pos": [["which", "WDT"], ["river", "NN"], ["traverse", "NN"], ["most", "RBS"], ["state", "NN"]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(16) T(6) Sup(0) A(3) C(18) T(6)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "``", "kentucky", "''", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "=", "value"], "question": "what states are next to kentucky", "question_toks": ["what", "state", "are", "next", "to", "kentucky"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"kentucky\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "are", "next", "to", "kentucky"], "question_arg": [["what"], ["state"], ["are"], ["next"], ["to"], ["kentucky"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["are", "VBP"], ["next", "JJ"], ["to", "TO"], ["kentucky", "VB"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(2) A(0) C(1) T(2)"}, {"db_id": "soccer_2", "query": "SELECT count(*) FROM College WHERE enr  >  15000", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "College", "WHERE", "enr", ">", "15000"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "college", "where", "enr", ">", "value"], "question": "What is the number of colleges with a student population greater than 15000?", "question_toks": ["what", "is", "number", "of", "college", "with", "a", "student", "population", "greater", "than", "15000", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], 15000.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "is", "the", "number", "of", "colleges", "with", "a", "student", "population", "greater", "than", "15000", "?"], "question_arg": [["what"], ["is"], ["number"], ["of"], ["college"], ["with"], ["a"], ["student"], ["population"], ["greater"], ["than"], ["15000"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["number", "NN"], ["of", "IN"], ["college", "NN"], ["with", "IN"], ["a", "DT"], ["student", "NN"], ["population", "NN"], ["greater", "JJR"], ["than", "IN"], ["15000", "CD"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(5) A(0) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;", "query_toks": ["SELECT", "river_name", "FROM", "river", "GROUP", "BY", "(", "river_name", ")", "ORDER", "BY", "COUNT", "(", "DISTINCT", "traverse", ")", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "group", "by", "(", "river_name", ")", "order", "by", "count", "(", "distinct", "traverse", ")", "desc", "limit", "value"], "question": "which river goes through the most states", "question_toks": ["which", "river", "go", "through", "most", "state"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [], "groupBy": [[0, 26, false]], "having": [], "orderBy": ["desc", [[0, [3, 29, true], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["which", "river", "goes", "through", "the", "most", "states"], "question_arg": [["which"], ["river"], ["go"], ["through"], ["most"], ["state"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["which", "WDT"], ["river", "NN"], ["go", "VBP"], ["through", "IN"], ["most", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(16) T(6) Sup(0) A(3) C(18) T(6)"}, {"db_id": "soccer_2", "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')", "query_toks": ["SELECT", "DISTINCT", "cName", "FROM", "college", "WHERE", "enr", ">", "(", "SELECT", "min", "(", "enr", ")", "FROM", "college", "WHERE", "state", "=", "'FL", "'", ")"], "query_toks_no_value": ["select", "distinct", "cname", "from", "college", "where", "enr", ">", "(", "select", "min", "(", "enr", ")", "from", "college", "where", "state", "=", "value", ")"], "question": "What are the names of the colleges that are larger than at least one college in Florida?", "question_toks": ["what", "are", "name", "of", "college", "that", "are", "larger", "than", "at", "least", "one", "college", "in", "florida", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [true, [[0, [0, [0, 1, false], null]]]], "where": [[false, 3, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"FL\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "names", "of", "the", "colleges", "that", "are", "larger", "than", "at", "least", "one", "college", "in", "Florida", "?"], "question_arg": [["what"], ["are"], ["name"], ["of"], ["college"], ["that"], ["are"], ["larger"], ["than"], ["at"], ["least"], ["one"], ["college"], ["in"], ["florida"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MORE"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["table"], ["NONE"], ["state"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["name", "NN"], ["of", "IN"], ["college", "NN"], ["that", "WDT"], ["are", "VBP"], ["larger", "JJR"], ["than", "IN"], ["at", "IN"], ["least", "JJS"], ["one", "CD"], ["college", "NN"], ["in", "IN"], ["florida", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(13) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(2) C(3) T(0) Filter(2) A(0) C(2) T(0)"}, {"db_id": "soccer_2", "query": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "'goalie", "'", "INTERSECT", "SELECT", "cName", "FROM", "tryout", "WHERE", "pPos", "=", "'mid", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "cname", "from", "tryout", "where", "ppos", "=", "value", "intersect", "select", "cname", "from", "tryout", "where", "ppos", "=", "value", ")"], "question": "How many schools have students playing in goalie and mid-field positions?", "question_toks": ["how", "many", "school", "have", "student", "playing", "in", "goalie", "and", "mid-field", "position", "?"], "sql": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "union": null, "except": null}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["How", "many", "schools", "have", "students", "playing", "in", "goalie", "and", "mid-field", "positions", "?"], "question_arg": [["how"], ["many"], ["school"], ["have"], ["student"], ["playing"], ["in"], ["goalie"], ["and"], ["mid-field"], ["player", "position"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["school", "NN"], ["have", "VBP"], ["student", "NN"], ["playing", "NN"], ["in", "IN"], ["goalie", "NN"], ["and", "CC"], ["mid-field", "JJ"], ["position", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T({'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"goalie\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': {'from': {'table_units': [['table_unit', 2]], 'conds': []}, 'select': [False, [[0, [0, [0, 9, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"mid\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}, 'union': None, 'except': None})"}, {"db_id": "geo", "query": "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  >  750;", "query_toks": ["SELECT", "COUNT", "(", "DISTINCT", "traverse", ")", "FROM", "river", "WHERE", "LENGTH", ">", "750", ";"], "query_toks_no_value": ["select", "count", "(", "distinct", "traverse", ")", "from", "river", "where", "length", ">", "value"], "question": "how many states are next to major rivers", "question_toks": ["how", "many", "state", "are", "next", "to", "major", "river"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[3, [0, [0, 29, true], null]]]], "where": [[false, 3, [0, [0, 27, false], null], 750.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["how", "many", "states", "are", "next", "to", "major", "rivers"], "question_arg": [["how"], ["many"], ["state"], ["are"], ["next"], ["to"], ["major"], ["river"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["state", "NN"], ["are", "VBP"], ["next", "JJ"], ["to", "TO"], ["major", "JJ"], ["river", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(18) T(6) Filter(5) A(0) C(17) T(6)"}, {"db_id": "geo", "query": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );", "query_toks": ["SELECT", "border", "FROM", "border_info", "WHERE", "state_name", "=", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "border", "from", "border_info", "where", "state_name", "=", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")", ")"], "question": "what states border the state with the smallest area", "question_toks": ["what", "state", "border", "state", "with", "smallest", "area"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "states", "border", "the", "state", "with", "the", "smallest", "area"], "question_arg": [["what"], ["state"], ["border"], ["state"], ["with"], ["smallest"], ["area"]], "question_arg_type": [["NONE"], ["table"], ["col"], ["table"], ["NONE"], ["NONE"], ["col"]], "nltk_pos": [["what", "WP"], ["state", "NN"], ["border", "NN"], ["state", "NN"], ["with", "IN"], ["smallest", "JJ"], ["area", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(8) T(2) Filter(11) A(0) C(1) T(2) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "flight_1", "query": "SELECT count(*) FROM Aircraft", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "Aircraft"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "aircraft"], "question": "How many aircrafts do we have?", "question_toks": ["how", "many", "aircraft", "do", "we", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["How", "many", "aircrafts", "do", "we", "have", "?"], "question_arg": [["how"], ["many"], ["aircraft"], ["do"], ["we"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["aircraft", "NNS"], ["do", "VBP"], ["we", "PRP"], ["have", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(1)"}, {"db_id": "geo", "query": "SELECT density FROM state;", "query_toks": ["SELECT", "density", "FROM", "state", ";"], "query_toks_no_value": ["select", "density", "from", "state"], "question": "what are the population densities of each us state", "question_toks": ["what", "are", "population", "density", "of", "each", "u", "state"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 6, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "the", "population", "densities", "of", "each", "us", "state"], "question_arg": [["what"], ["are"], ["population"], ["density"], ["of"], ["each"], ["u"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["population", "JJ"], ["density", "NN"], ["of", "IN"], ["each", "DT"], ["u", "JJ"], ["state", "NN"]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(0) C(6) T(0)"}, {"db_id": "flight_1", "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "destination", "FROM", "Flight", "GROUP", "BY", "destination", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "destination", "from", "flight", "group", "by", "destination", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What destination has the fewest number of flights?", "question_toks": ["what", "destination", "ha", "fewest", "number", "of", "flight", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]]]], "where": [], "groupBy": [[0, 3, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "destination", "has", "the", "fewest", "number", "of", "flights", "?"], "question_arg": [["what"], ["destination"], ["ha"], ["fewest"], ["flight", "number"], ["of"], ["flight"], ["?"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["MOST"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["destination", "NN"], ["ha", "NN"], ["fewest", "JJS"], ["number", "NN"], ["of", "IN"], ["flight", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(3) T(0) Sup(1) A(3) C(0) T(0)"}, {"db_id": "network_2", "query": "SELECT count(DISTINCT job) FROM Person", "query_toks": ["SELECT", "count", "(", "DISTINCT", "job", ")", "FROM", "Person"], "query_toks_no_value": ["select", "count", "(", "distinct", "job", ")", "from", "person"], "question": "How many different jobs are listed?", "question_toks": ["how", "many", "different", "job", "are", "listed", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 5, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["How", "many", "different", "jobs", "are", "listed", "?"], "question_arg": [["how"], ["many"], ["different"], ["job"], ["are"], ["listed"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["different", "JJ"], ["job", "NN"], ["are", "VBP"], ["listed", "VBN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(5) T(0)"}, {"db_id": "flight_4", "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "routes", "AS", "T1", "JOIN", "airports", "AS", "T2", "ON", "T1.dst_apid", "=", "T2.apid", "WHERE", "T2.country", "=", "'Italy", "'"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "routes", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "dst_apid", "=", "t2", ".", "apid", "where", "t2", ".", "country", "=", "value"], "question": "What is the number of routes whose destinations are Italian airports?", "question_toks": ["what", "is", "number", "of", "route", "whose", "destination", "are", "italian", "airport", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 2, false], null], [0, 9, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"Italy\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "number", "of", "routes", "whose", "destinations", "are", "Italian", "airports", "?"], "question_arg": [["what"], ["is"], ["number"], ["of"], ["route"], ["whose"], ["destination", "airport"], ["are"], ["italian"], ["airport"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["number", "NN"], ["of", "IN"], ["route", "NN"], ["whose", "WP$"], ["destination", "NN"], ["are", "VBP"], ["italian", "JJ"], ["airport", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(2) A(0) C(12) T(1)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE city_name  =  \"seattle\" AND state_name  =  \"washington\";", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "city_name", "=", "``", "seattle", "''", "AND", "state_name", "=", "``", "washington", "''", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "city_name", "=", "value", "and", "state_name", "=", "value"], "question": "what is the population of seattle washington", "question_toks": ["what", "is", "population", "of", "seattle", "washington"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], "\"seattle\"", null], "and", [false, 2, [0, [0, 10, false], null], "\"washington\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "population", "of", "seattle", "washington"], "question_arg": [["what"], ["is"], ["population"], ["of"], ["seattle"], ["washington"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["population", "NN"], ["of", "IN"], ["seattle", "JJ"], ["washington", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(0) Filter(2) A(0) C(7) T(1) Filter(2) A(0) C(1) T(1)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRPORTS", "AS", "T2", "ON", "T1.DestAirport", "=", "T2.AirportCode", "JOIN", "AIRPORTS", "AS", "T3", "ON", "T1.SourceAirport", "=", "T3.AirportCode", "WHERE", "T2.City", "=", "``", "Ashley", "''", "AND", "T3.City", "=", "``", "Aberdeen", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airports", "as", "t2", "on", "t1", ".", "destairport", "=", "t2", ".", "airportcode", "join", "airports", "as", "t3", "on", "t1", ".", "sourceairport", "=", "t3", ".", "airportcode", "where", "t2", ".", "city", "=", "value", "and", "t3", ".", "city", "=", "value"], "question": "How many flights fly from Aberdeen to Ashley?", "question_toks": ["how", "many", "flight", "fly", "from", "aberdeen", "to", "ashley", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 1], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 6, false], null], "and", [false, 2, [0, [0, 12, false], null], [0, 6, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"Ashley\"", null], "and", [false, 2, [0, [0, 5, false], null], "\"Aberdeen\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["How", "many", "flights", "fly", "from", "Aberdeen", "to", "Ashley", "?"], "question_arg": [["how"], ["many"], ["flight"], ["fly"], ["from"], ["aberdeen"], ["to"], ["ashley"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["city"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["flight", "NN"], ["fly", "NN"], ["from", "IN"], ["aberdeen", "JJ"], ["to", "TO"], ["ashley", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(0) Filter(2) A(0) C(5) T(1) Filter(2) A(0) C(5) T(1)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "mountain", "view", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "what are some good places for arabic in mountain view ?", "question_toks": ["what", "are", "some", "good", "place", "for", "arabic", "in", "mountain", "view", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"mountain view\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["what", "are", "some", "good", "places", "for", "arabic", "in", "mountain", "view", "?"], "question_arg": [["what"], ["are"], ["some"], ["good"], ["place"], ["for"], ["arabic"], ["in"], ["mountain"], ["view"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["some", "DT"], ["good", "JJ"], ["place", "NN"], ["for", "IN"], ["arabic", "NN"], ["in", "IN"], ["mountain", "NN"], ["view", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", "WHERE", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "mississippi", "''", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "traverse", "FROM", "river", "WHERE", "river_name", "=", "``", "mississippi", "''", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", "where", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "river_name", "=", "value", ")", ")", "and", "state_name", "in", "(", "select", "traverse", "from", "river", "where", "river_name", "=", "value", ")"], "question": "what is the smallest state that the mississippi river runs through", "question_toks": ["what", "is", "smallest", "state", "that", "mississippi", "river", "run", "through"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [[false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"mississippi\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 1, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 29, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"mississippi\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "smallest", "state", "that", "the", "mississippi", "river", "runs", "through"], "question_arg": [["what"], ["is"], ["smallest"], ["state"], ["that"], ["mississippi"], ["river"], ["run"], ["through"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["smallest", "JJ"], ["state", "NN"], ["that", "WDT"], ["mississippi", "VBD"], ["river", "NN"], ["run", "NN"], ["through", "IN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(0) Filter(11) A(0) C(3) T(0) Root(3) Sel(0) N(0) A(2) C(3) T(0) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6) Filter(18) A(0) C(1) T(0) Root(3) Sel(0) N(0) A(0) C(18) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "=", "``", "illinois", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "=", "value"], "question": "what are all the rivers in illinois", "question_toks": ["what", "are", "all", "river", "in", "illinois"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"illinois\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "are", "all", "the", "rivers", "in", "illinois"], "question_arg": [["what"], ["are"], ["all"], ["river"], ["in"], ["illinois"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["all", "DT"], ["river", "NN"], ["in", "IN"], ["illinois", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "flight_2", "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1", "query_toks": ["SELECT", "T1.Abbreviation", ",", "T1.Country", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T1.uid", "=", "T2.Airline", "GROUP", "BY", "T1.Airline", "ORDER", "BY", "count", "(", "*", ")", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "abbreviation", ",", "t1", ".", "country", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t1", ".", "uid", "=", "t2", ".", "airline", "group", "by", "t1", ".", "airline", "order", "by", "count", "(", "*", ")", "limit", "value"], "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?", "question_toks": ["what", "is", "abbreviation", "of", "airilne", "ha", "fewest", "flight", "and", "what", "country", "is", "it", "in", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 10, false], null]]}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 2, false]], "having": [], "orderBy": ["asc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["What", "is", "the", "abbreviation", "of", "the", "airilne", "has", "the", "fewest", "flights", "and", "what", "country", "is", "it", "in", "?"], "question_arg": [["what"], ["is"], ["abbreviation"], ["of"], ["airilne"], ["ha"], ["fewest"], ["flight"], ["and"], ["what"], ["country"], ["is"], ["it"], ["in"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["abbreviation", "NN"], ["of", "IN"], ["airilne", "JJ"], ["ha", "NN"], ["fewest", "JJS"], ["flight", "NN"], ["and", "CC"], ["what", "WP"], ["country", "NN"], ["is", "VBZ"], ["it", "PRP"], ["in", "IN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(3) T(0) A(0) C(4) T(0) Sup(1) A(3) C(0) T(2)"}, {"db_id": "flight_4", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1", "query_toks": ["SELECT", "name", ",", "city", ",", "country", "FROM", "airports", "ORDER", "BY", "elevation", "LIMIT", "1"], "query_toks_no_value": ["select", "name", ",", "city", ",", "country", "from", "airports", "order", "by", "elevation", "limit", "value"], "question": "Find the name, city, and country of the airport that has the lowest altitude.", "question_toks": ["find", "name", ",", "city", ",", "and", "country", "of", "airport", "that", "ha", "lowest", "altitude", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 11, false], null]], [0, [0, [0, 12, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["asc", [[0, [0, 15, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "name", ",", "city", ",", "and", "country", "of", "the", "airport", "that", "has", "the", "lowest", "altitude", "."], "question_arg": [["find"], ["name"], [","], ["city"], [","], ["and"], ["country"], ["of"], ["airport"], ["that"], ["ha"], ["lowest"], ["altitude"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "NN"], ["name", "NN"], [",", ","], ["city", "NN"], [",", ","], ["and", "CC"], ["country", "NN"], ["of", "IN"], ["airport", "NN"], ["that", "IN"], ["ha", "NN"], ["lowest", "JJS"], ["altitude", "NN"], [".", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(2) A(0) C(10) T(1) A(0) C(11) T(1) A(0) C(12) T(1) Sup(1) A(0) C(15) T(1)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", "WHERE", "traverse", "=", "``", "texas", "''", ")", "AND", "traverse", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", "where", "traverse", "=", "value", ")", "and", "traverse", "=", "value"], "question": "what is the largest river in texas state", "question_toks": ["what", "is", "largest", "river", "in", "texas", "state"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 29, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "largest", "river", "in", "texas", "state"], "question_arg": [["what"], ["is"], ["largest"], ["river"], ["in"], ["texas"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["largest", "JJS"], ["river", "NN"], ["in", "IN"], ["texas", "NN"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(0) Filter(11) A(0) C(17) T(6) Root(3) Sel(0) N(0) A(1) C(17) T(6) Filter(2) A(0) C(18) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MIN", "(", "LENGTH", ")", "FROM", "river", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "min", "(", "length", ")", "from", "river", ")"], "question": "what is the shortest river in the united states", "question_toks": ["what", "is", "shortest", "river", "in", "united", "state"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[2, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "shortest", "river", "in", "the", "united", "states"], "question_arg": [["what"], ["is"], ["shortest"], ["river"], ["in"], ["united"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["shortest", "JJ"], ["river", "NN"], ["in", "IN"], ["united", "JJ"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(2) C(17) T(6)"}, {"db_id": "concert_singer", "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014", "query_toks": ["SELECT", "T2.name", "FROM", "singer_in_concert", "AS", "T1", "JOIN", "singer", "AS", "T2", "ON", "T1.singer_id", "=", "T2.singer_id", "JOIN", "concert", "AS", "T3", "ON", "T1.concert_id", "=", "T3.concert_id", "WHERE", "T3.year", "=", "2014"], "query_toks_no_value": ["select", "t2", ".", "name", "from", "singer_in_concert", "as", "t1", "join", "singer", "as", "t2", "on", "t1", ".", "singer_id", "=", "t2", ".", "singer_id", "join", "concert", "as", "t3", "on", "t1", ".", "concert_id", "=", "t3", ".", "concert_id", "where", "t3", ".", "year", "=", "value"], "question": "List all singer names in concerts in year 2014.", "question_toks": ["list", "all", "singer", "name", "in", "concert", "in", "year", "year", "."], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 21, false], null], [0, 8, false], null], "and", [false, 2, [0, [0, 20, false], null], [0, 15, false], null]]}, "select": [false, [[0, [0, [0, 9, false], null]]]], "where": [[false, 2, [0, [0, 19, false], null], 2014.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "name", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "stadium id", "year", "concert id", "singer id"], "table_names": ["stadium", "singer", "concert", "singer in concert"], "col_set": ["*", "stadium id", "location", "name", "capacity", "highest", "lowest", "average", "singer id", "country", "song name", "song release year", "age", "is male", "concert id", "concert name", "theme", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3], "keys": {"18": 1, "1": 1, "21": 8, "8": 8, "20": 20, "15": 15}, "origin_question_toks": ["List", "all", "singer", "names", "in", "concerts", "in", "year", "2014", "."], "question_arg": [["list"], ["all"], ["singer"], ["name"], ["in"], ["concert"], ["in"], ["year"], ["year"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["col"], ["NONE"]], "nltk_pos": [["list", "NN"], ["all", "DT"], ["singer", "NN"], ["name", "NN"], ["in", "IN"], ["concert", "NN"], ["in", "IN"], ["year", "NN"], ["2014", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(3) T(1) Filter(2) A(0) C(17) T(2)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good arabic on buchanan in san francisco ?", "question_toks": ["give", "me", "a", "good", "arabic", "on", "buchanan", "in", "san", "francisco", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"buchanan\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "a", "good", "arabic", "on", "buchanan", "in", "san", "francisco", "?"], "question_arg": [["give"], ["me"], ["a"], ["good"], ["arabic"], ["on"], ["buchanan"], ["in"], ["san"], ["francisco"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["a", "DT"], ["good", "JJ"], ["arabic", "NN"], ["on", "IN"], ["buchanan", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(10) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "flight_4", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "T1.name", "FROM", "airports", "AS", "T1", "JOIN", "routes", "AS", "T2", "ON", "T1.apid", "=", "T2.dst_apid", "WHERE", "T1.country", "=", "'China", "'", "GROUP", "BY", "T1.name", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "t1", ".", "name", "from", "airports", "as", "t1", "join", "routes", "as", "t2", "on", "t1", ".", "apid", "=", "t2", ".", "dst_apid", "where", "t1", ".", "country", "=", "value", "group", "by", "t1", ".", "name", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "Find the busiest destination airport that runs most number of routes in China.", "question_toks": ["find", "busiest", "destination", "airport", "that", "run", "most", "number", "of", "route", "in", "china", "."], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 9, false], null], [0, 2, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"China\"", null]], "groupBy": [[0, 10, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["Find", "the", "busiest", "destination", "airport", "that", "runs", "most", "number", "of", "routes", "in", "China", "."], "question_arg": [["find"], ["busiest"], ["destination", "airport"], ["that"], ["run"], ["most"], ["number"], ["of"], ["route"], ["in"], ["china"], ["."]], "question_arg_type": [["NONE"], ["MOST"], ["col"], ["NONE"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["name"], ["NONE"]], "nltk_pos": [["find", "VB"], ["busiest", "JJS"], ["destination", "NN"], ["airport", "NN"], ["that", "WDT"], ["run", "VBZ"], ["most", "RBS"], ["number", "NN"], ["of", "IN"], ["route", "NN"], ["in", "IN"], ["china", "NN"], [".", "."]], "rule_label": "Root1(3) Root(0) Sel(0) N(0) A(0) C(10) T(1) Sup(0) A(3) C(0) T(0) Filter(2) A(0) C(12) T(1)"}, {"db_id": "geo", "query": "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";", "query_toks": ["SELECT", "LENGTH", "FROM", "river", "WHERE", "river_name", "=", "``", "rio", "grande", "''", ";"], "query_toks_no_value": ["select", "length", "from", "river", "where", "river_name", "=", "value"], "question": "what length is the rio grande", "question_toks": ["what", "length", "is", "rio", "grande"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 26, false], null], "\"rio grande\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "length", "is", "the", "rio", "grande"], "question_arg": [["what"], ["length"], ["is"], ["rio"], ["grande"]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["length", "NN"], ["is", "VBZ"], ["rio", "JJ"], ["grande", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(17) T(6) Filter(2) A(0) C(16) T(6)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MIN", "(", "LENGTH", ")", "FROM", "river", ")", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "min", "(", "length", ")", "from", "river", ")"], "question": "what is the shortest river in the usa", "question_toks": ["what", "is", "shortest", "river", "in", "usa"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[2, [0, [0, 27, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "shortest", "river", "in", "the", "usa"], "question_arg": [["what"], ["is"], ["shortest"], ["river"], ["in"], ["usa"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["shortest", "JJ"], ["river", "NN"], ["in", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(11) A(0) C(17) T(6) Root(5) Sel(0) N(0) A(2) C(17) T(6)"}, {"db_id": "singer", "query": "SELECT Birth_Year ,  Citizenship FROM singer", "query_toks": ["SELECT", "Birth_Year", ",", "Citizenship", "FROM", "singer"], "query_toks_no_value": ["select", "birth_year", ",", "citizenship", "from", "singer"], "question": "What are the birth years and citizenships of the singers?", "question_toks": ["what", "are", "birth", "year", "and", "citizenship", "of", "singer", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 3, false], null]], [0, [0, [0, 5, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "singer id", "sales", "highest position"], "table_names": ["singer", "song"], "col_set": ["*", "singer id", "name", "birth year", "net worth millions", "citizenship", "song id", "title", "sales", "highest position"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], "keys": {"8": 1, "1": 1, "6": 6}, "origin_question_toks": ["What", "are", "the", "birth", "years", "and", "citizenships", "of", "the", "singers", "?"], "question_arg": [["what"], ["are"], ["birth", "year"], ["and"], ["citizenship"], ["of"], ["singer"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["birth", "JJ"], ["year", "NN"], ["and", "CC"], ["citizenship", "NN"], ["of", "IN"], ["singer", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(0) C(3) T(0) A(0) C(5) T(0)"}, {"db_id": "icfp_1", "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Pennsylvania\"", "query_toks": ["SELECT", "count", "(", "DISTINCT", "t1.title", ")", "FROM", "papers", "AS", "t1", "JOIN", "authorship", "AS", "t2", "ON", "t1.paperid", "=", "t2.paperid", "JOIN", "inst", "AS", "t3", "ON", "t2.instid", "=", "t3.instid", "WHERE", "t3.name", "=", "``", "University", "of", "Pennsylvania", "''"], "query_toks_no_value": ["select", "count", "(", "distinct", "t1", ".", "title", ")", "from", "papers", "as", "t1", "join", "authorship", "as", "t2", "on", "t1", ".", "paperid", "=", "t2", ".", "paperid", "join", "inst", "as", "t3", "on", "t2", ".", "instid", "=", "t3", ".", "instid", "where", "t3", ".", "name", "=", "value"], "question": "Find the number of papers published by the institution \"University of Pennsylvania\".", "question_toks": ["find", "number", "of", "paper", "published", "by", "institution", "'", "university", "of", "pennsylvania", "'", "."], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 3], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 11, false], null], "and", [false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 8, true], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"University of Pennsylvania\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["Find", "the", "number", "of", "papers", "published", "by", "the", "institution", "``", "University", "of", "Pennsylvania", "''", "."], "question_arg": [["find"], ["number"], ["of"], ["paper"], ["published"], ["by"], ["institution"], ["'"], ["university"], ["of"], ["pennsylvania"], ["'"], ["."]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["find", "VB"], ["number", "NN"], ["of", "IN"], ["paper", "NN"], ["published", "VBN"], ["by", "IN"], ["institution", "NN"], ["'", "POS"], ["university", "NN"], ["of", "IN"], ["pennsylvania", "NN"], ["'", "POS"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(8) T(2) Filter(2) A(0) C(2) T(0)"}, {"db_id": "flight_1", "query": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1", "query_toks": ["SELECT", "eid", ",", "name", "FROM", "Employee", "ORDER", "BY", "salary", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "eid", ",", "name", "from", "employee", "order", "by", "salary", "desc", "limit", "value"], "question": "What is the id and name of the employee with the highest salary?", "question_toks": ["what", "is", "id", "and", "name", "of", "employee", "with", "highest", "salary", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 12, false], null]], [0, [0, [0, 13, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 14, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["What", "is", "the", "id", "and", "name", "of", "the", "employee", "with", "the", "highest", "salary", "?"], "question_arg": [["what"], ["is"], ["id"], ["and"], ["name"], ["of"], ["employee"], ["with"], ["highest"], ["salary"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["MOST"], ["col"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["id", "JJ"], ["and", "CC"], ["name", "NN"], ["of", "IN"], ["employee", "NN"], ["with", "IN"], ["highest", "JJS"], ["salary", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(1) A(0) C(10) T(2) A(0) C(9) T(2) Sup(0) A(0) C(11) T(2)"}, {"db_id": "network_2", "query": "SELECT avg(age) ,  gender FROM Person GROUP BY gender", "query_toks": ["SELECT", "avg", "(", "age", ")", ",", "gender", "FROM", "Person", "GROUP", "BY", "gender"], "query_toks_no_value": ["select", "avg", "(", "age", ")", ",", "gender", "from", "person", "group", "by", "gender"], "question": "How old is each gender, on average?", "question_toks": ["how", "old", "is", "each", "gender", ",", "on", "average", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[5, [0, [0, 2, false], null]], [0, [0, [0, 4, false], null]]]], "where": [], "groupBy": [[0, 4, false]], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "name", "age", "city", "gender", "job", "name", "friend", "year"], "table_names": ["person", "person friend"], "col_set": ["*", "name", "age", "city", "gender", "job", "friend", "year"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1], "keys": {"7": 1, "1": 1, "6": 1}, "origin_question_toks": ["How", "old", "is", "each", "gender", ",", "on", "average", "?"], "question_arg": [["how"], ["old"], ["is"], ["each"], ["gender"], [","], ["on"], ["average"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["agg"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["old", "JJ"], ["is", "VBZ"], ["each", "DT"], ["gender", "NN"], [",", ","], ["on", "IN"], ["average", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(1) A(5) C(2) T(0) A(0) C(4) T(0)"}, {"db_id": "geo", "query": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );", "query_toks": ["SELECT", "population", "FROM", "city", "WHERE", "city_name", "=", "(", "SELECT", "capital", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "population", "from", "city", "where", "city_name", "=", "(", "select", "capital", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")", ")"], "question": "what is the population of the capital of the smallest state", "question_toks": ["what", "is", "population", "of", "capital", "of", "smallest", "state"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]]]], "where": [[false, 2, [0, [0, 7, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "population", "of", "the", "capital", "of", "the", "smallest", "state"], "question_arg": [["what"], ["is"], ["population"], ["of"], ["capital"], ["of"], ["smallest"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["population", "NN"], ["of", "IN"], ["capital", "NN"], ["of", "IN"], ["smallest", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(1) Filter(11) A(0) C(7) T(1) Root(3) Sel(0) N(0) A(0) C(5) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "flight_1", "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300", "query_toks": ["SELECT", "origin", ",", "destination", "FROM", "Flight", "WHERE", "price", ">", "300"], "query_toks_no_value": ["select", "origin", ",", "destination", "from", "flight", "where", "price", ">", "value"], "question": "Show origin and destination for flights with price higher than 300.", "question_toks": ["show", "origin", "and", "destination", "for", "flight", "with", "price", "higher", "than", "300", "."], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 2, false], null]], [0, [0, [0, 3, false], null]]]], "where": [[false, 3, [0, [0, 7, false], null], 300.0, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "airline id", "name", "distance", "employee id", "name", "salary", "employee id", "airline id"], "table_names": ["flight", "aircraft", "employee", "certificate"], "col_set": ["*", "flight number", "origin", "destination", "distance", "departure date", "arrival date", "price", "airline id", "name", "employee id", "salary"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3], "keys": {"8": 9, "9": 9, "16": 9, "15": 15, "12": 12, "1": 1}, "origin_question_toks": ["Show", "origin", "and", "destination", "for", "flights", "with", "price", "higher", "than", "300", "."], "question_arg": [["show"], ["origin"], ["and"], ["destination"], ["for"], ["flight"], ["with"], ["price"], ["higher"], ["than"], ["300"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["MORE"], ["NONE"], ["value"], ["NONE"]], "nltk_pos": [["show", "NN"], ["origin", "NN"], ["and", "CC"], ["destination", "NN"], ["for", "IN"], ["flight", "NN"], ["with", "IN"], ["price", "NN"], ["higher", "JJR"], ["than", "IN"], ["300", "CD"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(2) T(0) A(0) C(3) T(0) Filter(5) A(0) C(7) T(0)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES", "AS", "T1", "JOIN", "FLIGHTS", "AS", "T2", "ON", "T2.Airline", "=", "T1.uid", "WHERE", "T1.Airline", "=", "``", "United", "Airlines", "''", "AND", "T2.SourceAirport", "=", "``", "AHD", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines", "as", "t1", "join", "flights", "as", "t2", "on", "t2", ".", "airline", "=", "t1", ".", "uid", "where", "t1", ".", "airline", "=", "value", "and", "t2", ".", "sourceairport", "=", "value"], "question": "How many 'United Airlines' flights depart from Airport 'AHD'?", "question_toks": ["how", "many", "'", "united", "airline", "'", "flight", "depart", "from", "airport", "'", "ahd", "'", "?"], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"United Airlines\"", null], "and", [false, 2, [0, [0, 12, false], null], "\"AHD\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["How", "many", "'United", "Airlines", "'", "flights", "depart", "from", "Airport", "'AHD", "'", "?"], "question_arg": [["how"], ["many"], ["'"], ["united"], ["airline"], ["'"], ["flight"], ["depart"], ["from"], ["airport"], ["'"], ["ahd"], ["'"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["'", "POS"], ["united", "JJ"], ["airline", "NN"], ["'", "''"], ["flight", "NN"], ["depart", "NN"], ["from", "IN"], ["airport", "NN"], ["'", "''"], ["ahd", "NN"], ["'", "POS"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(0) Filter(0) Filter(2) A(0) C(2) T(0) Filter(2) A(0) C(11) T(2)"}, {"db_id": "restaurants", "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t3.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "geographic", "AS", "t2", "ON", "t1.city_name", "=", "t2.city_name", "JOIN", "LOCATION", "AS", "t3", "ON", "t1.id", "=", "t3.restaurant_id", "WHERE", "t2.region", "=", "``", "yosemite", "and", "mono", "lake", "area", "''", "AND", "t1.food_type", "=", "``", "french", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t3", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "geographic", "as", "t2", "on", "t1", ".", "city_name", "=", "t2", ".", "city_name", "join", "location", "as", "t3", "on", "t1", ".", "id", "=", "t3", ".", "restaurant_id", "where", "t2", ".", "region", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "give me a good french restaurant in the yosemite and mono lake area ?", "question_toks": ["give", "me", "a", "good", "french", "restaurant", "in", "yosemite", "and", "mono", "lake", "area", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 7, false], null], [0, 1, false], null], "and", [false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], "\"yosemite and mono lake area\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"french\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["give", "me", "a", "good", "french", "restaurant", "in", "the", "yosemite", "and", "mono", "lake", "area", "?"], "question_arg": [["give"], ["me"], ["a"], ["good"], ["french"], ["restaurant"], ["in"], ["yosemite"], ["and"], ["mono"], ["lake"], ["area"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["give", "VB"], ["me", "PRP"], ["a", "DT"], ["good", "JJ"], ["french", "JJ"], ["restaurant", "NN"], ["in", "IN"], ["yosemite", "NN"], ["and", "CC"], ["mono", "JJ"], ["lake", "NN"], ["area", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(3) T(0) Filter(0) Filter(2) A(0) C(6) T(1) Filter(5) A(0) C(7) T(1)"}, {"db_id": "geo", "query": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";", "query_toks": ["SELECT", "state_name", "FROM", "mountain", "WHERE", "mountain_name", "=", "``", "whitney", "''", ";"], "query_toks_no_value": ["select", "state_name", "from", "mountain", "where", "mountain_name", "=", "value"], "question": "where is mount whitney", "question_toks": ["where", "is", "mount", "whitney"], "sql": {"from": {"table_units": [["table_unit", 5]], "conds": []}, "select": [false, [[0, [0, [0, 25, false], null]]]], "where": [[false, 2, [0, [0, 22, false], null], "\"whitney\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["where", "is", "mount", "whitney"], "question_arg": [["where"], ["is"], ["mount"], ["whitney"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["is", "VBZ"], ["mount", "JJ"], ["whitney", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(5) Filter(2) A(0) C(14) T(5)"}, {"db_id": "theme_gallery", "query": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC", "query_toks": ["SELECT", "theme", ",", "YEAR", "FROM", "exhibition", "ORDER", "BY", "ticket_price", "DESC"], "query_toks_no_value": ["select", "theme", ",", "year", "from", "exhibition", "order", "by", "ticket_price", "desc"], "question": "Show theme and year for all exhibitions in an descending order of ticket price.", "question_toks": ["show", "theme", "and", "year", "for", "all", "exhibition", "in", "an", "descending", "order", "of", "ticket", "price", "."], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 8, false], null]], [0, [0, [0, 7, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 10, false], null]]], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "artist id", "ticket price", "exhibition id", "date", "attendance"], "table_names": ["artist", "exhibition", "exhibition record"], "col_set": ["*", "artist id", "name", "country", "year join", "age", "exhibition id", "year", "theme", "ticket price", "date", "attendance"], "col_table": [-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2], "keys": {"9": 1, "1": 1, "11": 11, "6": 6}, "origin_question_toks": ["Show", "theme", "and", "year", "for", "all", "exhibitions", "in", "an", "descending", "order", "of", "ticket", "price", "."], "question_arg": [["show"], ["theme"], ["and"], ["year"], ["for"], ["all"], ["exhibition"], ["in"], ["an"], ["descending"], ["order"], ["of"], ["ticket", "price"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["show", "NN"], ["theme", "NN"], ["and", "CC"], ["year", "NN"], ["for", "IN"], ["all", "DT"], ["exhibition", "NN"], ["in", "IN"], ["an", "DT"], ["descending", "VBG"], ["order", "NN"], ["of", "IN"], ["ticket", "NN"], ["price", "NN"], [".", "."]], "rule_label": "Root1(3) Root(4) Sel(0) N(1) A(0) C(8) T(1) A(0) C(7) T(1) Order(0) A(0) C(9) T(1)"}, {"db_id": "soccer_2", "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'", "query_toks": ["SELECT", "DISTINCT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.decision", "=", "'yes", "'"], "query_toks_no_value": ["select", "distinct", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "decision", "=", "value"], "question": "Find the states where have some college students in tryout and their decisions are yes.", "question_toks": ["find", "state", "where", "have", "some", "college", "student", "in", "tryout", "and", "their", "decision", "are", "yes", "."], "sql": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [true, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 11, false], null], "\"yes\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["Find", "the", "states", "where", "have", "some", "college", "students", "in", "tryout", "and", "their", "decisions", "are", "yes", "."], "question_arg": [["find"], ["state"], ["where"], ["have"], ["some"], ["college"], ["student"], ["in"], ["tryout"], ["and"], ["their"], ["decision"], ["are"], ["yes", "card"], ["."]], "question_arg_type": [["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"]], "nltk_pos": [["find", "VB"], ["state", "NN"], ["where", "WRB"], ["have", "VBP"], ["some", "DT"], ["college", "NN"], ["student", "NN"], ["in", "IN"], ["tryout", "NN"], ["and", "CC"], ["their", "PRP$"], ["decision", "NN"], ["are", "VBP"], ["yes", "UH"], [".", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(2) T(0) Filter(2) A(0) C(9) T(2)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", "WHERE", "traverse", "=", "``", "texas", "''", ")", "AND", "traverse", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", "where", "traverse", "=", "value", ")", "and", "traverse", "=", "value"], "question": "what is the longest river flowing through texas", "question_toks": ["what", "is", "longest", "river", "flowing", "through", "texas"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 29, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "longest", "river", "flowing", "through", "texas"], "question_arg": [["what"], ["is"], ["longest"], ["river"], ["flowing"], ["through"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["longest", "JJS"], ["river", "NN"], ["flowing", "VBG"], ["through", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(0) Filter(11) A(0) C(17) T(6) Root(3) Sel(0) N(0) A(1) C(17) T(6) Filter(2) A(0) C(18) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "geo", "query": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"des moines\" );", "query_toks": ["SELECT", "highest_point", "FROM", "highlow", "WHERE", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "capital", "=", "``", "des", "moines", "''", ")", ";"], "query_toks_no_value": ["select", "highest_point", "from", "highlow", "where", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "capital", "=", "value", ")"], "question": "what is the highest point in the state with capital des moines", "question_toks": ["what", "is", "highest", "point", "in", "state", "with", "capital", "de", "moines"], "sql": {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[0, [0, [0, 16, false], null]]]], "where": [[false, 8, [0, [0, 13, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 5, false], null], "\"des moines\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "highest", "point", "in", "the", "state", "with", "capital", "des", "moines"], "question_arg": [["what"], ["is"], ["highest", "point"], ["in"], ["state"], ["with"], ["capital"], ["de"], ["moines"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["highest", "JJS"], ["point", "NN"], ["in", "IN"], ["state", "NN"], ["with", "IN"], ["capital", "NN"], ["de", "IN"], ["moines", "NNS"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(11) T(3) Filter(18) A(0) C(1) T(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(2) A(0) C(5) T(0)"}, {"db_id": "soccer_2", "query": "SELECT count(DISTINCT pPos) FROM tryout", "query_toks": ["SELECT", "count", "(", "DISTINCT", "pPos", ")", "FROM", "tryout"], "query_toks_no_value": ["select", "count", "(", "distinct", "ppos", ")", "from", "tryout"], "question": "What are the unique types of player positions in the tryout?", "question_toks": ["what", "are", "unique", "type", "of", "player", "position", "in", "tryout", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[3, [0, [0, 10, true], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "are", "the", "unique", "types", "of", "player", "positions", "in", "the", "tryout", "?"], "question_arg": [["what"], ["are"], ["unique"], ["type"], ["of"], ["player", "position"], ["in"], ["tryout"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WDT"], ["are", "VBP"], ["unique", "JJ"], ["type", "NN"], ["of", "IN"], ["player", "NN"], ["position", "NN"], ["in", "IN"], ["tryout", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(8) T(2)"}, {"db_id": "icfp_1", "query": "SELECT count(*) FROM inst", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "inst"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "inst"], "question": "How many institutions are there?", "question_toks": ["how", "many", "institution", "are", "there", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author id", "institution id", "paper id", "author count"], "table_names": ["institution", "authors", "papers", "authorship count"], "col_set": ["*", "institution id", "name", "country", "author id", "last name", "first name", "paper id", "title", "author count"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 2, 2, 3, 3, 3, 3], "keys": {"11": 7, "7": 7, "10": 1, "1": 1, "9": 9, "4": 4}, "origin_question_toks": ["How", "many", "institutions", "are", "there", "?"], "question_arg": [["how"], ["many"], ["institution"], ["are"], ["there"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["institution", "NN"], ["are", "VBP"], ["there", "RB"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(0)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE traverse  =  \"illinois\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "traverse", "=", "``", "illinois", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "traverse", "=", "value"], "question": "what river runs through illinois", "question_toks": ["what", "river", "run", "through", "illinois"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"illinois\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "river", "runs", "through", "illinois"], "question_arg": [["what"], ["river"], ["run"], ["through"], ["illinois"]], "question_arg_type": [["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["river", "NN"], ["run", "VBP"], ["through", "IN"], ["illinois", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "geo", "query": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";", "query_toks": ["SELECT", "river_name", "FROM", "river", "WHERE", "LENGTH", "=", "(", "SELECT", "MAX", "(", "LENGTH", ")", "FROM", "river", "WHERE", "traverse", "=", "``", "texas", "''", ")", "AND", "traverse", "=", "``", "texas", "''", ";"], "query_toks_no_value": ["select", "river_name", "from", "river", "where", "length", "=", "(", "select", "max", "(", "length", ")", "from", "river", "where", "traverse", "=", "value", ")", "and", "traverse", "=", "value"], "question": "what is the longest river in texas", "question_toks": ["what", "is", "longest", "river", "in", "texas"], "sql": {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[0, [0, [0, 26, false], null]]]], "where": [[false, 2, [0, [0, 27, false], null], {"from": {"table_units": [["table_unit", 6]], "conds": []}, "select": [false, [[1, [0, [0, 27, false], null]]]], "where": [[false, 2, [0, [0, 29, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 2, [0, [0, 29, false], null], "\"texas\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "longest", "river", "in", "texas"], "question_arg": [["what"], ["is"], ["longest"], ["river"], ["in"], ["texas"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["longest", "JJS"], ["river", "NN"], ["in", "IN"], ["texas", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(16) T(6) Filter(0) Filter(11) A(0) C(17) T(6) Root(3) Sel(0) N(0) A(1) C(17) T(6) Filter(2) A(0) C(18) T(6) Filter(2) A(0) C(18) T(6)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM AIRLINES", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "AIRLINES"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "airlines"], "question": "What is the total number of airlines?", "question_toks": ["what", "is", "total", "number", "of", "airline", "?"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["What", "is", "the", "total", "number", "of", "airlines", "?"], "question_arg": [["what"], ["is"], ["total"], ["flight", "number"], ["of"], ["airline"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["total", "JJ"], ["number", "NN"], ["of", "IN"], ["airline", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T(0)"}, {"db_id": "flight_2", "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"", "query_toks": ["SELECT", "count", "(", "*", ")", "FROM", "FLIGHTS", "AS", "T1", "JOIN", "AIRLINES", "AS", "T2", "ON", "T1.Airline", "=", "T2.uid", "WHERE", "T2.Airline", "=", "``", "JetBlue", "Airways", "''"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "flights", "as", "t1", "join", "airlines", "as", "t2", "on", "t1", ".", "airline", "=", "t2", ".", "uid", "where", "t2", ".", "airline", "=", "value"], "question": "How many flights does airline 'JetBlue Airways' have?", "question_toks": ["how", "many", "flight", "doe", "airline", "'", "jetblue", "airway", "'", "have", "?"], "sql": {"from": {"table_units": [["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 10, false], null], [0, 1, false], null]]}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [[false, 2, [0, [0, 2, false], null], "\"JetBlue Airways\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "table_names": ["airlines", "airports", "flights"], "col_set": ["*", "airline id", "airline name", "abbreviation", "country", "city", "airport code", "airport name", "country abbrev", "airline", "flight number", "source airport", "destination airport"], "col_table": [-1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"13": 6, "6": 6, "12": 6, "1": 1, "10": 10}, "origin_question_toks": ["How", "many", "flights", "does", "airline", "'JetBlue", "Airways", "'", "have", "?"], "question_arg": [["how"], ["many"], ["flight"], ["doe"], ["airline"], ["'"], ["jetblue"], ["airway"], ["'"], ["have"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["table"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["how", "WRB"], ["many", "JJ"], ["flight", "NN"], ["doe", "NNS"], ["airline", "NN"], ["'", "''"], ["jetblue", "JJ"], ["airway", "NN"], ["'", "POS"], ["have", "VB"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(3) C(0) T(2) Filter(2) A(0) C(2) T(0)"}, {"db_id": "restaurants", "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;", "query_toks": ["SELECT", "t2.house_number", ",", "t1.name", "FROM", "restaurant", "AS", "t1", "JOIN", "LOCATION", "AS", "t2", "ON", "t1.id", "=", "t2.restaurant_id", "WHERE", "t2.city_name", "=", "``", "san", "francisco", "''", "AND", "t2.street_name", "=", "``", "buchanan", "''", "AND", "t1.food_type", "=", "``", "arabic", "''", "AND", "t1.rating", ">", "2.5", ";"], "query_toks_no_value": ["select", "t2", ".", "house_number", ",", "t1", ".", "name", "from", "restaurant", "as", "t1", "join", "location", "as", "t2", "on", "t1", ".", "id", "=", "t2", ".", "restaurant_id", "where", "t2", ".", "city_name", "=", "value", "and", "t2", ".", "street_name", "=", "value", "and", "t1", ".", "food_type", "=", "value", "and", "t1", ".", "rating", ">", "value"], "question": "where are some restaurants good for arabic food on buchanan in san francisco ?", "question_toks": ["where", "are", "some", "restaurant", "good", "for", "arabic", "food", "on", "buchanan", "in", "san", "francisco", "?"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 4, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 10, false], null]], [0, [0, [0, 5, false], null]]]], "where": [[false, 2, [0, [0, 12, false], null], "\"san francisco\"", null], "and", [false, 2, [0, [0, 11, false], null], "\"buchanan\"", null], "and", [false, 2, [0, [0, 6, false], null], "\"arabic\"", null], "and", [false, 3, [0, [0, 8, false], null], 2.5, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "city name", "county", "region", "id", "name", "food type", "city name", "rating", "restaurant id", "house number", "street name", "city name"], "table_names": ["geographic", "restaurant", "location"], "col_set": ["*", "city name", "county", "region", "id", "name", "food type", "rating", "restaurant id", "house number", "street name"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"7": 1, "1": 1, "12": 1, "4": 4, "9": 9}, "origin_question_toks": ["where", "are", "some", "restaurants", "good", "for", "arabic", "food", "on", "buchanan", "in", "san", "francisco", "?"], "question_arg": [["where"], ["are"], ["some"], ["restaurant"], ["good"], ["for"], ["arabic"], ["food", "type"], ["on"], ["buchanan"], ["in"], ["san"], ["francisco"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["where", "WRB"], ["are", "VBP"], ["some", "DT"], ["restaurant", "NN"], ["good", "JJ"], ["for", "IN"], ["arabic", "JJ"], ["food", "NN"], ["on", "IN"], ["buchanan", "NN"], ["in", "IN"], ["san", "JJ"], ["francisco", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(3) Sel(0) N(1) A(0) C(9) T(2) A(0) C(5) T(1) Filter(0) Filter(2) A(0) C(1) T(2) Filter(0) Filter(2) A(0) C(10) T(2) Filter(2) A(0) C(6) T(1)"}, {"db_id": "soccer_2", "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')", "query_toks": ["SELECT", "COUNT", "(", "*", ")", "FROM", "(", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'mid", "'", "EXCEPT", "SELECT", "T1.state", "FROM", "college", "AS", "T1", "JOIN", "tryout", "AS", "T2", "ON", "T1.cName", "=", "T2.cName", "WHERE", "T2.pPos", "=", "'goalie", "'", ")"], "query_toks_no_value": ["select", "count", "(", "*", ")", "from", "(", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", "except", "select", "t1", ".", "state", "from", "college", "as", "t1", "join", "tryout", "as", "t2", "on", "t1", ".", "cname", "=", "t2", ".", "cname", "where", "t2", ".", "ppos", "=", "value", ")"], "question": "What is the count of states with college students playing in the mid position but not as goalies?", "question_toks": ["what", "is", "count", "of", "state", "with", "college", "student", "playing", "in", "mid", "position", "but", "not", "a", "goalie", "?"], "sql": {"from": {"table_units": [["sql", {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"mid\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": {"from": {"table_units": [["table_unit", 0], ["table_unit", 2]], "conds": [[false, 2, [0, [0, 1, false], null], [0, 9, false], null]]}, "select": [false, [[0, [0, [0, 2, false], null]]]], "where": [[false, 2, [0, [0, 10, false], null], "\"goalie\"", null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}}]], "conds": []}, "select": [false, [[3, [0, [0, 0, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player id", "college name", "player position", "decision"], "table_names": ["college", "player", "tryout"], "col_set": ["*", "college name", "state", "enrollment", "player id", "player name", "yes card", "training hours", "player position", "decision"], "col_table": [-1, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], "keys": {"9": 1, "1": 1, "8": 8, "4": 4}, "origin_question_toks": ["What", "is", "the", "count", "of", "states", "with", "college", "students", "playing", "in", "the", "mid", "position", "but", "not", "as", "goalies", "?"], "question_arg": [["what"], ["is"], ["count"], ["of"], ["state"], ["with"], ["college"], ["student"], ["playing"], ["in"], ["mid"], ["player", "position"], ["but"], ["not"], ["a"], ["goalie"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["col"], ["NONE"], ["NONE"], ["NONE"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["count", "NN"], ["of", "IN"], ["state", "NN"], ["with", "IN"], ["college", "NN"], ["student", "NN"], ["playing", "VBG"], ["in", "IN"], ["mid", "JJ"], ["position", "NN"], ["but", "CC"], ["not", "RB"], ["a", "DT"], ["goalie", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(5) Sel(0) N(0) A(3) C(0) T({'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"mid\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': {'from': {'table_units': [['table_unit', 0], ['table_unit', 2]], 'conds': [[False, 2, [0, [0, 1, False], None], [0, 9, False], None]]}, 'select': [False, [[0, [0, [0, 2, False], None]]]], 'where': [[False, 2, [0, [0, 10, False], None], '\"goalie\"', None]], 'groupBy': [], 'having': [], 'orderBy': [], 'limit': None, 'intersect': None, 'union': None, 'except': None}})"}, {"db_id": "geo", "query": "SELECT t1.state_name FROM highlow AS t3 JOIN border_info AS t1 ON t3.state_name  =  t1.border JOIN state AS t2 ON t2.state_name  =  t1.border WHERE t3.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ORDER BY t2.area DESC LIMIT 1;", "query_toks": ["SELECT", "t1.state_name", "FROM", "highlow", "AS", "t3", "JOIN", "border_info", "AS", "t1", "ON", "t3.state_name", "=", "t1.border", "JOIN", "state", "AS", "t2", "ON", "t2.state_name", "=", "t1.border", "WHERE", "t3.lowest_elevation", "=", "(", "SELECT", "MIN", "(", "lowest_elevation", ")", "FROM", "highlow", ")", "ORDER", "BY", "t2.area", "DESC", "LIMIT", "1", ";"], "query_toks_no_value": ["select", "t1", ".", "state_name", "from", "highlow", "as", "t3", "join", "border_info", "as", "t1", "on", "t3", ".", "state_name", "=", "t1", ".", "border", "join", "state", "as", "t2", "on", "t2", ".", "state_name", "=", "t1", ".", "border", "where", "t3", ".", "lowest_elevation", "=", "(", "select", "min", "(", "lowest_elevation", ")", "from", "highlow", ")", "order", "by", "t2", ".", "area", "desc", "limit", "value"], "question": "what is the largest state that borders the state with the lowest point in the usa", "question_toks": ["what", "is", "largest", "state", "that", "border", "state", "with", "lowest", "point", "in", "usa"], "sql": {"from": {"table_units": [["table_unit", 3], ["table_unit", 2], ["table_unit", 0]], "conds": [[false, 2, [0, [0, 13, false], null], [0, 12, false], null], "and", [false, 2, [0, [0, 1, false], null], [0, 12, false], null]]}, "select": [false, [[0, [0, [0, 11, false], null]]]], "where": [[false, 2, [0, [0, 17, false], null], {"from": {"table_units": [["table_unit", 3]], "conds": []}, "select": [false, [[2, [0, [0, 17, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": ["desc", [[0, [0, 3, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "largest", "state", "that", "borders", "the", "state", "with", "the", "lowest", "point", "in", "the", "usa"], "question_arg": [["what"], ["is"], ["largest"], ["state"], ["that"], ["border"], ["state"], ["with"], ["lowest", "point"], ["in"], ["usa"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["col"], ["table"], ["NONE"], ["col"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["largest", "JJS"], ["state", "NN"], ["that", "WDT"], ["border", "NN"], ["state", "NN"], ["with", "IN"], ["lowest", "JJS"], ["point", "NN"], ["in", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(0) Sel(0) N(0) A(0) C(1) T(2) Sup(0) A(0) C(3) T(0) Filter(11) A(0) C(12) T(3) Root(5) Sel(0) N(0) A(2) C(12) T(3)"}, {"db_id": "flight_4", "query": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1", "query_toks": ["SELECT", "country", "FROM", "airlines", "GROUP", "BY", "country", "ORDER", "BY", "count", "(", "*", ")", "DESC", "LIMIT", "1"], "query_toks_no_value": ["select", "country", "from", "airlines", "group", "by", "country", "order", "by", "count", "(", "*", ")", "desc", "limit", "value"], "question": "What is the name of the country with the most number of home airlines?", "question_toks": ["what", "is", "name", "of", "country", "with", "most", "number", "of", "home", "airline", "?"], "sql": {"from": {"table_units": [["table_unit", 2]], "conds": []}, "select": [false, [[0, [0, [0, 23, false], null]]]], "where": [], "groupBy": [[0, 23, false]], "having": [], "orderBy": ["desc", [[0, [3, 0, false], null]]], "limit": 1, "intersect": null, "union": null, "except": null}, "names": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "airline id", "name", "iata", "icao", "call sign", "country", "active"], "table_names": ["routes", "airports", "airlines"], "col_set": ["*", "route id", "destination airport id", "destination airport", "source airport id", "source airport", "airline id", "airline", "code share", "airport id", "name", "city", "country", "x", "y", "elevation", "iata", "icao", "call sign", "active"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], "keys": {"6": 18, "18": 18, "4": 9, "9": 9, "2": 9, "1": 1}, "origin_question_toks": ["What", "is", "the", "name", "of", "the", "country", "with", "the", "most", "number", "of", "home", "airlines", "?"], "question_arg": [["what"], ["is"], ["name"], ["of"], ["country"], ["with"], ["most"], ["number"], ["of"], ["home"], ["airline"], ["?"]], "question_arg_type": [["NONE"], ["NONE"], ["col"], ["NONE"], ["col"], ["NONE"], ["MOST"], ["NONE"], ["NONE"], ["NONE"], ["table"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["name", "NN"], ["of", "IN"], ["country", "NN"], ["with", "IN"], ["most", "JJS"], ["number", "NN"], ["of", "IN"], ["home", "NN"], ["airline", "NN"], ["?", "."]], "rule_label": "Root1(3) Root(2) Sel(0) N(0) A(0) C(12) T(2) Sup(0) A(3) C(0) T(2)"}, {"db_id": "geo", "query": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );", "query_toks": ["SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MIN", "(", "area", ")", "FROM", "state", ")", ";"], "query_toks_no_value": ["select", "state_name", "from", "state", "where", "area", "=", "(", "select", "min", "(", "area", ")", "from", "state", ")"], "question": "what is the smallest state in the usa", "question_toks": ["what", "is", "smallest", "state", "in", "usa"], "sql": {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[2, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "smallest", "state", "in", "the", "usa"], "question_arg": [["what"], ["is"], ["smallest"], ["state"], ["in"], ["usa"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["NONE"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["smallest", "JJS"], ["state", "NN"], ["in", "IN"], ["usa", "JJ"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(2) C(3) T(0)"}, {"db_id": "geo", "query": "SELECT DISTINCT t1.city_name FROM city AS t1 JOIN river AS t2 ON t2.traverse  =  t1.state_name WHERE t1.population  =  ( SELECT MAX ( t1.population ) FROM river AS t2 JOIN city AS t1 ON t2.traverse  =  t1.state_name );", "query_toks": ["SELECT", "DISTINCT", "t1.city_name", "FROM", "city", "AS", "t1", "JOIN", "river", "AS", "t2", "ON", "t2.traverse", "=", "t1.state_name", "WHERE", "t1.population", "=", "(", "SELECT", "MAX", "(", "t1.population", ")", "FROM", "river", "AS", "t2", "JOIN", "city", "AS", "t1", "ON", "t2.traverse", "=", "t1.state_name", ")", ";"], "query_toks_no_value": ["select", "distinct", "t1", ".", "city_name", "from", "city", "as", "t1", "join", "river", "as", "t2", "on", "t2", ".", "traverse", "=", "t1", ".", "state_name", "where", "t1", ".", "population", "=", "(", "select", "max", "(", "t1", ".", "population", ")", "from", "river", "as", "t2", "join", "city", "as", "t1", "on", "t2", ".", "traverse", "=", "t1", ".", "state_name", ")"], "question": "what is the biggest american city in a state with a river", "question_toks": ["what", "is", "biggest", "american", "city", "in", "a", "state", "with", "a", "river"], "sql": {"from": {"table_units": [["table_unit", 1], ["table_unit", 6]], "conds": [[false, 2, [0, [0, 29, false], null], [0, 10, false], null]]}, "select": [true, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 6], ["table_unit", 1]], "conds": [[false, 2, [0, [0, 29, false], null], [0, 10, false], null]]}, "select": [false, [[1, [0, [0, 8, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "biggest", "american", "city", "in", "a", "state", "with", "a", "river"], "question_arg": [["what"], ["is"], ["biggest"], ["american"], ["city"], ["in"], ["a"], ["state"], ["with"], ["a"], ["river"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"], ["NONE"], ["NONE"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["biggest", "JJS"], ["american", "JJ"], ["city", "NN"], ["in", "IN"], ["a", "DT"], ["state", "NN"], ["with", "IN"], ["a", "DT"], ["river", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(11) A(0) C(2) T(1) Root(5) Sel(0) N(0) A(1) C(2) T(1)"}, {"db_id": "geo", "query": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );", "query_toks": ["SELECT", "city_name", "FROM", "city", "WHERE", "population", "=", "(", "SELECT", "MIN", "(", "population", ")", "FROM", "city", "WHERE", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ")", ")", "AND", "state_name", "IN", "(", "SELECT", "state_name", "FROM", "state", "WHERE", "area", "=", "(", "SELECT", "MAX", "(", "area", ")", "FROM", "state", ")", ")", ";"], "query_toks_no_value": ["select", "city_name", "from", "city", "where", "population", "=", "(", "select", "min", "(", "population", ")", "from", "city", "where", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")", ")", ")", "and", "state_name", "in", "(", "select", "state_name", "from", "state", "where", "area", "=", "(", "select", "max", "(", "area", ")", "from", "state", ")", ")"], "question": "what is the smallest city in the largest state", "question_toks": ["what", "is", "smallest", "city", "in", "largest", "state"], "sql": {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[0, [0, [0, 7, false], null]]]], "where": [[false, 2, [0, [0, 8, false], null], {"from": {"table_units": [["table_unit", 1]], "conds": []}, "select": [false, [[2, [0, [0, 8, false], null]]]], "where": [[false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null], "and", [false, 8, [0, [0, 10, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[0, [0, [0, 1, false], null]]]], "where": [[false, 2, [0, [0, 3, false], null], {"from": {"table_units": [["table_unit", 0]], "conds": []}, "select": [false, [[1, [0, [0, 3, false], null]]]], "where": [], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, null]], "groupBy": [], "having": [], "orderBy": [], "limit": null, "intersect": null, "union": null, "except": null}, "names": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "population", "country name", "state name", "state name", "border", "state name", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "area", "country name", "state name", "mountain name", "mountain altitude", "country name", "state name", "river name", "length", "country name", "traverse"], "table_names": ["state", "city", "border info", "highlow", "lake", "mountain", "river"], "col_set": ["*", "state name", "population", "area", "country name", "capital", "density", "city name", "border", "highest elevation", "lowest point", "highest point", "lowest elevation", "lake name", "mountain name", "mountain altitude", "river name", "length", "traverse"], "col_table": [-1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6], "keys": {"10": 1, "1": 1, "12": 12, "11": 1, "13": 13, "25": 1, "29": 1, "7": 7, "22": 22, "26": 26}, "origin_question_toks": ["what", "is", "the", "smallest", "city", "in", "the", "largest", "state"], "question_arg": [["what"], ["is"], ["smallest"], ["city"], ["in"], ["largest"], ["state"]], "question_arg_type": [["NONE"], ["NONE"], ["MOST"], ["table"], ["NONE"], ["MOST"], ["table"]], "nltk_pos": [["what", "WP"], ["is", "VBZ"], ["smallest", "JJS"], ["city", "NN"], ["in", "IN"], ["largest", "JJS"], ["state", "NN"]], "rule_label": "Root1(3) Root(3) Sel(0) N(0) A(0) C(7) T(1) Filter(0) Filter(11) A(0) C(2) T(1) Root(3) Sel(0) N(0) A(2) C(2) T(1) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0) Filter(18) A(0) C(1) T(1) Root(3) Sel(0) N(0) A(0) C(1) T(0) Filter(11) A(0) C(3) T(0) Root(5) Sel(0) N(0) A(1) C(3) T(0)"}]