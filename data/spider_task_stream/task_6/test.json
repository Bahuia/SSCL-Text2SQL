[
    {
        "db_id": "city_record",
        "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\"",
        "query_toks": [
            "SELECT",
            "match_id",
            "FROM",
            "MATCH",
            "WHERE",
            "competition",
            "=",
            "``",
            "1994",
            "FIFA",
            "World",
            "Cup",
            "qualification",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "match_id",
            "from",
            "match",
            "where",
            "competition",
            "=",
            "value"
        ],
        "question": "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?",
        "question_toks": [
            "Find",
            "the",
            "match",
            "ids",
            "of",
            "the",
            "cities",
            "that",
            "hosted",
            "competition",
            "``",
            "1994",
            "FIFA",
            "World",
            "Cup",
            "qualification",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"1994 FIFA World Cup qualification\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1",
        "query_toks": [
            "SELECT",
            "t1.gdp",
            ",",
            "t1.Regional_Population",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "hosting_city",
            "AS",
            "T2",
            "ON",
            "T1.city_id",
            "=",
            "T2.host_city",
            "GROUP",
            "BY",
            "t2.Host_City",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "gdp",
            ",",
            "t1",
            ".",
            "regional_population",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "hosting_city",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_id",
            "=",
            "t2",
            ".",
            "host_city",
            "group",
            "by",
            "t2",
            ".",
            "host_city",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Which cities have served as host cities more than once? Return me their GDP and population.",
        "question_toks": [
            "Which",
            "cities",
            "have",
            "served",
            "as",
            "host",
            "cities",
            "more",
            "than",
            "once",
            "?",
            "Return",
            "me",
            "their",
            "GDP",
            "and",
            "population",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"",
        "query_toks": [
            "SELECT",
            "t1.product_name",
            ",",
            "t1.typical_buying_price",
            ",",
            "t1.typical_selling_price",
            "FROM",
            "products",
            "AS",
            "t1",
            "JOIN",
            "ref_colors",
            "AS",
            "t2",
            "ON",
            "t1.color_code",
            "=",
            "t2.color_code",
            "WHERE",
            "t2.color_description",
            "=",
            "``",
            "yellow",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "product_name",
            ",",
            "t1",
            ".",
            "typical_buying_price",
            ",",
            "t1",
            ".",
            "typical_selling_price",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "ref_colors",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "color_code",
            "=",
            "t2",
            ".",
            "color_code",
            "where",
            "t2",
            ".",
            "color_description",
            "=",
            "value"
        ],
        "question": "Return the names and typical buying and selling prices for products that have 'yellow' as their color description.",
        "question_toks": [
            "Return",
            "the",
            "names",
            "and",
            "typical",
            "buying",
            "and",
            "selling",
            "prices",
            "for",
            "products",
            "that",
            "have",
            "'yellow",
            "'",
            "as",
            "their",
            "color",
            "description",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"yellow\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gymnast",
        "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5",
        "query_toks": [
            "SELECT",
            "Name",
            "FROM",
            "People",
            "ORDER",
            "BY",
            "Age",
            "DESC",
            "LIMIT",
            "5"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            "from",
            "people",
            "order",
            "by",
            "age",
            "desc",
            "limit",
            "value"
        ],
        "question": "List the names of the top 5 oldest people.",
        "question_toks": [
            "List",
            "the",
            "names",
            "of",
            "the",
            "top",
            "5",
            "oldest",
            "people",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 5,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC",
        "query_toks": [
            "SELECT",
            "team_name",
            "FROM",
            "basketball_match",
            "ORDER",
            "BY",
            "All_Home",
            "DESC"
        ],
        "query_toks_no_value": [
            "select",
            "team_name",
            "from",
            "basketball_match",
            "order",
            "by",
            "all_home",
            "desc"
        ],
        "question": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "all",
            "the",
            "teams",
            "in",
            "the",
            "basketball",
            "competition",
            ",",
            "sorted",
            "by",
            "all",
            "home",
            "scores",
            "in",
            "descending",
            "order",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\"",
        "query_toks": [
            "SELECT",
            "T1.problem_id",
            "FROM",
            "problems",
            "AS",
            "T1",
            "JOIN",
            "staff",
            "AS",
            "T2",
            "ON",
            "T1.reported_by_staff_id",
            "=",
            "T2.staff_id",
            "WHERE",
            "T2.staff_last_name",
            "=",
            "``",
            "Bosco",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "problem_id",
            "from",
            "problems",
            "as",
            "t1",
            "join",
            "staff",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "reported_by_staff_id",
            "=",
            "t2",
            ".",
            "staff_id",
            "where",
            "t2",
            ".",
            "staff_last_name",
            "=",
            "value"
        ],
        "question": "Which problems are reported by the staff with last name \"Bosco\"? Show the ids of the problems.",
        "question_toks": [
            "Which",
            "problems",
            "are",
            "reported",
            "by",
            "the",
            "staff",
            "with",
            "last",
            "name",
            "``",
            "Bosco",
            "''",
            "?",
            "Show",
            "the",
            "ids",
            "of",
            "the",
            "problems",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Bosco\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT count(*) FROM Ref_locations",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Ref_locations"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ref_locations"
        ],
        "question": "Show the number of locations.",
        "question_toks": [
            "Show",
            "the",
            "number",
            "of",
            "locations",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gymnast",
        "query": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20",
        "query_toks": [
            "SELECT",
            "Hometown",
            "FROM",
            "people",
            "WHERE",
            "Age",
            ">",
            "23",
            "INTERSECT",
            "SELECT",
            "Hometown",
            "FROM",
            "people",
            "WHERE",
            "Age",
            "<",
            "20"
        ],
        "query_toks_no_value": [
            "select",
            "hometown",
            "from",
            "people",
            "where",
            "age",
            ">",
            "value",
            "intersect",
            "select",
            "hometown",
            "from",
            "people",
            "where",
            "age",
            "<",
            "value"
        ],
        "question": "Show the hometowns shared by people older than 23 and younger than 20.",
        "question_toks": [
            "Show",
            "the",
            "hometowns",
            "shared",
            "by",
            "people",
            "older",
            "than",
            "23",
            "and",
            "younger",
            "than",
            "20",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    23.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    13,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        4,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ],
                        20.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT count(*) FROM Ref_document_types",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Ref_document_types"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ref_document_types"
        ],
        "question": "How many document types are there?",
        "question_toks": [
            "How",
            "many",
            "document",
            "types",
            "are",
            "there",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id",
        "query_toks": [
            "SELECT",
            "T1.customer_details",
            ",",
            "T1.customer_id",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Customer_Policies",
            "AS",
            "T2",
            "ON",
            "T1.Customer_id",
            "=",
            "T2.customer_id",
            "GROUP",
            "BY",
            "T1.customer_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "2",
            "EXCEPT",
            "SELECT",
            "T1.customer_details",
            ",",
            "T1.customer_id",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Customer_Policies",
            "AS",
            "T2",
            "ON",
            "T1.Customer_id",
            "=",
            "T2.customer_id",
            "JOIN",
            "Claims",
            "AS",
            "T3",
            "ON",
            "T2.policy_id",
            "=",
            "T3.policy_id"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "customer_details",
            ",",
            "t1",
            ".",
            "customer_id",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_policies",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "group",
            "by",
            "t1",
            ".",
            "customer_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "=",
            "value",
            "except",
            "select",
            "t1",
            ".",
            "customer_details",
            ",",
            "t1",
            ".",
            "customer_id",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_policies",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id",
            "join",
            "claims",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "policy_id",
            "=",
            "t3",
            ".",
            "policy_id"
        ],
        "question": "Give me the the customer details and id for the customers who had two or more policies but did not file any claims.",
        "question_toks": [
            "Give",
            "me",
            "the",
            "the",
            "customer",
            "details",
            "and",
            "id",
            "for",
            "the",
            "customers",
            "who",
            "had",
            "two",
            "or",
            "more",
            "policies",
            "but",
            "did",
            "not",
            "file",
            "any",
            "claims",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    5,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ],
                        [
                            "table_unit",
                            2
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ],
                        "and",
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    3,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ],
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "T1.claim_id",
            "FROM",
            "Claims",
            "AS",
            "T1",
            "JOIN",
            "Settlements",
            "AS",
            "T2",
            "ON",
            "T1.claim_id",
            "=",
            "T2.claim_id",
            "GROUP",
            "BY",
            "T1.claim_id",
            "ORDER",
            "BY",
            "T1.Date_Claim_Settled",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "t1",
            ".",
            "claim_id",
            "from",
            "claims",
            "as",
            "t1",
            "join",
            "settlements",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "claim_id",
            "=",
            "t2",
            ".",
            "claim_id",
            "group",
            "by",
            "t1",
            ".",
            "claim_id",
            "order",
            "by",
            "t1",
            ".",
            "date_claim_settled",
            "desc",
            "limit",
            "value"
        ],
        "question": "Find the claim id and the number of settlements made for the claim with the most recent settlement date.",
        "question_toks": [
            "Find",
            "the",
            "claim",
            "id",
            "and",
            "the",
            "number",
            "of",
            "settlements",
            "made",
            "for",
            "the",
            "claim",
            "with",
            "the",
            "most",
            "recent",
            "settlement",
            "date",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    8,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check'",
        "query_toks": [
            "SELECT",
            "payment_date",
            "FROM",
            "payments",
            "WHERE",
            "amount_paid",
            ">",
            "300",
            "OR",
            "payment_type_code",
            "=",
            "'Check",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "payment_date",
            "from",
            "payments",
            "where",
            "amount_paid",
            ">",
            "value",
            "or",
            "payment_type_code",
            "=",
            "value"
        ],
        "question": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check'",
        "question_toks": [
            "What",
            "are",
            "the",
            "payment",
            "date",
            "of",
            "the",
            "payment",
            "with",
            "amount",
            "paid",
            "higher",
            "than",
            "300",
            "or",
            "with",
            "payment",
            "type",
            "is",
            "'Check",
            "'"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                33,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    300.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    "\"Check\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"",
        "query_toks": [
            "SELECT",
            "document_name",
            ",",
            "template_id",
            "FROM",
            "Documents",
            "WHERE",
            "Document_Description",
            "LIKE",
            "``",
            "%",
            "w",
            "%",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "document_name",
            ",",
            "template_id",
            "from",
            "documents",
            "where",
            "document_description",
            "like",
            "value"
        ],
        "question": "Return the names and template ids for documents that contain the letter w in their description.",
        "question_toks": [
            "Return",
            "the",
            "names",
            "and",
            "template",
            "ids",
            "for",
            "documents",
            "that",
            "contain",
            "the",
            "letter",
            "w",
            "in",
            "their",
            "description",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"%w%\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code",
        "query_toks": [
            "SELECT",
            "role_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Employees",
            "GROUP",
            "BY",
            "role_code"
        ],
        "query_toks_no_value": [
            "select",
            "role_code",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "employees",
            "group",
            "by",
            "role_code"
        ],
        "question": "Show all role codes and the number of employees in each role.",
        "question_toks": [
            "Show",
            "all",
            "role",
            "codes",
            "and",
            "the",
            "number",
            "of",
            "employees",
            "in",
            "each",
            "role",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    19,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "products",
            "AS",
            "t1",
            "JOIN",
            "product_characteristics",
            "AS",
            "t2",
            "ON",
            "t1.product_id",
            "=",
            "t2.product_id",
            "JOIN",
            "CHARACTERISTICS",
            "AS",
            "t3",
            "ON",
            "t2.characteristic_id",
            "=",
            "t3.characteristic_id",
            "WHERE",
            "t1.product_name",
            "=",
            "``",
            "laurel",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "product_characteristics",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "characteristics",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "characteristic_id",
            "=",
            "t3",
            ".",
            "characteristic_id",
            "where",
            "t1",
            ".",
            "product_name",
            "=",
            "value"
        ],
        "question": "How many characteristics does the product named \"laurel\" have?",
        "question_toks": [
            "How",
            "many",
            "characteristics",
            "does",
            "the",
            "product",
            "named",
            "``",
            "laurel",
            "''",
            "have",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"laurel\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
        "query_toks": [
            "SELECT",
            "T1.city",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "temperature",
            "AS",
            "T2",
            "ON",
            "T1.city_id",
            "=",
            "T2.city_id",
            "WHERE",
            "T2.Mar",
            "<",
            "T2.Dec",
            "EXCEPT",
            "SELECT",
            "T3.city",
            "FROM",
            "city",
            "AS",
            "T3",
            "JOIN",
            "hosting_city",
            "AS",
            "T4",
            "ON",
            "T3.city_id",
            "=",
            "T4.host_city"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "city",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "temperature",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_id",
            "=",
            "t2",
            ".",
            "city_id",
            "where",
            "t2",
            ".",
            "mar",
            "<",
            "t2",
            ".",
            "dec",
            "except",
            "select",
            "t3",
            ".",
            "city",
            "from",
            "city",
            "as",
            "t3",
            "join",
            "hosting_city",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "city_id",
            "=",
            "t4",
            ".",
            "host_city"
        ],
        "question": "Give me a list of cities whose temperature in Mar is lower than that in Dec and which have never been host cities.",
        "question_toks": [
            "Give",
            "me",
            "a",
            "list",
            "of",
            "cities",
            "whose",
            "temperature",
            "in",
            "Mar",
            "is",
            "lower",
            "than",
            "that",
            "in",
            "Dec",
            "and",
            "which",
            "have",
            "never",
            "been",
            "host",
            "cities",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    [
                        0,
                        24,
                        false
                    ],
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            3
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\"",
        "query_toks": [
            "SELECT",
            "product_id",
            "FROM",
            "problems",
            "AS",
            "T1",
            "JOIN",
            "staff",
            "AS",
            "T2",
            "ON",
            "T1.reported_by_staff_id",
            "=",
            "T2.staff_id",
            "WHERE",
            "T2.staff_first_name",
            "=",
            "``",
            "Dameon",
            "''",
            "AND",
            "T2.staff_last_name",
            "=",
            "``",
            "Frami",
            "''",
            "UNION",
            "SELECT",
            "product_id",
            "FROM",
            "problems",
            "AS",
            "T1",
            "JOIN",
            "staff",
            "AS",
            "T2",
            "ON",
            "T1.reported_by_staff_id",
            "=",
            "T2.staff_id",
            "WHERE",
            "T2.staff_first_name",
            "=",
            "``",
            "Jolie",
            "''",
            "AND",
            "T2.staff_last_name",
            "=",
            "``",
            "Weber",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "product_id",
            "from",
            "problems",
            "as",
            "t1",
            "join",
            "staff",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "reported_by_staff_id",
            "=",
            "t2",
            ".",
            "staff_id",
            "where",
            "t2",
            ".",
            "staff_first_name",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "staff_last_name",
            "=",
            "value",
            "union",
            "select",
            "product_id",
            "from",
            "problems",
            "as",
            "t1",
            "join",
            "staff",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "reported_by_staff_id",
            "=",
            "t2",
            ".",
            "staff_id",
            "where",
            "t2",
            ".",
            "staff_first_name",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "staff_last_name",
            "=",
            "value"
        ],
        "question": "What are the id of problems reported by the staff named Dameon Frami or Jolie Weber?",
        "question_toks": [
            "What",
            "are",
            "the",
            "id",
            "of",
            "problems",
            "reported",
            "by",
            "the",
            "staff",
            "named",
            "Dameon",
            "Frami",
            "or",
            "Jolie",
            "Weber",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    "\"Dameon\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Frami\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            5
                        ],
                        [
                            "table_unit",
                            4
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    24,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    22,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ],
                        "\"Jolie\"",
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ],
                        "\"Weber\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3",
        "query_toks": [
            "SELECT",
            "T2.product_name",
            "FROM",
            "problems",
            "AS",
            "T1",
            "JOIN",
            "product",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "GROUP",
            "BY",
            "T2.product_name",
            "ORDER",
            "BY",
            "count",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "3"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "product_name",
            "from",
            "problems",
            "as",
            "t1",
            "join",
            "product",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "group",
            "by",
            "t2",
            ".",
            "product_name",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "What are the three products that have the most problems?s",
        "question_toks": [
            "What",
            "are",
            "the",
            "three",
            "products",
            "that",
            "have",
            "the",
            "most",
            "problems",
            "?",
            "s"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 3,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"",
        "query_toks": [
            "SELECT",
            "location_code",
            "FROM",
            "Ref_locations",
            "WHERE",
            "location_name",
            "=",
            "``",
            "Canada",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "location_code",
            "from",
            "ref_locations",
            "where",
            "location_name",
            "=",
            "value"
        ],
        "question": "What is the location code for the country \"Canada\"?",
        "question_toks": [
            "What",
            "is",
            "the",
            "location",
            "code",
            "for",
            "the",
            "country",
            "``",
            "Canada",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"Canada\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT count(DISTINCT product_type_code) FROM products_for_hire",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "DISTINCT",
            "product_type_code",
            ")",
            "FROM",
            "products_for_hire"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "distinct",
            "product_type_code",
            ")",
            "from",
            "products_for_hire"
        ],
        "question": "How many different product types are there?",
        "question_toks": [
            "How",
            "many",
            "different",
            "product",
            "types",
            "are",
            "there",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                24,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "founded",
            "FROM",
            "university",
            "ORDER",
            "BY",
            "enrollment",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "founded",
            "from",
            "university",
            "order",
            "by",
            "enrollment",
            "desc",
            "limit",
            "value"
        ],
        "question": "Return the founded year for the school with the largest enrollment.",
        "question_toks": [
            "Return",
            "the",
            "founded",
            "year",
            "for",
            "the",
            "school",
            "with",
            "the",
            "largest",
            "enrollment",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "document_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "BETWEEN",
            "1",
            "AND",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "group",
            "by",
            "document_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "between",
            "value",
            "and",
            "value"
        ],
        "question": "Give the ids of documents that have between one and two paragraphs.",
        "question_toks": [
            "Give",
            "the",
            "ids",
            "of",
            "documents",
            "that",
            "have",
            "between",
            "one",
            "and",
            "two",
            "paragraphs",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    2.0
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010",
        "query_toks": [
            "SELECT",
            "T1.city",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "hosting_city",
            "AS",
            "T2",
            "ON",
            "T1.city_id",
            "=",
            "T2.host_city",
            "WHERE",
            "T2.year",
            ">",
            "2010"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "city",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "hosting_city",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_id",
            "=",
            "t2",
            ".",
            "host_city",
            "where",
            "t2",
            ".",
            "year",
            ">",
            "value"
        ],
        "question": "Find the cities which were once a host city after 2010?",
        "question_toks": [
            "Find",
            "the",
            "cities",
            "which",
            "were",
            "once",
            "a",
            "host",
            "city",
            "after",
            "2010",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    2010.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "Competition",
            "FROM",
            "MATCH",
            "GROUP",
            "BY",
            "Competition"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "competition",
            "from",
            "match",
            "group",
            "by",
            "competition"
        ],
        "question": "For each competition, count the number of matches.",
        "question_toks": [
            "For",
            "each",
            "competition",
            ",",
            "count",
            "the",
            "number",
            "of",
            "matches",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "staff_first_name",
            ",",
            "staff_last_name",
            "FROM",
            "staff",
            "AS",
            "T1",
            "JOIN",
            "problem_log",
            "AS",
            "T2",
            "ON",
            "T1.staff_id",
            "=",
            "T2.assigned_to_staff_id",
            "WHERE",
            "T2.problem_id",
            "=",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "staff_first_name",
            ",",
            "staff_last_name",
            "from",
            "staff",
            "as",
            "t1",
            "join",
            "problem_log",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "staff_id",
            "=",
            "t2",
            ".",
            "assigned_to_staff_id",
            "where",
            "t2",
            ".",
            "problem_id",
            "=",
            "value"
        ],
        "question": "Which staff members are assigned to the problem with id 1? Give me their first and last names.",
        "question_toks": [
            "Which",
            "staff",
            "members",
            "are",
            "assigned",
            "to",
            "the",
            "problem",
            "with",
            "id",
            "1",
            "?",
            "Give",
            "me",
            "their",
            "first",
            "and",
            "last",
            "names",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
        "query_toks": [
            "SELECT",
            "employee_id",
            "FROM",
            "Employees",
            "EXCEPT",
            "SELECT",
            "Destroyed_by_Employee_ID",
            "FROM",
            "Documents_to_be_destroyed"
        ],
        "query_toks_no_value": [
            "select",
            "employee_id",
            "from",
            "employees",
            "except",
            "select",
            "destroyed_by_employee_id",
            "from",
            "documents_to_be_destroyed"
        ],
        "question": "Which employees do not destroy any document? Find their employee ids.",
        "question_toks": [
            "Which",
            "employees",
            "do",
            "not",
            "destroy",
            "any",
            "document",
            "?",
            "Find",
            "their",
            "employee",
            "ids",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            7
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    30,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\"",
        "query_toks": [
            "SELECT",
            "T2.document_type_name",
            "FROM",
            "All_documents",
            "AS",
            "T1",
            "JOIN",
            "Ref_document_types",
            "AS",
            "T2",
            "ON",
            "T1.document_type_code",
            "=",
            "T2.document_type_code",
            "WHERE",
            "T1.document_name",
            "=",
            "``",
            "How",
            "to",
            "read",
            "a",
            "book",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "document_type_name",
            "from",
            "all_documents",
            "as",
            "t1",
            "join",
            "ref_document_types",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "document_type_code",
            "=",
            "t2",
            ".",
            "document_type_code",
            "where",
            "t1",
            ".",
            "document_name",
            "=",
            "value"
        ],
        "question": "What is the document type name for the document with name \"How to read a book\"?",
        "question_toks": [
            "What",
            "is",
            "the",
            "document",
            "type",
            "name",
            "for",
            "the",
            "document",
            "with",
            "name",
            "``",
            "How",
            "to",
            "read",
            "a",
            "book",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"How to read a book\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\"",
        "query_toks": [
            "SELECT",
            "T3.venue",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "hosting_city",
            "AS",
            "T2",
            "ON",
            "T1.city_id",
            "=",
            "T2.host_city",
            "JOIN",
            "MATCH",
            "AS",
            "T3",
            "ON",
            "T2.match_id",
            "=",
            "T3.match_id",
            "WHERE",
            "T1.city",
            "=",
            "``",
            "Nanjing",
            "(",
            "Jiangsu",
            ")",
            "''",
            "AND",
            "T3.competition",
            "=",
            "``",
            "1994",
            "FIFA",
            "World",
            "Cup",
            "qualification",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t3",
            ".",
            "venue",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "hosting_city",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_id",
            "=",
            "t2",
            ".",
            "host_city",
            "join",
            "match",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "match_id",
            "=",
            "t3",
            ".",
            "match_id",
            "where",
            "t1",
            ".",
            "city",
            "=",
            "value",
            "and",
            "t3",
            ".",
            "competition",
            "=",
            "value"
        ],
        "question": "Find the venue of the competition \"1994 FIFA World Cup qualification\" which was hosted by \"Nanjing ( Jiangsu )\".",
        "question_toks": [
            "Find",
            "the",
            "venue",
            "of",
            "the",
            "competition",
            "``",
            "1994",
            "FIFA",
            "World",
            "Cup",
            "qualification",
            "''",
            "which",
            "was",
            "hosted",
            "by",
            "``",
            "Nanjing",
            "(",
            "Jiangsu",
            ")",
            "''",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Nanjing ( Jiangsu )\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"1994 FIFA World Cup qualification\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1",
        "query_toks": [
            "SELECT",
            "enrollment",
            ",",
            "primary_conference",
            "FROM",
            "university",
            "ORDER",
            "BY",
            "founded",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "enrollment",
            ",",
            "primary_conference",
            "from",
            "university",
            "order",
            "by",
            "founded",
            "limit",
            "value"
        ],
        "question": "What are the enrollment and primary conference for the university which was founded the earliest?",
        "question_toks": [
            "What",
            "are",
            "the",
            "enrollment",
            "and",
            "primary",
            "conference",
            "for",
            "the",
            "university",
            "which",
            "was",
            "founded",
            "the",
            "earliest",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "tracking_software_problems",
        "query": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "product",
            "AS",
            "T1",
            "JOIN",
            "problems",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "WHERE",
            "T1.product_name",
            "=",
            "``",
            "voluptatem",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "product",
            "as",
            "t1",
            "join",
            "problems",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "where",
            "t1",
            ".",
            "product_name",
            "=",
            "value"
        ],
        "question": "How many problems did the product called \"voluptatem\" have in record?",
        "question_toks": [
            "How",
            "many",
            "problems",
            "did",
            "the",
            "product",
            "called",
            "``",
            "voluptatem",
            "''",
            "have",
            "in",
            "record",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"voluptatem\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'",
        "query_toks": [
            "SELECT",
            "school",
            "FROM",
            "university",
            "WHERE",
            "founded",
            ">",
            "1850",
            "OR",
            "affiliation",
            "=",
            "'Public",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "school",
            "from",
            "university",
            "where",
            "founded",
            ">",
            "value",
            "or",
            "affiliation",
            "=",
            "value"
        ],
        "question": "Find the schools that were either founded after 1850 or public.",
        "question_toks": [
            "Find",
            "the",
            "schools",
            "that",
            "were",
            "either",
            "founded",
            "after",
            "1850",
            "or",
            "public",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    1850.0,
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ],
                    "\"Public\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT avg(amount_due) FROM payments",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "amount_due",
            ")",
            "FROM",
            "payments"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "amount_due",
            ")",
            "from",
            "payments"
        ],
        "question": "What is the average amount due for all the payments?",
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "amount",
            "due",
            "for",
            "all",
            "the",
            "payments",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                34,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id",
        "query_toks": [
            "SELECT",
            "document_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "document_id",
            "ORDER",
            "BY",
            "document_id"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "paragraphs",
            "group",
            "by",
            "document_id",
            "order",
            "by",
            "document_id"
        ],
        "question": "Show all document ids and the number of paragraphs in each document. Order by document id.",
        "question_toks": [
            "Show",
            "all",
            "document",
            "ids",
            "and",
            "the",
            "number",
            "of",
            "paragraphs",
            "in",
            "each",
            "document",
            ".",
            "Order",
            "by",
            "document",
            "id",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\"",
        "query_toks": [
            "SELECT",
            "role_name",
            ",",
            "role_description",
            "FROM",
            "ROLES",
            "WHERE",
            "role_code",
            "=",
            "``",
            "MG",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "role_name",
            ",",
            "role_description",
            "from",
            "roles",
            "where",
            "role_code",
            "=",
            "value"
        ],
        "question": "What are the name and description for role code \"MG\"?",
        "question_toks": [
            "What",
            "are",
            "the",
            "name",
            "and",
            "description",
            "for",
            "role",
            "code",
            "``",
            "MG",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"MG\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gymnast",
        "query": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "Hometown",
            "FROM",
            "people",
            "EXCEPT",
            "SELECT",
            "DISTINCT",
            "T2.Hometown",
            "FROM",
            "gymnast",
            "AS",
            "T1",
            "JOIN",
            "people",
            "AS",
            "T2",
            "ON",
            "T1.Gymnast_ID",
            "=",
            "T2.People_ID"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "hometown",
            "from",
            "people",
            "except",
            "select",
            "distinct",
            "t2",
            ".",
            "hometown",
            "from",
            "gymnast",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "gymnast_id",
            "=",
            "t2",
            ".",
            "people_id"
        ],
        "question": "List the distinct hometowns that are not associated with any gymnast.",
        "question_toks": [
            "List",
            "the",
            "distinct",
            "hometowns",
            "that",
            "are",
            "not",
            "associated",
            "with",
            "any",
            "gymnast",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    true,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    13,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2",
        "query_toks": [
            "SELECT",
            "Advisor",
            "FROM",
            "STUDENT",
            "GROUP",
            "BY",
            "Advisor",
            "HAVING",
            "COUNT",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            "from",
            "student",
            "group",
            "by",
            "advisor",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Which advisors have more than two students?",
        "question_toks": [
            "Which",
            "advisors",
            "have",
            "more",
            "than",
            "two",
            "students",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.Major",
            "FROM",
            "STUDENT",
            "AS",
            "T1",
            "JOIN",
            "VOTING_RECORD",
            "AS",
            "T2",
            "ON",
            "T1.StuID",
            "=",
            "T2.Treasurer_Vote"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "major",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "voting_record",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "treasurer_vote"
        ],
        "question": "Find the distinct majors of students who have treasurer votes.",
        "question_toks": [
            "Find",
            "the",
            "distinct",
            "majors",
            "of",
            "students",
            "who",
            "have",
            "treasurer",
            "votes",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'",
        "query_toks": [
            "SELECT",
            "school",
            ",",
            "LOCATION",
            "FROM",
            "university",
            "WHERE",
            "affiliation",
            "=",
            "'Public",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "school",
            ",",
            "location",
            "from",
            "university",
            "where",
            "affiliation",
            "=",
            "value"
        ],
        "question": "What are the public schools and what are their locations?",
        "question_toks": [
            "What",
            "are",
            "the",
            "public",
            "schools",
            "and",
            "what",
            "are",
            "their",
            "locations",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ],
                    "\"Public\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT max(Age) FROM STUDENT",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "Age",
            ")",
            "FROM",
            "STUDENT"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "age",
            ")",
            "from",
            "student"
        ],
        "question": "Find the maximum age of all the students.",
        "question_toks": [
            "Find",
            "the",
            "maximum",
            "age",
            "of",
            "all",
            "the",
            "students",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gymnast",
        "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\"",
        "query_toks": [
            "SELECT",
            "T2.Name",
            "FROM",
            "gymnast",
            "AS",
            "T1",
            "JOIN",
            "people",
            "AS",
            "T2",
            "ON",
            "T1.Gymnast_ID",
            "=",
            "T2.People_ID",
            "WHERE",
            "T2.Hometown",
            "!",
            "=",
            "``",
            "Santo",
            "Domingo",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "name",
            "from",
            "gymnast",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "gymnast_id",
            "=",
            "t2",
            ".",
            "people_id",
            "where",
            "t2",
            ".",
            "hometown",
            "!",
            "=",
            "value"
        ],
        "question": "Return the names of gymnasts who did not grow up in Santo Domingo.",
        "question_toks": [
            "Return",
            "the",
            "names",
            "of",
            "gymnasts",
            "who",
            "did",
            "not",
            "grow",
            "up",
            "in",
            "Santo",
            "Domingo",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "\"Santo Domingo\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;",
        "query_toks": [
            "SELECT",
            "T2.employee_name",
            ",",
            "T3.employee_name",
            "FROM",
            "Documents_to_be_destroyed",
            "AS",
            "T1",
            "JOIN",
            "Employees",
            "AS",
            "T2",
            "ON",
            "T1.Destruction_Authorised_by_Employee_ID",
            "=",
            "T2.employee_id",
            "JOIN",
            "Employees",
            "AS",
            "T3",
            "ON",
            "T1.Destroyed_by_Employee_ID",
            "=",
            "T3.employee_id",
            ";"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "employee_name",
            ",",
            "t3",
            ".",
            "employee_name",
            "from",
            "documents_to_be_destroyed",
            "as",
            "t1",
            "join",
            "employees",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "destruction_authorised_by_employee_id",
            "=",
            "t2",
            ".",
            "employee_id",
            "join",
            "employees",
            "as",
            "t3",
            "on",
            "t1",
            ".",
            "destroyed_by_employee_id",
            "=",
            "t3",
            ".",
            "employee_id"
        ],
        "question": "What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "the",
            "employees",
            "who",
            "authorised",
            "the",
            "destruction",
            "and",
            "the",
            "employees",
            "who",
            "destroyed",
            "the",
            "corresponding",
            "documents",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        7
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                29,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2",
        "query_toks": [
            "SELECT",
            "Advisor",
            "FROM",
            "STUDENT",
            "GROUP",
            "BY",
            "Advisor",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            "from",
            "student",
            "group",
            "by",
            "advisor",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Report the distinct advisors who have more than 2 students.",
        "question_toks": [
            "Report",
            "the",
            "distinct",
            "advisors",
            "who",
            "have",
            "more",
            "than",
            "2",
            "students",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "T1.city",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "temperature",
            "AS",
            "T2",
            "ON",
            "T1.city_id",
            "=",
            "T2.city_id",
            "ORDER",
            "BY",
            "T2.Feb",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "city",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "temperature",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_id",
            "=",
            "t2",
            ".",
            "city_id",
            "order",
            "by",
            "t2",
            ".",
            "feb",
            "desc",
            "limit",
            "value"
        ],
        "question": "Which city has the highest temperature in February?",
        "question_toks": [
            "Which",
            "city",
            "has",
            "the",
            "highest",
            "temperature",
            "in",
            "February",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"",
        "query_toks": [
            "SELECT",
            "T2.document_name",
            "FROM",
            "Templates",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.template_id",
            "=",
            "T2.template_id",
            "WHERE",
            "T1.template_type_code",
            "=",
            "``",
            "BK",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "document_name",
            "from",
            "templates",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "template_id",
            "=",
            "t2",
            ".",
            "template_id",
            "where",
            "t1",
            ".",
            "template_type_code",
            "=",
            "value"
        ],
        "question": "What are the names of documents that use templates with the code BK?",
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "documents",
            "that",
            "use",
            "templates",
            "with",
            "the",
            "code",
            "BK",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"BK\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"",
        "query_toks": [
            "SELECT",
            "Advisor",
            "FROM",
            "STUDENT",
            "WHERE",
            "city_code",
            "=",
            "``",
            "BAL",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            "from",
            "student",
            "where",
            "city_code",
            "=",
            "value"
        ],
        "question": "Who are the advisors for students that live in a city with city code \"BAL\"?",
        "question_toks": [
            "Who",
            "are",
            "the",
            "advisors",
            "for",
            "students",
            "that",
            "live",
            "in",
            "a",
            "city",
            "with",
            "city",
            "code",
            "``",
            "BAL",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"BAL\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Name",
            ",",
            "Nationality",
            "FROM",
            "HOST",
            "ORDER",
            "BY",
            "Age",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "name",
            ",",
            "nationality",
            "from",
            "host",
            "order",
            "by",
            "age",
            "desc",
            "limit",
            "value"
        ],
        "question": "Show the name and the nationality of the oldest host.",
        "question_toks": [
            "Show",
            "the",
            "name",
            "and",
            "the",
            "nationality",
            "of",
            "the",
            "oldest",
            "host",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor",
        "query_toks": [
            "SELECT",
            "Advisor",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "STUDENT",
            "GROUP",
            "BY",
            "Advisor"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "advisor"
        ],
        "question": "For each advisor, report the total number of students advised by him or her.",
        "question_toks": [
            "For",
            "each",
            "advisor",
            ",",
            "report",
            "the",
            "total",
            "number",
            "of",
            "students",
            "advised",
            "by",
            "him",
            "or",
            "her",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT count(*) FROM VOTING_RECORD",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "VOTING_RECORD"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "voting_record"
        ],
        "question": "How many voting records do we have?",
        "question_toks": [
            "How",
            "many",
            "voting",
            "records",
            "do",
            "we",
            "have",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "products",
            "AS",
            "t1",
            "JOIN",
            "product_characteristics",
            "AS",
            "t2",
            "ON",
            "t1.product_id",
            "=",
            "t2.product_id",
            "JOIN",
            "CHARACTERISTICS",
            "AS",
            "t3",
            "ON",
            "t2.characteristic_id",
            "=",
            "t3.characteristic_id",
            "WHERE",
            "t1.product_name",
            "=",
            "``",
            "laurel",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "product_characteristics",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "characteristics",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "characteristic_id",
            "=",
            "t3",
            ".",
            "characteristic_id",
            "where",
            "t1",
            ".",
            "product_name",
            "=",
            "value"
        ],
        "question": "Count the number of characteristics of the product named 'laurel'.",
        "question_toks": [
            "Count",
            "the",
            "number",
            "of",
            "characteristics",
            "of",
            "the",
            "product",
            "named",
            "'laurel",
            "'",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"laurel\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle",
        "query_toks": [
            "SELECT",
            "Election_Cycle",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "VOTING_RECORD",
            "GROUP",
            "BY",
            "Election_Cycle"
        ],
        "query_toks_no_value": [
            "select",
            "election_cycle",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "voting_record",
            "group",
            "by",
            "election_cycle"
        ],
        "question": "For each election cycle, report the number of voting records.",
        "question_toks": [
            "For",
            "each",
            "election",
            "cycle",
            ",",
            "report",
            "the",
            "number",
            "of",
            "voting",
            "records",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    11,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT avg(Number_of_hosts) FROM party",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "Number_of_hosts",
            ")",
            "FROM",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "number_of_hosts",
            ")",
            "from",
            "party"
        ],
        "question": "What is the average number of hosts for parties?",
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "number",
            "of",
            "hosts",
            "for",
            "parties",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76",
        "query_toks": [
            "SELECT",
            "T2.product_description",
            "FROM",
            "products_booked",
            "AS",
            "T1",
            "JOIN",
            "products_for_hire",
            "AS",
            "T2",
            "ON",
            "T1.product_id",
            "=",
            "T2.product_id",
            "WHERE",
            "T1.booked_amount",
            "=",
            "102.76"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "product_description",
            "from",
            "products_booked",
            "as",
            "t1",
            "join",
            "products_for_hire",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "where",
            "t1",
            ".",
            "booked_amount",
            "=",
            "value"
        ],
        "question": "What is the product description of the product booked with an amount of 102.76?",
        "question_toks": [
            "What",
            "is",
            "the",
            "product",
            "description",
            "of",
            "the",
            "product",
            "booked",
            "with",
            "an",
            "amount",
            "of",
            "102.76",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ],
                    102.76,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'",
        "query_toks": [
            "SELECT",
            "T1.paragraph_id",
            ",",
            "T1.paragraph_text",
            "FROM",
            "Paragraphs",
            "AS",
            "T1",
            "JOIN",
            "Documents",
            "AS",
            "T2",
            "ON",
            "T1.document_id",
            "=",
            "T2.document_id",
            "WHERE",
            "T2.Document_Name",
            "=",
            "'Welcome",
            "to",
            "NY",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "paragraph_id",
            ",",
            "t1",
            ".",
            "paragraph_text",
            "from",
            "paragraphs",
            "as",
            "t1",
            "join",
            "documents",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "document_id",
            "=",
            "t2",
            ".",
            "document_id",
            "where",
            "t2",
            ".",
            "document_name",
            "=",
            "value"
        ],
        "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            "and",
            "texts",
            "of",
            "paragraphs",
            "in",
            "the",
            "document",
            "titled",
            "'Welcome",
            "to",
            "NY",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Welcome to NY\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name",
        "query_toks": [
            "SELECT",
            "first_name",
            ",",
            "last_name",
            ",",
            "gender_mf",
            "FROM",
            "customers",
            "WHERE",
            "good_or_bad_customer",
            "=",
            "'good",
            "'",
            "ORDER",
            "BY",
            "last_name"
        ],
        "query_toks_no_value": [
            "select",
            "first_name",
            ",",
            "last_name",
            ",",
            "gender_mf",
            "from",
            "customers",
            "where",
            "good_or_bad_customer",
            "=",
            "value",
            "order",
            "by",
            "last_name"
        ],
        "question": "What are the first name, last name, and gender of all the good customers? Order by their last name.",
        "question_toks": [
            "What",
            "are",
            "the",
            "first",
            "name",
            ",",
            "last",
            "name",
            ",",
            "and",
            "gender",
            "of",
            "all",
            "the",
            "good",
            "customers",
            "?",
            "Order",
            "by",
            "their",
            "last",
            "name",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"good\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT sum(Amount_Settled) FROM Settlements",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "Amount_Settled",
            ")",
            "FROM",
            "Settlements"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "amount_settled",
            ")",
            "from",
            "settlements"
        ],
        "question": "What is the total amount of settlement made for all the settlements?",
        "question_toks": [
            "What",
            "is",
            "the",
            "total",
            "amount",
            "of",
            "settlement",
            "made",
            "for",
            "all",
            "the",
            "settlements",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                19,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct",
        "query_toks": [
            "SELECT",
            "T1.city",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "temperature",
            "AS",
            "T2",
            "ON",
            "T1.city_id",
            "=",
            "T2.city_id",
            "WHERE",
            "T2.Mar",
            "<",
            "T2.Jul",
            "OR",
            "T2.Mar",
            ">",
            "T2.Oct"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "city",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "temperature",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_id",
            "=",
            "t2",
            ".",
            "city_id",
            "where",
            "t2",
            ".",
            "mar",
            "<",
            "t2",
            ".",
            "jul",
            "or",
            "t2",
            ".",
            "mar",
            ">",
            "t2",
            ".",
            "oct"
        ],
        "question": "Give me a list of cities whose temperature in March is lower than that in July or higher than that in Oct?",
        "question_toks": [
            "Give",
            "me",
            "a",
            "list",
            "of",
            "cities",
            "whose",
            "temperature",
            "in",
            "March",
            "is",
            "lower",
            "than",
            "that",
            "in",
            "July",
            "or",
            "higher",
            "than",
            "that",
            "in",
            "Oct",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    [
                        0,
                        19,
                        false
                    ],
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE",
        "query_toks": [
            "SELECT",
            "DISTINCT",
            "T1.Fname",
            "FROM",
            "STUDENT",
            "AS",
            "T1",
            "JOIN",
            "VOTING_RECORD",
            "AS",
            "T2",
            "ON",
            "T1.StuID",
            "=",
            "T2.CLASS_Senator_VOTE"
        ],
        "query_toks_no_value": [
            "select",
            "distinct",
            "t1",
            ".",
            "fname",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "voting_record",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "t2",
            ".",
            "class_senator_vote"
        ],
        "question": "What are the distinct first names of the students who have class president votes?",
        "question_toks": [
            "What",
            "are",
            "the",
            "distinct",
            "first",
            "names",
            "of",
            "the",
            "students",
            "who",
            "have",
            "class",
            "president",
            "votes",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            17,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
        "query_toks": [
            "SELECT",
            "employee_id",
            "FROM",
            "Employees",
            "EXCEPT",
            "SELECT",
            "Destruction_Authorised_by_Employee_ID",
            "FROM",
            "Documents_to_be_destroyed"
        ],
        "query_toks_no_value": [
            "select",
            "employee_id",
            "from",
            "employees",
            "except",
            "select",
            "destruction_authorised_by_employee_id",
            "from",
            "documents_to_be_destroyed"
        ],
        "question": "Which employees do not authorize destruction for any document? Give me their employee ids.",
        "question_toks": [
            "Which",
            "employees",
            "do",
            "not",
            "authorize",
            "destruction",
            "for",
            "any",
            "document",
            "?",
            "Give",
            "me",
            "their",
            "employee",
            "ids",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            7
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    29,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2",
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "GROUP",
            "BY",
            "document_id",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            "BETWEEN",
            "1",
            "AND",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "group",
            "by",
            "document_id",
            "having",
            "count",
            "(",
            "*",
            ")",
            "between",
            "value",
            "and",
            "value"
        ],
        "question": "What is the document id with 1 to 2 paragraphs?",
        "question_toks": [
            "What",
            "is",
            "the",
            "document",
            "id",
            "with",
            "1",
            "to",
            "2",
            "paragraphs",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    15,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    1.0,
                    2.0
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "insurance_policies",
        "query": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id",
        "query_toks": [
            "SELECT",
            "customer_details",
            "FROM",
            "Customers",
            "EXCEPT",
            "SELECT",
            "T1.customer_details",
            "FROM",
            "Customers",
            "AS",
            "T1",
            "JOIN",
            "Customer_Policies",
            "AS",
            "T2",
            "ON",
            "T1.customer_id",
            "=",
            "T2.customer_id"
        ],
        "query_toks_no_value": [
            "select",
            "customer_details",
            "from",
            "customers",
            "except",
            "select",
            "t1",
            ".",
            "customer_details",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "customer_policies",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "customer_id",
            "=",
            "t2",
            ".",
            "customer_id"
        ],
        "question": "List the details of the customers who do not have any policies.",
        "question_toks": [
            "List",
            "the",
            "details",
            "of",
            "the",
            "customers",
            "who",
            "do",
            "not",
            "have",
            "any",
            "policies",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "T1.Age",
            ")",
            "FROM",
            "STUDENT",
            "AS",
            "T1",
            "JOIN",
            "VOTING_RECORD",
            "AS",
            "T2",
            "ON",
            "T1.StuID",
            "=",
            "SECRETARY_Vote",
            "WHERE",
            "T1.city_code",
            "=",
            "``",
            "NYC",
            "''",
            "AND",
            "T2.Election_Cycle",
            "=",
            "``",
            "Spring",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "t1",
            ".",
            "age",
            ")",
            "from",
            "student",
            "as",
            "t1",
            "join",
            "voting_record",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "stuid",
            "=",
            "secretary_vote",
            "where",
            "t1",
            ".",
            "city_code",
            "=",
            "value",
            "and",
            "t2",
            ".",
            "election_cycle",
            "=",
            "value"
        ],
        "question": "Find the average age of students who live in the city with code \"NYC\" and have secretary votes in the spring election cycle.",
        "question_toks": [
            "Find",
            "the",
            "average",
            "age",
            "of",
            "students",
            "who",
            "live",
            "in",
            "the",
            "city",
            "with",
            "code",
            "``",
            "NYC",
            "''",
            "and",
            "have",
            "secretary",
            "votes",
            "in",
            "the",
            "spring",
            "election",
            "cycle",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"NYC\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Spring\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct",
        "query_toks": [
            "SELECT",
            "T1.city",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "temperature",
            "AS",
            "T2",
            "ON",
            "T1.city_id",
            "=",
            "T2.city_id",
            "WHERE",
            "T2.Mar",
            "<",
            "T2.Jul",
            "OR",
            "T2.Mar",
            ">",
            "T2.Oct"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "city",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "temperature",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_id",
            "=",
            "t2",
            ".",
            "city_id",
            "where",
            "t2",
            ".",
            "mar",
            "<",
            "t2",
            ".",
            "jul",
            "or",
            "t2",
            ".",
            "mar",
            ">",
            "t2",
            ".",
            "oct"
        ],
        "question": "Which cities' temperature in March is lower than that in July or higher than that in Oct?",
        "question_toks": [
            "Which",
            "cities",
            "'",
            "temperature",
            "in",
            "March",
            "is",
            "lower",
            "than",
            "that",
            "in",
            "July",
            "or",
            "higher",
            "than",
            "that",
            "in",
            "Oct",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    [
                        0,
                        19,
                        false
                    ],
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor",
        "query_toks": [
            "SELECT",
            "Advisor",
            ",",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "STUDENT",
            "GROUP",
            "BY",
            "Advisor"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "student",
            "group",
            "by",
            "advisor"
        ],
        "question": "How many students does each advisor have?",
        "question_toks": [
            "How",
            "many",
            "students",
            "does",
            "each",
            "advisor",
            "have",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "query_toks": [
            "SELECT",
            "Nationality",
            "FROM",
            "HOST",
            "GROUP",
            "BY",
            "Nationality",
            "ORDER",
            "BY",
            "COUNT",
            "(",
            "*",
            ")",
            "DESC",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "nationality",
            "from",
            "host",
            "group",
            "by",
            "nationality",
            "order",
            "by",
            "count",
            "(",
            "*",
            ")",
            "desc",
            "limit",
            "value"
        ],
        "question": "Which nationality has the most hosts?",
        "question_toks": [
            "Which",
            "nationality",
            "has",
            "the",
            "most",
            "hosts",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    9,
                    false
                ]
            ],
            "having": [],
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2",
        "query_toks": [
            "SELECT",
            "Advisor",
            "FROM",
            "STUDENT",
            "GROUP",
            "BY",
            "Advisor",
            "HAVING",
            "count",
            "(",
            "*",
            ")",
            ">",
            "2"
        ],
        "query_toks_no_value": [
            "select",
            "advisor",
            "from",
            "student",
            "group",
            "by",
            "advisor",
            "having",
            "count",
            "(",
            "*",
            ")",
            ">",
            "value"
        ],
        "question": "Which advisors are advising more than 2 students?",
        "question_toks": [
            "Which",
            "advisors",
            "are",
            "advising",
            "more",
            "than",
            "2",
            "students",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    7,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            3,
                            0,
                            false
                        ],
                        null
                    ],
                    2.0,
                    null
                ]
            ],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            ",",
            "affiliation",
            "FROM",
            "university",
            "WHERE",
            "enrollment",
            ">",
            "20000",
            "GROUP",
            "BY",
            "affiliation"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            ",",
            "affiliation",
            "from",
            "university",
            "where",
            "enrollment",
            ">",
            "value",
            "group",
            "by",
            "affiliation"
        ],
        "question": "Find the number of universities that have over a 20000 enrollment size for each affiliation type.",
        "question_toks": [
            "Find",
            "the",
            "number",
            "of",
            "universities",
            "that",
            "have",
            "over",
            "a",
            "20000",
            "enrollment",
            "size",
            "for",
            "each",
            "affiliation",
            "type",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    20000.0,
                    null
                ]
            ],
            "groupBy": [
                [
                    0,
                    17,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'",
        "query_toks": [
            "SELECT",
            "T1.product_name",
            "FROM",
            "products",
            "AS",
            "T1",
            "JOIN",
            "ref_colors",
            "AS",
            "T2",
            "ON",
            "T1.color_code",
            "=",
            "T2.color_code",
            "WHERE",
            "T2.color_description",
            "=",
            "'yellow",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "product_name",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "ref_colors",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "color_code",
            "=",
            "t2",
            ".",
            "color_code",
            "where",
            "t2",
            ".",
            "color_description",
            "=",
            "value"
        ],
        "question": "Give the name of the products that have a color description 'yellow'.",
        "question_toks": [
            "Give",
            "the",
            "name",
            "of",
            "the",
            "products",
            "that",
            "have",
            "a",
            "color",
            "description",
            "'yellow",
            "'",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"yellow\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)",
        "query_toks": [
            "SELECT",
            "t2.team_name",
            "FROM",
            "university",
            "AS",
            "t1",
            "JOIN",
            "basketball_match",
            "AS",
            "t2",
            "ON",
            "t1.school_id",
            "=",
            "t2.school_id",
            "WHERE",
            "enrollment",
            "<",
            "(",
            "SELECT",
            "avg",
            "(",
            "enrollment",
            ")",
            "FROM",
            "university",
            ")"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "team_name",
            "from",
            "university",
            "as",
            "t1",
            "join",
            "basketball_match",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "school_id",
            "=",
            "t2",
            ".",
            "school_id",
            "where",
            "enrollment",
            "<",
            "(",
            "select",
            "avg",
            "(",
            "enrollment",
            ")",
            "from",
            "university",
            ")"
        ],
        "question": "Find the team names of the universities whose enrollments are smaller than the average enrollment size.",
        "question_toks": [
            "Find",
            "the",
            "team",
            "names",
            "of",
            "the",
            "universities",
            "whose",
            "enrollments",
            "are",
            "smaller",
            "than",
            "the",
            "average",
            "enrollment",
            "size",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    {
                        "from": {
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ],
                            "conds": []
                        },
                        "select": [
                            false,
                            [
                                [
                                    5,
                                    [
                                        0,
                                        [
                                            0,
                                            18,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "where": [],
                        "groupBy": [],
                        "having": [],
                        "orderBy": [],
                        "limit": null,
                        "intersect": null,
                        "union": null,
                        "except": null
                    },
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\"",
        "query_toks": [
            "SELECT",
            "match_id",
            "FROM",
            "MATCH",
            "WHERE",
            "competition",
            "=",
            "``",
            "1994",
            "FIFA",
            "World",
            "Cup",
            "qualification",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "match_id",
            "from",
            "match",
            "where",
            "competition",
            "=",
            "value"
        ],
        "question": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?",
        "question_toks": [
            "What",
            "is",
            "the",
            "match",
            "id",
            "of",
            "the",
            "competition",
            "called",
            "``",
            "1994",
            "FIFA",
            "World",
            "Cup",
            "qualification",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"1994 FIFA World Cup qualification\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'",
        "query_toks": [
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "WHERE",
            "paragraph_text",
            "=",
            "'Brazil",
            "'",
            "INTERSECT",
            "SELECT",
            "document_id",
            "FROM",
            "Paragraphs",
            "WHERE",
            "paragraph_text",
            "=",
            "'Ireland",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            "from",
            "paragraphs",
            "where",
            "paragraph_text",
            "=",
            "value",
            "intersect",
            "select",
            "document_id",
            "from",
            "paragraphs",
            "where",
            "paragraph_text",
            "=",
            "value"
        ],
        "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "question_toks": [
            "Show",
            "the",
            "document",
            "id",
            "with",
            "paragraph",
            "text",
            "'Brazil",
            "'",
            "and",
            "'Ireland",
            "'",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Brazil\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            3
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    15,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ],
                        "\"Ireland\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000",
        "query_toks": [
            "SELECT",
            "city",
            "FROM",
            "city",
            "WHERE",
            "regional_population",
            ">",
            "10000000",
            "UNION",
            "SELECT",
            "city",
            "FROM",
            "city",
            "WHERE",
            "regional_population",
            "<",
            "5000000"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            "from",
            "city",
            "where",
            "regional_population",
            ">",
            "value",
            "union",
            "select",
            "city",
            "from",
            "city",
            "where",
            "regional_population",
            "<",
            "value"
        ],
        "question": "Please give me a list of cities whose regional population is over 8000000 or under 5000000.",
        "question_toks": [
            "Please",
            "give",
            "me",
            "a",
            "list",
            "of",
            "cities",
            "whose",
            "regional",
            "population",
            "is",
            "over",
            "8000000",
            "or",
            "under",
            "5000000",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    10000000.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        4,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        5000000.0,
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        }
    },
    {
        "db_id": "gymnast",
        "query": "SELECT avg(Horizontal_Bar_Points) FROM gymnast",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "Horizontal_Bar_Points",
            ")",
            "FROM",
            "gymnast"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "horizontal_bar_points",
            ")",
            "from",
            "gymnast"
        ],
        "question": "What is the average horizontal bar points for all gymnasts?",
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "horizontal",
            "bar",
            "points",
            "for",
            "all",
            "gymnasts",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1",
        "query_toks": [
            "SELECT",
            "city",
            ",",
            "GDP",
            "FROM",
            "city",
            "ORDER",
            "BY",
            "GDP",
            "LIMIT",
            "1"
        ],
        "query_toks_no_value": [
            "select",
            "city",
            ",",
            "gdp",
            "from",
            "city",
            "order",
            "by",
            "gdp",
            "limit",
            "value"
        ],
        "question": "What is the city with the smallest GDP? Return the city and its GDP.",
        "question_toks": [
            "What",
            "is",
            "the",
            "city",
            "with",
            "the",
            "smallest",
            "GDP",
            "?",
            "Return",
            "the",
            "city",
            "and",
            "its",
            "GDP",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "limit": 1,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_for_hire",
        "query": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500",
        "query_toks": [
            "SELECT",
            "T1.good_or_bad_customer",
            "FROM",
            "customers",
            "AS",
            "T1",
            "JOIN",
            "discount_coupons",
            "AS",
            "T2",
            "ON",
            "T1.coupon_id",
            "=",
            "T2.coupon_id",
            "WHERE",
            "T2.coupon_amount",
            "=",
            "500"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "good_or_bad_customer",
            "from",
            "customers",
            "as",
            "t1",
            "join",
            "discount_coupons",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "coupon_id",
            "=",
            "t2",
            ".",
            "coupon_id",
            "where",
            "t2",
            ".",
            "coupon_amount",
            "=",
            "value"
        ],
        "question": "Are the customers holding coupons with amount 500 bad or good?",
        "question_toks": [
            "Are",
            "the",
            "customers",
            "holding",
            "coupons",
            "with",
            "amount",
            "500",
            "bad",
            "or",
            "good",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    500.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
        "query_toks": [
            "SELECT",
            "employee_id",
            "FROM",
            "Employees",
            "EXCEPT",
            "SELECT",
            "Destruction_Authorised_by_Employee_ID",
            "FROM",
            "Documents_to_be_destroyed"
        ],
        "query_toks_no_value": [
            "select",
            "employee_id",
            "from",
            "employees",
            "except",
            "select",
            "destruction_authorised_by_employee_id",
            "from",
            "documents_to_be_destroyed"
        ],
        "question": "Show the ids of the employees who don't authorize destruction for any document.",
        "question_toks": [
            "Show",
            "the",
            "ids",
            "of",
            "the",
            "employees",
            "who",
            "do",
            "n't",
            "authorize",
            "destruction",
            "for",
            "any",
            "document",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            7
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    29,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            }
        }
    },
    {
        "db_id": "voter_2",
        "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\"",
        "query_toks": [
            "SELECT",
            "Major",
            "FROM",
            "STUDENT",
            "WHERE",
            "Sex",
            "=",
            "``",
            "M",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "major",
            "from",
            "student",
            "where",
            "sex",
            "=",
            "value"
        ],
        "question": "What are the majors of male (sex is M) students?",
        "question_toks": [
            "What",
            "are",
            "the",
            "majors",
            "of",
            "male",
            "(",
            "sex",
            "is",
            "M",
            ")",
            "students",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"M\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"white\" OR t3.characteristic_name  =  \"hot\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "products",
            "AS",
            "t1",
            "JOIN",
            "product_characteristics",
            "AS",
            "t2",
            "ON",
            "t1.product_id",
            "=",
            "t2.product_id",
            "JOIN",
            "CHARACTERISTICS",
            "AS",
            "t3",
            "ON",
            "t2.characteristic_id",
            "=",
            "t3.characteristic_id",
            "JOIN",
            "ref_colors",
            "AS",
            "t4",
            "ON",
            "t1.color_code",
            "=",
            "t4.color_code",
            "WHERE",
            "t4.color_description",
            "=",
            "``",
            "white",
            "''",
            "OR",
            "t3.characteristic_name",
            "=",
            "``",
            "hot",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "as",
            "t1",
            "join",
            "product_characteristics",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "product_id",
            "=",
            "t2",
            ".",
            "product_id",
            "join",
            "characteristics",
            "as",
            "t3",
            "on",
            "t2",
            ".",
            "characteristic_id",
            "=",
            "t3",
            ".",
            "characteristic_id",
            "join",
            "ref_colors",
            "as",
            "t4",
            "on",
            "t1",
            ".",
            "color_code",
            "=",
            "t4",
            ".",
            "color_code",
            "where",
            "t4",
            ".",
            "color_description",
            "=",
            "value",
            "or",
            "t3",
            ".",
            "characteristic_name",
            "=",
            "value"
        ],
        "question": "How many products have their color described as 'white' or have a characteristic with the name 'hot'?",
        "question_toks": [
            "How",
            "many",
            "products",
            "have",
            "their",
            "color",
            "described",
            "as",
            "'white",
            "'",
            "or",
            "have",
            "a",
            "characteristic",
            "with",
            "the",
            "name",
            "'hot",
            "'",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ],
                    [
                        "table_unit",
                        5
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            21,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"white\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"hot\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
        "query_toks": [
            "SELECT",
            "T1.city",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "temperature",
            "AS",
            "T2",
            "ON",
            "T1.city_id",
            "=",
            "T2.city_id",
            "WHERE",
            "T2.Mar",
            "<",
            "T2.Jul",
            "INTERSECT",
            "SELECT",
            "T3.city",
            "FROM",
            "city",
            "AS",
            "T3",
            "JOIN",
            "hosting_city",
            "AS",
            "T4",
            "ON",
            "T3.city_id",
            "=",
            "T4.host_city"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "city",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "temperature",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_id",
            "=",
            "t2",
            ".",
            "city_id",
            "where",
            "t2",
            ".",
            "mar",
            "<",
            "t2",
            ".",
            "jul",
            "intersect",
            "select",
            "t3",
            ".",
            "city",
            "from",
            "city",
            "as",
            "t3",
            "join",
            "hosting_city",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "city_id",
            "=",
            "t4",
            ".",
            "host_city"
        ],
        "question": "Which cities have lower temperature in March than in July and have been once host cities?",
        "question_toks": [
            "Which",
            "cities",
            "have",
            "lower",
            "temperature",
            "in",
            "March",
            "than",
            "in",
            "July",
            "and",
            "have",
            "been",
            "once",
            "host",
            "cities",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    [
                        0,
                        19,
                        false
                    ],
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            3
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "party_host",
        "query": "SELECT Party_Theme ,  LOCATION FROM party",
        "query_toks": [
            "SELECT",
            "Party_Theme",
            ",",
            "LOCATION",
            "FROM",
            "party"
        ],
        "query_toks_no_value": [
            "select",
            "party_theme",
            ",",
            "location",
            "from",
            "party"
        ],
        "question": "Give me the theme and location of each party.",
        "question_toks": [
            "Give",
            "me",
            "the",
            "theme",
            "and",
            "location",
            "of",
            "each",
            "party",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\"",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "products",
            "WHERE",
            "product_category_code",
            "=",
            "``",
            "Seeds",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "products",
            "where",
            "product_category_code",
            "=",
            "value"
        ],
        "question": "How many products are there under the category \"Seeds\"?",
        "question_toks": [
            "How",
            "many",
            "products",
            "are",
            "there",
            "under",
            "the",
            "category",
            "``",
            "Seeds",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Seeds\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT max(Enrollment) FROM university",
        "query_toks": [
            "SELECT",
            "max",
            "(",
            "Enrollment",
            ")",
            "FROM",
            "university"
        ],
        "query_toks_no_value": [
            "select",
            "max",
            "(",
            "enrollment",
            ")",
            "from",
            "university"
        ],
        "question": "Return the maximum enrollment across all schools.",
        "question_toks": [
            "Return",
            "the",
            "maximum",
            "enrollment",
            "across",
            "all",
            "schools",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "coffee_shop",
        "query": "SELECT membership_card FROM member WHERE address  =  'Hartford' INTERSECT SELECT membership_card FROM member WHERE address  =  'Waterbury'",
        "query_toks": [
            "SELECT",
            "membership_card",
            "FROM",
            "member",
            "WHERE",
            "address",
            "=",
            "'Hartford",
            "'",
            "INTERSECT",
            "SELECT",
            "membership_card",
            "FROM",
            "member",
            "WHERE",
            "address",
            "=",
            "'Waterbury",
            "'"
        ],
        "query_toks_no_value": [
            "select",
            "membership_card",
            "from",
            "member",
            "where",
            "address",
            "=",
            "value",
            "intersect",
            "select",
            "membership_card",
            "from",
            "member",
            "where",
            "address",
            "=",
            "value"
        ],
        "question": "What is the membership card held by both members living in Hartford and ones living in Waterbury address?",
        "question_toks": [
            "What",
            "is",
            "the",
            "membership",
            "card",
            "held",
            "by",
            "both",
            "members",
            "living",
            "in",
            "Hartford",
            "and",
            "ones",
            "living",
            "in",
            "Waterbury",
            "address",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            12,
                            false
                        ],
                        null
                    ],
                    "\"Hartford\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            1
                        ]
                    ],
                    "conds": []
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    8,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ],
                        "\"Waterbury\"",
                        null
                    ]
                ],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "products_gen_characteristics",
        "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"",
        "query_toks": [
            "SELECT",
            "product_name",
            "FROM",
            "products",
            "WHERE",
            "product_category_code",
            "=",
            "``",
            "Spices",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "product_name",
            "from",
            "products",
            "where",
            "product_category_code",
            "=",
            "value"
        ],
        "question": "Return the names of products in the category 'Spices'.",
        "question_toks": [
            "Return",
            "the",
            "names",
            "of",
            "products",
            "in",
            "the",
            "category",
            "'Spices",
            "'",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Spices\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT template_id ,  version_number ,  template_type_code FROM Templates",
        "query_toks": [
            "SELECT",
            "template_id",
            ",",
            "version_number",
            ",",
            "template_type_code",
            "FROM",
            "Templates"
        ],
        "query_toks_no_value": [
            "select",
            "template_id",
            ",",
            "version_number",
            ",",
            "template_type_code",
            "from",
            "templates"
        ],
        "question": "Show template ids, version numbers, and template type codes for all templates.",
        "question_toks": [
            "Show",
            "template",
            "ids",
            ",",
            "version",
            "numbers",
            ",",
            "and",
            "template",
            "type",
            "codes",
            "for",
            "all",
            "templates",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\"",
        "query_toks": [
            "SELECT",
            "T2.Jan",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "temperature",
            "AS",
            "T2",
            "ON",
            "T1.city_id",
            "=",
            "T2.city_id",
            "WHERE",
            "T1.city",
            "=",
            "``",
            "Shanghai",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "jan",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "temperature",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_id",
            "=",
            "t2",
            ".",
            "city_id",
            "where",
            "t1",
            ".",
            "city",
            "=",
            "value"
        ],
        "question": "Give me the temperature of Shanghai in January.",
        "question_toks": [
            "Give",
            "me",
            "the",
            "temperature",
            "of",
            "Shanghai",
            "in",
            "January",
            "."
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Shanghai\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"",
        "query_toks": [
            "SELECT",
            "document_id",
            ",",
            "template_id",
            ",",
            "Document_Description",
            "FROM",
            "Documents",
            "WHERE",
            "document_name",
            "=",
            "``",
            "Robbin",
            "CV",
            "''"
        ],
        "query_toks_no_value": [
            "select",
            "document_id",
            ",",
            "template_id",
            ",",
            "document_description",
            "from",
            "documents",
            "where",
            "document_name",
            "=",
            "value"
        ],
        "question": "What is the document id, template id and description for document named \"Robbin CV\"?",
        "question_toks": [
            "What",
            "is",
            "the",
            "document",
            "id",
            ",",
            "template",
            "id",
            "and",
            "description",
            "for",
            "document",
            "named",
            "``",
            "Robbin",
            "CV",
            "''",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"Robbin CV\"",
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "city_record",
        "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
        "query_toks": [
            "SELECT",
            "T1.city",
            "FROM",
            "city",
            "AS",
            "T1",
            "JOIN",
            "temperature",
            "AS",
            "T2",
            "ON",
            "T1.city_id",
            "=",
            "T2.city_id",
            "WHERE",
            "T2.Feb",
            ">",
            "T2.Jun",
            "UNION",
            "SELECT",
            "T3.city",
            "FROM",
            "city",
            "AS",
            "T3",
            "JOIN",
            "hosting_city",
            "AS",
            "T4",
            "ON",
            "T3.city_id",
            "=",
            "T4.host_city"
        ],
        "query_toks_no_value": [
            "select",
            "t1",
            ".",
            "city",
            "from",
            "city",
            "as",
            "t1",
            "join",
            "temperature",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "city_id",
            "=",
            "t2",
            ".",
            "city_id",
            "where",
            "t2",
            ".",
            "feb",
            ">",
            "t2",
            ".",
            "jun",
            "union",
            "select",
            "t3",
            ".",
            "city",
            "from",
            "city",
            "as",
            "t3",
            "join",
            "hosting_city",
            "as",
            "t4",
            "on",
            "t3",
            ".",
            "city_id",
            "=",
            "t4",
            ".",
            "host_city"
        ],
        "question": "Which cities have higher temperature in Feb than in Jun or have once served as host cities?",
        "question_toks": [
            "Which",
            "cities",
            "have",
            "higher",
            "temperature",
            "in",
            "Feb",
            "than",
            "in",
            "Jun",
            "or",
            "have",
            "once",
            "served",
            "as",
            "host",
            "cities",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        2
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    [
                        0,
                        18,
                        false
                    ],
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": {
                "from": {
                    "table_units": [
                        [
                            "table_unit",
                            0
                        ],
                        [
                            "table_unit",
                            3
                        ]
                    ],
                    "conds": [
                        [
                            false,
                            2,
                            [
                                0,
                                [
                                    0,
                                    1,
                                    false
                                ],
                                null
                            ],
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                },
                "select": [
                    false,
                    [
                        [
                            0,
                            [
                                0,
                                [
                                    0,
                                    2,
                                    false
                                ],
                                null
                            ]
                        ]
                    ]
                ],
                "where": [],
                "groupBy": [],
                "having": [],
                "orderBy": [],
                "limit": null,
                "intersect": null,
                "union": null,
                "except": null
            },
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation",
        "query_toks": [
            "SELECT",
            "sum",
            "(",
            "enrollment",
            ")",
            ",",
            "affiliation",
            "FROM",
            "university",
            "GROUP",
            "BY",
            "affiliation"
        ],
        "query_toks_no_value": [
            "select",
            "sum",
            "(",
            "enrollment",
            ")",
            ",",
            "affiliation",
            "from",
            "university",
            "group",
            "by",
            "affiliation"
        ],
        "question": "What are the total enrollments of universities of each affiliation type?",
        "question_toks": [
            "What",
            "are",
            "the",
            "total",
            "enrollments",
            "of",
            "universities",
            "of",
            "each",
            "affiliation",
            "type",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    17,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "query": "SELECT count(*) FROM Ref_calendar",
        "query_toks": [
            "SELECT",
            "count",
            "(",
            "*",
            ")",
            "FROM",
            "Ref_calendar"
        ],
        "query_toks_no_value": [
            "select",
            "count",
            "(",
            "*",
            ")",
            "from",
            "ref_calendar"
        ],
        "question": "How many calendar items do we have?",
        "question_toks": [
            "How",
            "many",
            "calendar",
            "items",
            "do",
            "we",
            "have",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "university_basketball",
        "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850",
        "query_toks": [
            "SELECT",
            "avg",
            "(",
            "enrollment",
            ")",
            "FROM",
            "university",
            "WHERE",
            "founded",
            "<",
            "1850"
        ],
        "query_toks_no_value": [
            "select",
            "avg",
            "(",
            "enrollment",
            ")",
            "from",
            "university",
            "where",
            "founded",
            "<",
            "value"
        ],
        "question": "What are the average enrollment size of the universities that are founded before 1850?",
        "question_toks": [
            "What",
            "are",
            "the",
            "average",
            "enrollment",
            "size",
            "of",
            "the",
            "universities",
            "that",
            "are",
            "founded",
            "before",
            "1850",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": []
            },
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                18,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    1850.0,
                    null
                ]
            ],
            "groupBy": [],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    },
    {
        "db_id": "gymnast",
        "query": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown",
        "query_toks": [
            "SELECT",
            "T2.Hometown",
            ",",
            "COUNT",
            "(",
            "*",
            ")",
            "FROM",
            "gymnast",
            "AS",
            "T1",
            "JOIN",
            "people",
            "AS",
            "T2",
            "ON",
            "T1.Gymnast_ID",
            "=",
            "T2.People_ID",
            "GROUP",
            "BY",
            "T2.Hometown"
        ],
        "query_toks_no_value": [
            "select",
            "t2",
            ".",
            "hometown",
            ",",
            "count",
            "(",
            "*",
            ")",
            "from",
            "gymnast",
            "as",
            "t1",
            "join",
            "people",
            "as",
            "t2",
            "on",
            "t1",
            ".",
            "gymnast_id",
            "=",
            "t2",
            ".",
            "people_id",
            "group",
            "by",
            "t2",
            ".",
            "hometown"
        ],
        "question": "How many gymnasts are from each hometown?",
        "question_toks": [
            "How",
            "many",
            "gymnasts",
            "are",
            "from",
            "each",
            "hometown",
            "?"
        ],
        "sql": {
            "from": {
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        1
                    ]
                ],
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ]
                ]
            },
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "where": [],
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [],
            "orderBy": [],
            "limit": null,
            "intersect": null,
            "union": null,
            "except": null
        }
    }
]